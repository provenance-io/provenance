name: Docker Build and Push
# Build & Push builds the simapp docker image on every push to master
# and pushes the image to https://hub.docker.com/u/provenanceio and ghcr.io/provenance-io/provenance
on:
  pull_request:
    paths:
      - docker/blockchain/Dockerfile
      - .github/workflows/docker.yml
      - "**.go"
      - "go.mod"
      - "go.sum"
  push:
    branches:
      - main
    tags:
      - '**'

env:
  DOCKER_IMAGE: "provenanceio/provenance"
  GHCR_IMAGE: "ghcr.io/provenance-io/provenance"

# Set concurrency for this workflow to cancel in-progress jobs if retriggered.
# The github.ref is only available when triggered by a PR so fall back to github.run_id for other cases.
# The github.run_id is unique for each run, giving each such invocation it's own unique concurrency group.
# Basically, if you push to a PR branch, jobs that are still running for that PR will be cancelled.
# But jobs started because of a merge to main or a release tag push are not cancelled.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true
jobs:
  heighliner-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: docker/setup-buildx-action@v3

      - uses: docker/setup-qemu-action@v3

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.DOCKER_IMAGE }}
          flavor: |
            prefix=heighliner-,onlatest=true
          tags: |
            type=edge
            type=ref,event=pr
            type=ref,event=tag
            
      - uses: docker/metadata-action@v5
        id: meta-ghcr
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
        with:
          images: ${{ env.GHCR_IMAGE }}
          flavor: |
            prefix=heighliner-,onlatest=true
          tags: |
            type=edge
            type=ref,event=pr
            type=ref,event=tag

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - uses: docker/login-action@v3
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # lock to "linux/amd64" only for now since cross compilation is throwing errors
      - uses: strangelove-ventures/heighliner-build-action@main
        with:
          heighliner-tag: v1.7.0
          chain: provenance
          local: true
          tag: ${{ steps.meta.outputs.version }}
          registry: provenanceio
          platform: linux/amd64
          dockerfile: cosmos
          build-target: |
            make install
          binaries: |
            - /go/bin/provenanced
          build-env: |
            - "WITH_LEDGER=false"
            - "BUILD_TAGS=muslc musl dynamic"
          skip: ${{ github.event_name == 'pull_request' }}

      # Mirror the heighliner image from Docker Hub to GHCR (registry-to-registry, no local pull)
      - name: Mirror heighliner image to GHCR
        if: (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) && github.event_name != 'pull_request'
        run: |
          # Use the GHCR tags from metadata
          GHCR_TAGS="${{ steps.meta-ghcr.outputs.tags }}"
          DOCKERHUB_TAGS="${{ steps.meta.outputs.tags }}"
          
          echo "Mirroring heighliner images to GHCR..."
          echo "Docker Hub tags: $DOCKERHUB_TAGS"
          echo "GHCR tags: $GHCR_TAGS"
          
          # Convert Docker Hub tags to GHCR tags and mirror
          echo "$DOCKERHUB_TAGS" | while IFS= read -r dockerhub_tag; do
            if [[ "$dockerhub_tag" == "provenanceio/provenance:"* ]]; then
              # Extract the tag suffix
              TAG_SUFFIX="${dockerhub_tag#provenanceio/provenance:}"
              GHCR_TAG="ghcr.io/provenance-io/provenance:${TAG_SUFFIX}"
              
              echo "Mirroring $dockerhub_tag to $GHCR_TAG"
              docker buildx imagetools create --tag "$GHCR_TAG" "$dockerhub_tag"
            fi
          done

  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod'

      - run: go mod vendor

      - uses: docker/setup-buildx-action@v3

      - uses: docker/setup-qemu-action@v3

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=edge
            type=ref,event=pr
            type=ref,event=tag

      - uses: docker/metadata-action@v5
        id: meta-ghcr
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
        with:
          images: ${{ env.GHCR_IMAGE }}
          tags: |
            type=edge
            type=ref,event=pr
            type=ref,event=tag
          labels: |
            org.opencontainers.image.source=https://github.com/provenance-io/provenance

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/login-action@v3
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          context: .
          target: run
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
          platforms: linux/amd64,linux/arm64
          file: docker/blockchain/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
      
      - name: Build and push to GHCR
        if: (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) && github.event_name != 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: .
          target: run
          build-args: |
            VERSION=${{ steps.meta-ghcr.outputs.version }}
          platforms: linux/amd64,linux/arm64
          file: docker/blockchain/Dockerfile
          push: true
          tags: ${{ steps.meta-ghcr.outputs.tags }}
          labels: ${{ steps.meta-ghcr.outputs.labels }}
