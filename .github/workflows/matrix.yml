name: Provenance Matrix

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"     # Push events to matching v*, i.e. v1.0, v20.15.10
      - "v[0-9]+.[0-9]+.[0-9]+-rc*" # Push events to matching v*, i.e. v1.0-rc1, v20.15.10-rc5

jobs:
  #  This action cleans up previously running instances of a workflow on the same branch. This accomplishes
  #  the task of automatically cancelling CI runs on pushes to the same branch, which is a common feature in
  #  most CI systems but currently not possible with GitHub actions.
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/main'"

  build:
    runs-on: ubuntu-latest
    name: Build Linux
    steps:
      - uses: actions/checkout@v2
      - name: Install leveldb
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get install -y libleveldb-dev
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Set tag version
        id: get_ver
        run: |
          echo "::set-output name=release_tag::${GITHUB_REF##*/}"
      - name: Create release ${{ steps.get_ver.outputs.release_tag }}
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body_path: RELEASE_CHANGELOG.md
      - name: Build release and plan
        run: |
          make RELEASE_TAG=${{ steps.get_ver.outputs.release_tag }} build-release
      - name: Upload release zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/provenance-linux-amd64-${{ steps.get_ver.outputs.release_tag }}.zip
          asset_name: provenance-linux-amd64-${{ steps.get_ver.outputs.release_tag }}.zip
          asset_content_type: application/octet-stream
      - name: Upload release checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/sha256sum.txt
          asset_name: sha256sum.txt
          asset_content_type: application/octet-stream
      - name: Upload release plan
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/plan-${{ steps.get_ver.outputs.release_tag }}.json
          asset_name: plan-${{ steps.get_ver.outputs.release_tag }}.json
          asset_content_type: application/octet-stream
