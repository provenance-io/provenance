name: Protobuf Checks
# This workflow runs some Protobuf related checks.
on:
  pull_request:
    paths:
      - "**/**.proto"
      - "**/go.mod"
      - ".github/workflows/proto.yml"
      - "scripts/proto-update-check.sh"
      - "scripts/proto-update-deps.sh"

# Set concurrency for this workflow to cancel in-progress jobs if retriggered.
# The github.ref is only available when triggered by a PR so fall back to github.run_id for other cases.
# The github.run_id is unique for each run, giving each such invocation it's own unique concurrency group.
# Basically, if you push to a PR branch, jobs that are still running for that PR will be cancelled.
# But jobs started because of a merge to main or a release tag push are not cancelled.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  buf_lint:
    runs-on: ubuntu-latest
    name: Protobuf Checks
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Setup Job
        id: setup
        run: |
          branch='main'
          if [ -n "$GITHUB_BASE_REF" ]; then
            branch="$GITHUB_BASE_REF"
          fi
          echo "Setting output: base-branch=$branch"
          echo "base-branch=$branch" >> "$GITHUB_OUTPUT"
      - uses: bufbuild/buf-setup-action@v1.33.0
      - uses: bufbuild/buf-lint-action@v1.1.1
        if: always()
        with:
          input: 'proto'
      - name: provenance breaking
        id: breaking-prov
        if: always()
        uses: bufbuild/buf-breaking-action@v1.1.4
        with:
          input: 'proto'
          against: 'https://github.com/provenance-io/provenance.git#branch=${{ steps.setup.outputs.base-branch }},subdir=proto'
      - name: provenance breaking results
        if: always() && steps.breaking-prov.outcome == 'failure'
        run: |
          echo "results:"
          echo "${{ toJSON(steps.breaking-prov.outputs) }}"
      - name: third-party breaking
        id: breaking-third
        if: always()
        uses: bufbuild/buf-breaking-action@v1.1.4
        with:
          input: 'third_party/proto'
          against: 'https://github.com/provenance-io/provenance.git#branch=${{ steps.setup.outputs.base-branch }},subdir=third_party/proto'
      - name: third-party breaking results
        if: always() && steps.breaking-third.outcome == 'failure'
        run: |
          echo "results:"
          echo "${{ toJSON(steps.breaking-third.outputs) }}"
      - name: proto-update-check
        if: always()
        run: |
          BASE_BRANCH="..origin/${{ steps.setup.outputs.base-branch }}"
          export BASE_BRANCH
          make proto-update-check
