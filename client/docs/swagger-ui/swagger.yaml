swagger: '2.0'
info:
  title: Provenance Blockchain
  description: Provenance Blockchain Node Application
  version: 1.0.0
paths:
  '/name/{name}':
    get:
      summary: Get an account address by name.
      tags:
        - Name
      description: Resolve the account address for a name.
      produces:
        - application/json
      parameters:
        - in: path
          name: name
          description: Name
          required: true
          type: string
          x-example: id.member.provenance.io
      responses:
        '200':
          description: Name with the resolved account address
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                properties:
                  name:
                    type: string
                  address:
                    type: string
        '404':
          description: Not found
          schema:
            type: object
            properties:
              error:
                type: string
  '/name/{address}/names':
    get:
      summary: Reverse lookup; show all names bound to the given address.
      tags:
        - Name
      description: Reverse lookup; show all names bound to the given address.
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Address
          required: true
          type: string
          x-example: tp12g82txgl6z9xec8v2qnqvrcq5meqw94myng2qu
      responses:
        '200':
          description: Records containing all names bound.
        '404':
          description: Not found
  '/name/{address}/pointer':
    get:
      summary: Reverse lookup by pointer; show all names containing the given pointer
      tags:
        - Name
      description: Reverse lookup by pointer; show all names containing the given pointer
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Address
          required: true
          type: string
          x-example: tp12g82txgl6z9xec8v2qnqvrcq5meqw94myng2qu
      responses:
        '200':
          description: Records containing all names containing the given pointer.
        '404':
          description: Not found
  /name:
    post:
      summary: >-
        Generate an unsigned transaction that will bind a name to an address
        under a given root.
      tags:
        - Name
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          description: 'The name, address, and root info.'
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              name:
                type: string
              address:
                type: string
              root:
                type: string
              restricted:
                type: boolean
      responses:
        '200':
          description: Tx was succesfully generated
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /name/pointer:
    post:
      summary: >-
        Generate an unsigned transaction that will set a value exchange address
        (marker pointer) in a name record.
      tags:
        - Name
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          description: name and marker address.
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              name:
                type: string
              pointer:
                type: string
      responses:
        '200':
          description: Tx was succesfully generated
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    delete:
      summary: >-
        Generate an unsigned transaction that will remove a value exchange
        address (marker pointer) in a name record.
      tags:
        - Name
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          description: name and marker address.
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              name:
                type: string
      responses:
        '200':
          description: Tx was succesfully generated
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  '/account/{address}/attributes':
    get:
      summary: Get all attributes for the given account address.
      tags:
        - Account
      description: Get all account attributes
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Bech32 Account Address
          required: true
          type: string
          x-example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
      responses:
        '200':
          description: The typed key-value pair attributes for the account.
        '404':
          description: Not found
  '/account/{address}/attributes/{name}':
    get:
      summary: Get attributes for the account address with the given name.
      tags:
        - Account
      description: Get account attributes by name
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Bech32 Account Address
          required: true
          type: string
          x-example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
        - in: path
          name: name
          description: Attribute Name
          required: true
          type: string
          x-example: id.member.provenance.io
      responses:
        '200':
          description: The typed attributes for the account.
        '404':
          description: Not found
  '/account/{address}/scan/{suffix}':
    get:
      summary: Get attributes for the account address with the given name suffix
      tags:
        - Account
      description: Get account attributes by name suffix
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Bech32 Account Address
          required: true
          type: string
          x-example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
        - in: path
          name: suffix
          description: Attribute Name Suffix
          required: true
          type: string
          x-example: provenance.io
      responses:
        '200':
          description: The typed attributes for the account.
        '404':
          description: Not found
  /account/attributes:
    post:
      summary: >-
        Generate an unsigned transaction that will add an attribute to an
        account.
      tags:
        - Account
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          description: >-
            Generate an unsigned transaction that will add an attribute to an
            account.
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              name:
                type: string
              value:
                type: string
              type:
                type: string
              account:
                type: string
      responses:
        '200':
          description: Tx was succesfully generated
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    delete:
      summary: >-
        Generate an unsigned transaction that will remove an attribute from an
        account.
      tags:
        - Account
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          description: >-
            Generate an unsigned transaction that will remove an attribute from
            an account.
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              name:
                type: string
              account:
                type: string
      responses:
        '200':
          description: Tx was succesfully generated
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  '/spec/contract/{hash}':
    get:
      summary: Get a contract specification by hash.
      tags:
        - Spec
      description: Get a contract specification by hash
      produces:
        - application/json
      parameters:
        - in: path
          name: hash
          description: Sha512 hash of the contract spec in hexadecimal format.
          required: true
          type: string
          x-example: >-
            06d735ba0736fc07b888d49b6fd6b3f6336cd58badd31e7f7e1771a634a1c806f307a929f0dfc9c2b9a695d139750b58a107d34fab30eef6c79bac0b42399afd
      responses:
        '200':
          description: The contract spec.
        '404':
          description: Not found
  /spec/contract:
    post:
      summary: >-
        Generate an unsigned transaction that will add a contract specification
        to the provenance blockchain.
      tags:
        - Spec
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          description: Generate an unsigned transaction that will add a contract spec.
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              contract_spec:
                type: object
      responses:
        '200':
          description: Tx was succesfully generated
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  '/metadata/ownership/{address}':
    get:
      summary: Get Scope IDs owned by the provided address.
      tags:
        - Metadata
      description: Get Scope IDs the provided address is party to.
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          type: string
          x-example: tp1rr4d0eu62pgt4edw38d2ev27798pfhdhp5ttha
      responses:
        '200':
          description: Scope IDs for Scopes owned by the provided address.
        '404':
          description: Not found
        '500':
          description: Internal server error
  '/metadata/scope/{uuid}':
    get:
      summary: Get a scope by UUID.
      tags:
        - Metadata
      description: Get a scope by UUID.
      produces:
        - application/json
      parameters:
        - in: path
          name: uuid
          description: Scope UUID
          required: true
          type: string
          x-example: 4ef1a8b4-8ff4-4c84-992b-3704b4b2404d
      responses:
        '200':
          description: The scope.
        '404':
          description: Not found
  '/metadata/scope/{uuid}/history':
    get:
      summary: Get scope history by UUID.
      tags:
        - Metadata
      description: Get scope history by UUID.
      produces:
        - application/json
      parameters:
        - in: path
          name: uuid
          description: Scope UUID
          required: true
          type: string
          x-example: 4ef1a8b4-8ff4-4c84-992b-3704b4b2404d
      responses:
        '200':
          description: The scope history.
        '404':
          description: Not found
  /metadata/contract:
    post:
      summary: >-
        Generate an unsigned transaction that will memorialize a contract on the
        provenance blockchain.
      tags:
        - Metadata
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          description: Generate an unsigned transaction that will memorialize a contract.
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              scope_id:
                type: string
              group_id:
                type: string
              execution_id:
                type: string
              contract:
                type: string
              signatures:
                type: string
              scope_ref_id:
                type: string
      responses:
        '200':
          description: Tx was succesfully generated
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /metadata/ownership:
    post:
      summary: >-
        Generate an unsigned transaction that will update scope ownership on the
        provenance blockchain.
      tags:
        - Metadata
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          description: Generate an unsigned transaction that will memorialize a contract.
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              scope_id:
                type: string
              recitals:
                type: string
              signatures:
                type: string
              invoker:
                type: string
                description: bech32 encoded address
                example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
      responses:
        '200':
          description: Tx was succesfully generated
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /marker/all:
    get:
      summary: Returns a list of all markers.
      tags:
        - Marker
      produces:
        - application/json
      parameters: null
      responses:
        '200':
          description: Tx was succesfully generated
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  '/marker/holders/{id}':
    get:
      summary: >-
        Returns a list of all the addresses that are holding the given marker
        denom/address.
      tags:
        - Marker
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: Marker id
          required: true
          type: string
          x-example: hotdogcoin
        - in: query
          name: page
          description: page being asked for
          required: false
          type: int
          x-example: 1
        - in: query
          name: limit
          description: limit of the page
          required: false
          type: int
          x-example: 10
        - in: query
          name: status
          description: status of the marker
          required: false
          type: string
          x-example: active
      responses:
        '200':
          description: The scope history.
        '404':
          description: Not found
  '/marker/detail/{id}':
    get:
      summary: Returns the marker for a given address or denom.
      tags:
        - Marker
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: addres or denom
          required: true
          type: string
          x-example: hotdogcoin
  '/marker/accesscontrol/{id}':
    get:
      summary: Returns the permissions assigned to a marker.
      tags:
        - Marker
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: addres or denom
          required: true
          type: string
          x-example: hotdogcoin
  '/marker/assets/{id}':
    get:
      summary: Returns a list of scope uuids that are assigned to this marker.
      tags:
        - Marker
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: addres or denom
          required: true
          type: string
          x-example: hotdogcoin
  '/marker/escrow/{id}':
    get:
      summary: Returns the coins held in this marker.
      tags:
        - Marker
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: addres or denom
          required: true
          type: string
          x-example: hotdogcoin
  '/marker/supply/{id}':
    get:
      summary: Returns the total supply of this marker.
      tags:
        - Marker
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: addres or denom
          required: true
          type: string
          x-example: hotdogcoin
  '/marker/{denom}/mint':
    post:
      summary: mint value of certain denom to a marker.
      tags:
        - Marker
      produces:
        - application/json
      parameters:
        - in: body
          name: supplyrequest
          description: The coin type and recipient.
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              amount:
                type: object
                properties:
                  denom:
                    type: string
                    example: vspn
                  amount:
                    type: string
                    example: '5000'
              recipient:
                type: string
                description: bech32 encoded address
                example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
  '/marker/{denom}/burn':
    post:
      summary: burn value of a certain denom in a marker.
      tags:
        - Marker
      produces:
        - application/json
      parameters:
        - in: body
          name: supplyrequest
          description: The coin type and recipient.
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              amount:
                type: object
                properties:
                  denom:
                    type: string
                    example: vspn
                  amount:
                    type: string
                    example: '5000'
              recipient:
                type: string
                description: bech32 encoded address
                example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
  '/marker/{denom}/status':
    post:
      summary: set status of marker.
      tags:
        - Marker
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          description: denon and what status to change marker to.
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              new_status:
                type: string
  '/marker/{denom}/create':
    post:
      summary: create marker.
      tags:
        - Marker
      produces:
        - application/json
      parameters:
        - in: body
          name: newMarkerRequest
          description: create marker.
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              supply:
                type: string
              manager:
                type: string
  '/marker/{denom}/withdraw':
    post:
      summary: withdraw value of a certain denom from a marker.
      tags:
        - Marker
      produces:
        - application/json
      parameters:
        - in: body
          name: supplyRequest
          description: withdraw marker.
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              amount:
                type: object
                properties:
                  denom:
                    type: string
                    example: vspn
                  amount:
                    type: string
                    example: '5000'
              recipient:
                type: string
                description: bech32 encoded address
                example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
  '/marker/{denom}/grant':
    post:
      summary: grant value of certain denom to marker.
      tags:
        - Marker
      produces:
        - application/json
      parameters:
        - in: body
          name: markerAccessRequest
          description: withdraw marker.
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              address:
                type: string
              grant:
                type: string
  '/marker/{denom}/revoke':
    post:
      summary: reduce value of a certain denom stored in a marker.
      tags:
        - Marker
      produces:
        - application/json
      parameters:
        - in: body
          name: markerAccessRequest
          description: withdraw marker.
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              address:
                type: string
              grant:
                type: string
  /node_info:
    get:
      description: Information about the connected node
      summary: The properties of the connected node
      tags:
        - Tendermint RPC
      produces:
        - application/json
      responses:
        '200':
          description: Node status
          schema:
            type: object
            properties:
              application_version:
                properties:
                  build_tags:
                    type: string
                  client_name:
                    type: string
                  commit:
                    type: string
                  go:
                    type: string
                  name:
                    type: string
                  server_name:
                    type: string
                  version:
                    type: string
              node_info:
                properties:
                  id:
                    type: string
                  moniker:
                    type: string
                    example: validator-name
                  protocol_version:
                    properties:
                      p2p:
                        type: string
                        example: 7
                      block:
                        type: string
                        example: 10
                      app:
                        type: string
                        example: 0
                  network:
                    type: string
                    example: provenance-2
                  channels:
                    type: string
                  listen_addr:
                    type: string
                    example: '192.168.56.1:26656'
                  version:
                    description: Tendermint version
                    type: string
                    example: 0.15.0
                  other:
                    description: more information on versions
                    type: object
                    properties:
                      tx_index:
                        type: string
                        example: 'on'
                      rpc_address:
                        type: string
                        example: 'tcp://0.0.0.0:26657'
        '500':
          description: Failed to query node status
  /syncing:
    get:
      summary: Syncing state of node
      tags:
        - Tendermint RPC
      description: Get if the node is currently syning with other nodes
      produces:
        - application/json
      responses:
        '200':
          description: Node syncing status
          schema:
            type: object
            properties:
              syncing:
                type: boolean
        '500':
          description: Server internal error
  /blocks/latest:
    get:
      summary: Get the latest block
      tags:
        - Tendermint RPC
      produces:
        - application/json
      responses:
        '200':
          description: The latest block
          schema:
            type: object
            properties:
              block_meta:
                type: object
                properties:
                  header:
                    type: object
                    properties:
                      chain_id:
                        type: string
                        example: provenance-test-chain
                      height:
                        type: number
                        example: 1
                      time:
                        type: string
                        example: '2017-12-30T05:53:09.287+01:00'
                      num_txs:
                        type: number
                        example: 0
                      last_block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          parts:
                            type: object
                            properties:
                              total:
                                type: number
                                example: 0
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      total_txs:
                        type: number
                        example: 35
                      last_commit_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      data_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      validators_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      next_validators_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      consensus_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      app_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      last_results_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      evidence_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      proposer_address:
                        type: string
                        description: bech32 encoded address
                        example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
                      version:
                        type: object
                        properties:
                          block:
                            type: string
                            example: 10
                          app:
                            type: string
                            example: 0
                  block_id:
                    type: object
                    properties:
                      hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      parts:
                        type: object
                        properties:
                          total:
                            type: number
                            example: 0
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
              block:
                type: object
                properties:
                  header:
                    type: object
                    properties:
                      chain_id:
                        type: string
                        example: provenance-test-chain
                      height:
                        type: number
                        example: 1
                      time:
                        type: string
                        example: '2017-12-30T05:53:09.287+01:00'
                      num_txs:
                        type: number
                        example: 0
                      last_block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          parts:
                            type: object
                            properties:
                              total:
                                type: number
                                example: 0
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      total_txs:
                        type: number
                        example: 35
                      last_commit_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      data_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      validators_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      next_validators_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      consensus_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      app_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      last_results_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      evidence_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      proposer_address:
                        type: string
                        description: bech32 encoded address
                        example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
                      version:
                        type: object
                        properties:
                          block:
                            type: string
                            example: 10
                          app:
                            type: string
                            example: 0
                  txs:
                    type: array
                    items:
                      type: string
                  evidence:
                    type: array
                    items:
                      type: string
                  last_commit:
                    type: object
                    properties:
                      block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          parts:
                            type: object
                            properties:
                              total:
                                type: number
                                example: 0
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      precommits:
                        type: array
                        items:
                          type: object
                          properties:
                            validator_address:
                              type: string
                            validator_index:
                              type: string
                              example: '0'
                            height:
                              type: string
                              example: '0'
                            round:
                              type: string
                              example: '0'
                            timestamp:
                              type: string
                              example: '2017-12-30T05:53:09.287+01:00'
                            type:
                              type: number
                              example: 2
                            block_id:
                              type: object
                              properties:
                                hash:
                                  type: string
                                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                                parts:
                                  type: object
                                  properties:
                                    total:
                                      type: number
                                      example: 0
                                    hash:
                                      type: string
                                      example: EE5F3404034C524501629B56E0DDC38FAD651F04
                            signature:
                              type: string
                              example: >-
                                7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
        '500':
          description: Server internal error
  '/blocks/{height}':
    get:
      summary: Get a block at a certain height
      tags:
        - Tendermint RPC
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          type: number
          x-example: 1
      responses:
        '200':
          description: The block at a specific height
          schema:
            type: object
            properties:
              block_meta:
                type: object
                properties:
                  header:
                    type: object
                    properties:
                      chain_id:
                        type: string
                        example: provenance-test-chain
                      height:
                        type: number
                        example: 1
                      time:
                        type: string
                        example: '2017-12-30T05:53:09.287+01:00'
                      num_txs:
                        type: number
                        example: 0
                      last_block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          parts:
                            type: object
                            properties:
                              total:
                                type: number
                                example: 0
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      total_txs:
                        type: number
                        example: 35
                      last_commit_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      data_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      validators_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      next_validators_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      consensus_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      app_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      last_results_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      evidence_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      proposer_address:
                        type: string
                        description: bech32 encoded address
                        example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
                      version:
                        type: object
                        properties:
                          block:
                            type: string
                            example: 10
                          app:
                            type: string
                            example: 0
                  block_id:
                    type: object
                    properties:
                      hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      parts:
                        type: object
                        properties:
                          total:
                            type: number
                            example: 0
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
              block:
                type: object
                properties:
                  header:
                    type: object
                    properties:
                      chain_id:
                        type: string
                        example: provenance-test-chain
                      height:
                        type: number
                        example: 1
                      time:
                        type: string
                        example: '2017-12-30T05:53:09.287+01:00'
                      num_txs:
                        type: number
                        example: 0
                      last_block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          parts:
                            type: object
                            properties:
                              total:
                                type: number
                                example: 0
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      total_txs:
                        type: number
                        example: 35
                      last_commit_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      data_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      validators_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      next_validators_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      consensus_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      app_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      last_results_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      evidence_hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      proposer_address:
                        type: string
                        description: bech32 encoded address
                        example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
                      version:
                        type: object
                        properties:
                          block:
                            type: string
                            example: 10
                          app:
                            type: string
                            example: 0
                  txs:
                    type: array
                    items:
                      type: string
                  evidence:
                    type: array
                    items:
                      type: string
                  last_commit:
                    type: object
                    properties:
                      block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            example: EE5F3404034C524501629B56E0DDC38FAD651F04
                          parts:
                            type: object
                            properties:
                              total:
                                type: number
                                example: 0
                              hash:
                                type: string
                                example: EE5F3404034C524501629B56E0DDC38FAD651F04
                      precommits:
                        type: array
                        items:
                          type: object
                          properties:
                            validator_address:
                              type: string
                            validator_index:
                              type: string
                              example: '0'
                            height:
                              type: string
                              example: '0'
                            round:
                              type: string
                              example: '0'
                            timestamp:
                              type: string
                              example: '2017-12-30T05:53:09.287+01:00'
                            type:
                              type: number
                              example: 2
                            block_id:
                              type: object
                              properties:
                                hash:
                                  type: string
                                  example: EE5F3404034C524501629B56E0DDC38FAD651F04
                                parts:
                                  type: object
                                  properties:
                                    total:
                                      type: number
                                      example: 0
                                    hash:
                                      type: string
                                      example: EE5F3404034C524501629B56E0DDC38FAD651F04
                            signature:
                              type: string
                              example: >-
                                7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
        '400':
          description: Invalid height
        '404':
          description: Request block height doesn't
        '500':
          description: Server internal error
  /validatorsets/latest:
    get:
      summary: Get the latest validator set
      tags:
        - Tendermint RPC
      produces:
        - application/json
      responses:
        '200':
          description: The validator set at the latest block height
          schema:
            type: object
            properties:
              block_height:
                type: string
              validators:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      description: bech32 encoded address
                      example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
                    pub_key:
                      type: string
                      example: >-
                        pbvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
                    voting_power:
                      type: string
                      example: '1000'
                    proposer_priority:
                      type: string
                      example: '1000'
        '500':
          description: Server internal error
  '/validatorsets/{height}':
    get:
      summary: Get a validator set a certain height
      tags:
        - Tendermint RPC
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          type: number
          x-example: 1
      responses:
        '200':
          description: The validator set at a specific block height
          schema:
            type: object
            properties:
              block_height:
                type: string
              validators:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      description: bech32 encoded address
                      example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
                    pub_key:
                      type: string
                      example: >-
                        pbvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
                    voting_power:
                      type: string
                      example: '1000'
                    proposer_priority:
                      type: string
                      example: '1000'
        '400':
          description: Invalid height
        '404':
          description: Block at height not available
        '500':
          description: Server internal error
  '/txs/{hash}':
    get:
      summary: Get a Tx by hash
      tags:
        - Transactions
      description: Retrieve a transaction using its hash.
      produces:
        - application/json
      parameters:
        - in: path
          name: hash
          description: Tx hash
          required: true
          type: string
          x-example: BCBE20E8D46758B96AE5883B792858296AC06E51435490FBDCAE25A72B3CC76B
      responses:
        '200':
          description: Tx with the provided hash
          schema:
            type: object
            properties:
              hash:
                type: string
                example: >-
                  D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656
              height:
                type: number
                example: 368
              tx:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: object
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: vspn
                            amount:
                              type: string
                              example: '5000'
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: >-
                          MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: '0'
                      sequence:
                        type: string
                        example: '0'
              result:
                type: object
                properties:
                  log:
                    type: string
                  gas_wanted:
                    type: string
                    example: '200000'
                  gas_used:
                    type: string
                    example: '26354'
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
        '500':
          description: Internal Server Error
  /txs:
    get:
      tags:
        - Transactions
      summary: Search transactions
      description: Search transactions by events.
      produces:
        - application/json
      parameters:
        - in: query
          name: message.action
          type: string
          description: >-
            transaction events such as 'message.action=send' which results in
            the following endpoint: 'GET /txs?message.action=send'. note that
            each module documents its own events. look for xx_events.md in the
            corresponding cosmos-sdk/docs/spec directory
          x-example: send
        - in: query
          name: message.sender
          type: string
          description: >-
            transaction tags with sender: 'GET
            /txs?message.action=send&message.sender=tp1rr4d0eu62pgt4edw38d2ev27798pfhdhp5ttha'
          x-example: tp1rr4d0eu62pgt4edw38d2ev27798pfhdhp5ttha
        - in: query
          name: page
          description: Page number
          type: integer
          x-example: 1
        - in: query
          name: limit
          description: Maximum number of items per page
          type: integer
          x-example: 1
        - in: query
          name: tx.minheight
          type: integer
          description: transactions on blocks with height greater or equal this value
          x-example: 25
        - in: query
          name: tx.maxheight
          type: integer
          description: transactions on blocks with height less than or equal this value
          x-example: 800000
      responses:
        '200':
          description: All txs matching the provided events
          schema:
            type: object
            properties:
              total_count:
                type: number
                example: 1
              count:
                type: number
                example: 1
              page_number:
                type: number
                example: 1
              page_total:
                type: number
                example: 1
              limit:
                type: number
                example: 30
              txs:
                type: array
                items:
                  type: object
                  properties:
                    hash:
                      type: string
                      example: >-
                        D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656
                    height:
                      type: number
                      example: 368
                    tx:
                      type: object
                      properties:
                        msg:
                          type: array
                          items:
                            type: object
                        fee:
                          type: object
                          properties:
                            gas:
                              type: string
                            amount:
                              type: array
                              items:
                                type: object
                                properties:
                                  denom:
                                    type: string
                                    example: vspn
                                  amount:
                                    type: string
                                    example: '5000'
                        memo:
                          type: string
                        signature:
                          type: object
                          properties:
                            signature:
                              type: string
                              example: >-
                                MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                            pub_key:
                              type: object
                              properties:
                                type:
                                  type: string
                                  example: tendermint/PubKeySecp256k1
                                value:
                                  type: string
                                  example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                            account_number:
                              type: string
                              example: '0'
                            sequence:
                              type: string
                              example: '0'
                    result:
                      type: object
                      properties:
                        log:
                          type: string
                        gas_wanted:
                          type: string
                          example: '200000'
                        gas_used:
                          type: string
                          example: '26354'
                        tags:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              value:
                                type: string
        '400':
          description: Invalid search events
        '500':
          description: Internal Server Error
    post:
      tags:
        - Transactions
      summary: Broadcast a signed tx
      description: Broadcast a signed tx to a full node
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: txBroadcast
          description: >-
            The tx must be a signed StdTx. The supported broadcast modes include
            `"block"`(return after tx commit), `"sync"`(return afer CheckTx) and
            `"async"`(return right away).
          required: true
          schema:
            type: object
            properties:
              tx:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: object
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: vspn
                            amount:
                              type: string
                              example: '5000'
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: >-
                          MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: '0'
                      sequence:
                        type: string
                        example: '0'
              mode:
                type: string
                example: block
      responses:
        '200':
          description: Tx broadcasting result
          schema:
            type: object
            properties:
              check_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 0
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              deliver_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 5
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              height:
                type: integer
        '500':
          description: Internal Server Error
  /txs/encode:
    post:
      tags:
        - Transactions
      summary: Encode a transaction to the Amino wire format
      description: >-
        Encode a transaction (signed or not) from JSON to base64-encoded Amino
        serialized bytes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tx
          description: The tx to encode
          required: true
          schema:
            type: object
            properties:
              tx:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: object
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: vspn
                            amount:
                              type: string
                              example: '5000'
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: >-
                          MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: '0'
                      sequence:
                        type: string
                        example: '0'
      responses:
        '200':
          description: The tx was successfully decoded and re-encoded
          schema:
            type: object
            properties:
              tx:
                type: string
                example: The base64-encoded Amino-serialized bytes for the tx
        '400':
          description: The tx was malformated
        '500':
          description: Server internal error
  /txs/decode:
    post:
      tags:
        - Transactions
      summary: Decode a transaction from the Amino wire format
      description: >-
        Decode a transaction (signed or not) from base64-encoded Amino
        serialized bytes to JSON
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tx
          description: The tx to decode
          required: true
          schema:
            type: object
            properties:
              tx:
                type: string
                example: >-
                  SvBiXe4KPqijYZoKFFHEzJ8c2HPAfv2EFUcIhx0yPagwEhTy0vPA+GGhCEslKXa4Af0uB+mfShoMCgVzdGFrZRIDMTAwEgQQwJoM
      responses:
        '200':
          description: The tx was successfully decoded
          schema:
            type: object
            properties:
              msg:
                type: array
                items:
                  type: object
              fee:
                type: object
                properties:
                  gas:
                    type: string
                  amount:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
              memo:
                type: string
              signature:
                type: object
                properties:
                  signature:
                    type: string
                    example: >-
                      MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                  pub_key:
                    type: object
                    properties:
                      type:
                        type: string
                        example: tendermint/PubKeySecp256k1
                      value:
                        type: string
                        example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '0'
        '400':
          description: The tx was malformated
        '500':
          description: Server internal error
  '/bank/balances/{address}':
    get:
      summary: Get the account balances
      tags:
        - Bank
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          type: string
          x-example: tp1rr4d0eu62pgt4edw38d2ev27798pfhdhp5ttha
      responses:
        '200':
          description: Account balances
          schema:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                  example: vspn
                amount:
                  type: string
                  example: '5000'
        '500':
          description: Server internal error
  '/bank/accounts/{address}/transfers':
    post:
      summary: Send coins from one account to another
      tags:
        - Bank
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          type: string
          x-example: tp1rr4d0eu62pgt4edw38d2ev27798pfhdhp5ttha
        - in: body
          name: account
          description: The sender and tx information
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              amount:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: vspn
                    amount:
                      type: string
                      example: '5000'
      responses:
        '202':
          description: Tx was succesfully generated
          schema:
            type: object
            properties:
              msg:
                type: array
                items:
                  type: object
              fee:
                type: object
                properties:
                  gas:
                    type: string
                  amount:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
              memo:
                type: string
              signature:
                type: object
                properties:
                  signature:
                    type: string
                    example: >-
                      MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                  pub_key:
                    type: object
                    properties:
                      type:
                        type: string
                        example: tendermint/PubKeySecp256k1
                      value:
                        type: string
                        example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '0'
        '400':
          description: Invalid request
        '500':
          description: Server internal error
  '/auth/accounts/{address}':
    get:
      summary: Get the account information on blockchain
      tags:
        - Auth
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address
          required: true
          type: string
          x-example: tp1rr4d0eu62pgt4edw38d2ev27798pfhdhp5ttha
      responses:
        '200':
          description: Account information on the blockchain
          schema:
            type: object
            properties:
              type:
                type: string
              value:
                type: object
                properties:
                  account_number:
                    type: string
                  address:
                    type: string
                  coins:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  public_key:
                    type: object
                    properties:
                      type:
                        type: string
                      value:
                        type: string
                  sequence:
                    type: string
        '500':
          description: Server internel error
  '/staking/delegators/{delegatorAddr}/delegations':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: tp1rr4d0eu62pgt4edw38d2ev27798pfhdhp5ttha
    get:
      summary: Get all delegations from a delegator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                delegator_address:
                  type: string
                validator_address:
                  type: string
                shares:
                  type: string
                balance:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: vspn
                    amount:
                      type: string
                      example: '5000'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
    post:
      summary: Submit delegation
      parameters:
        - in: body
          name: delegation
          description: The password of the account to remove from the KMS
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              delegator_address:
                type: string
                description: bech32 encoded address
                example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
              validator_address:
                type: string
                description: bech32 encoded address
                example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
              delegation:
                type: object
                properties:
                  denom:
                    type: string
                    example: vspn
                  amount:
                    type: string
                    example: '5000'
      tags:
        - Staking
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              check_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 0
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              deliver_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 5
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              height:
                type: integer
        '400':
          description: Invalid delegator address or delegation request body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
  '/staking/delegators/{delegatorAddr}/delegations/{validatorAddr}':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: tp1rr4d0eu62pgt4edw38d2ev27798pfhdhp5ttha
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Query the current delegation between a delegator and a validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              delegator_address:
                type: string
              validator_address:
                type: string
              shares:
                type: string
              balance:
                type: object
                properties:
                  denom:
                    type: string
                    example: vspn
                  amount:
                    type: string
                    example: '5000'
        '400':
          description: Invalid delegator address or validator address
        '500':
          description: Internal Server Error
  '/staking/delegators/{delegatorAddr}/unbonding_delegations':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: tp1rr4d0eu62pgt4edw38d2ev27798pfhdhp5ttha
    get:
      summary: Get all unbonding delegations from a delegator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                delegator_address:
                  type: string
                validator_address:
                  type: string
                initial_balance:
                  type: string
                balance:
                  type: string
                creation_height:
                  type: integer
                min_time:
                  type: integer
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
    post:
      summary: Submit an unbonding delegation
      parameters:
        - in: body
          name: delegation
          description: The password of the account to remove from the KMS
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              delegator_address:
                type: string
                description: bech32 encoded address
                example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
              validator_address:
                type: string
                description: bech32 encoded address
                example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
              shares:
                type: string
                example: '100'
      tags:
        - Staking
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              check_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 0
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              deliver_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 5
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              height:
                type: integer
        '400':
          description: Invalid delegator address or unbonding delegation request body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
  '/staking/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: tp1rr4d0eu62pgt4edw38d2ev27798pfhdhp5ttha
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Query all unbonding delegations between a delegator and a validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              delegator_address:
                type: string
              validator_address:
                type: string
              entries:
                type: array
                items:
                  type: object
                  properties:
                    initial_balance:
                      type: string
                    balance:
                      type: string
                    creation_height:
                      type: string
                    min_time:
                      type: string
        '400':
          description: Invalid delegator address or validator address
        '500':
          description: Internal Server Error
  /staking/redelegations:
    parameters:
      - in: query
        name: delegator
        description: Bech32 AccAddress of Delegator
        required: false
        type: string
      - in: query
        name: validator_from
        description: Bech32 ValAddress of SrcValidator
        required: false
        type: string
      - in: query
        name: validator_to
        description: Bech32 ValAddress of DstValidator
        required: false
        type: string
    get:
      summary: Get all redelegations (filter by query params)
      tags:
        - Staking
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Redelegation'
        '500':
          description: Internal Server Error
  '/staking/delegators/{delegatorAddr}/redelegations':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: tp1rr4d0eu62pgt4edw38d2ev27798pfhdhp5ttha
    post:
      summary: Submit a redelegation
      parameters:
        - in: body
          name: delegation
          description: The sender and tx information
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              delegator_address:
                type: string
                description: bech32 encoded address
                example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
              validator_src_addressess:
                type: string
                description: bech32 encoded address
                example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
              validator_dst_address:
                type: string
                description: bech32 encoded address
                example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
              shares:
                type: string
                example: '100'
      tags:
        - Staking
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Tx was succesfully generated
          schema:
            type: object
            properties:
              msg:
                type: array
                items:
                  type: object
              fee:
                type: object
                properties:
                  gas:
                    type: string
                  amount:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
              memo:
                type: string
              signature:
                type: object
                properties:
                  signature:
                    type: string
                    example: >-
                      MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                  pub_key:
                    type: object
                    properties:
                      type:
                        type: string
                        example: tendermint/PubKeySecp256k1
                      value:
                        type: string
                        example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '0'
        '400':
          description: Invalid delegator address or redelegation request body
        '500':
          description: Internal Server Error
  '/staking/delegators/{delegatorAddr}/validators':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: tp1rr4d0eu62pgt4edw38d2ev27798pfhdhp5ttha
    get:
      summary: Query all validators that a delegator is bonded to
      tags:
        - Staking
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                operator_address:
                  type: string
                  description: bech32 encoded address
                  example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
                consensus_pubkey:
                  type: string
                  example: >-
                    pbvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
                jailed:
                  type: boolean
                status:
                  type: integer
                tokens:
                  type: string
                delegator_shares:
                  type: string
                description:
                  type: object
                  properties:
                    moniker:
                      type: string
                    identity:
                      type: string
                    website:
                      type: string
                    security_contact:
                      type: string
                    details:
                      type: string
                bond_height:
                  type: string
                  example: '0'
                bond_intra_tx_counter:
                  type: integer
                  example: 0
                unbonding_height:
                  type: string
                  example: '0'
                unbonding_time:
                  type: string
                  example: '1970-01-01T00:00:00Z'
                commission:
                  type: object
                  properties:
                    rate:
                      type: string
                      example: '0'
                    max_rate:
                      type: string
                      example: '0'
                    max_change_rate:
                      type: string
                      example: '0'
                    update_time:
                      type: string
                      example: '1970-01-01T00:00:00Z'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
  '/staking/delegators/{delegatorAddr}/validators/{validatorAddr}':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: tp1rr4d0eu62pgt4edw38d2ev27798pfhdhp5ttha
      - in: path
        name: validatorAddr
        description: Bech32 ValAddress of Delegator
        required: true
        type: string
        x-example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Query a validator that a delegator is bonded to
      tags:
        - Staking
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              operator_address:
                type: string
                description: bech32 encoded address
                example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
              consensus_pubkey:
                type: string
                example: >-
                  pbvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
              jailed:
                type: boolean
              status:
                type: integer
              tokens:
                type: string
              delegator_shares:
                type: string
              description:
                type: object
                properties:
                  moniker:
                    type: string
                  identity:
                    type: string
                  website:
                    type: string
                  security_contact:
                    type: string
                  details:
                    type: string
              bond_height:
                type: string
                example: '0'
              bond_intra_tx_counter:
                type: integer
                example: 0
              unbonding_height:
                type: string
                example: '0'
              unbonding_time:
                type: string
                example: '1970-01-01T00:00:00Z'
              commission:
                type: object
                properties:
                  rate:
                    type: string
                    example: '0'
                  max_rate:
                    type: string
                    example: '0'
                  max_change_rate:
                    type: string
                    example: '0'
                  update_time:
                    type: string
                    example: '1970-01-01T00:00:00Z'
        '400':
          description: Invalid delegator address or validator address
        '500':
          description: Internal Server Error
  /staking/validators:
    get:
      summary: >-
        Get all validator candidates. By default it returns only the bonded
        validators.
      parameters:
        - in: query
          name: status
          type: string
          description: >-
            The validator bond status. Must be either 'bonded', 'unbonded', or
            'unbonding'.
          x-example: bonded
        - in: query
          name: page
          description: The page number.
          type: integer
          x-example: 1
        - in: query
          name: limit
          description: The maximum number of items per page.
          type: integer
          x-example: 1
      tags:
        - Staking
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                operator_address:
                  type: string
                  description: bech32 encoded address
                  example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
                consensus_pubkey:
                  type: string
                  example: >-
                    pbvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
                jailed:
                  type: boolean
                status:
                  type: integer
                tokens:
                  type: string
                delegator_shares:
                  type: string
                description:
                  type: object
                  properties:
                    moniker:
                      type: string
                    identity:
                      type: string
                    website:
                      type: string
                    security_contact:
                      type: string
                    details:
                      type: string
                bond_height:
                  type: string
                  example: '0'
                bond_intra_tx_counter:
                  type: integer
                  example: 0
                unbonding_height:
                  type: string
                  example: '0'
                unbonding_time:
                  type: string
                  example: '1970-01-01T00:00:00Z'
                commission:
                  type: object
                  properties:
                    rate:
                      type: string
                      example: '0'
                    max_rate:
                      type: string
                      example: '0'
                    max_change_rate:
                      type: string
                      example: '0'
                    update_time:
                      type: string
                      example: '1970-01-01T00:00:00Z'
        '500':
          description: Internal Server Error
  '/staking/validators/{validatorAddr}':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Query the information from a single validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              operator_address:
                type: string
                description: bech32 encoded address
                example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
              consensus_pubkey:
                type: string
                example: >-
                  pbvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
              jailed:
                type: boolean
              status:
                type: integer
              tokens:
                type: string
              delegator_shares:
                type: string
              description:
                type: object
                properties:
                  moniker:
                    type: string
                  identity:
                    type: string
                  website:
                    type: string
                  security_contact:
                    type: string
                  details:
                    type: string
              bond_height:
                type: string
                example: '0'
              bond_intra_tx_counter:
                type: integer
                example: 0
              unbonding_height:
                type: string
                example: '0'
              unbonding_time:
                type: string
                example: '1970-01-01T00:00:00Z'
              commission:
                type: object
                properties:
                  rate:
                    type: string
                    example: '0'
                  max_rate:
                    type: string
                    example: '0'
                  max_change_rate:
                    type: string
                    example: '0'
                  update_time:
                    type: string
                    example: '1970-01-01T00:00:00Z'
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
  '/staking/validators/{validatorAddr}/delegations':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Get all delegations from a validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                delegator_address:
                  type: string
                validator_address:
                  type: string
                shares:
                  type: string
                balance:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: vspn
                    amount:
                      type: string
                      example: '5000'
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
  '/staking/validators/{validatorAddr}/unbonding_delegations':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Get all unbonding delegations from a validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                delegator_address:
                  type: string
                validator_address:
                  type: string
                initial_balance:
                  type: string
                balance:
                  type: string
                creation_height:
                  type: integer
                min_time:
                  type: integer
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
  /staking/pool:
    get:
      summary: Get the current state of the staking pool
      tags:
        - Staking
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              loose_tokens:
                type: string
              bonded_tokens:
                type: string
              inflation_last_time:
                type: string
              inflation:
                type: string
              date_last_commission_reset:
                type: string
              prev_bonded_shares:
                type: string
        '500':
          description: Internal Server Error
  /staking/parameters:
    get:
      summary: Get the current staking parameter values
      tags:
        - Staking
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              inflation_rate_change:
                type: string
              inflation_max:
                type: string
              inflation_min:
                type: string
              goal_bonded:
                type: string
              unbonding_time:
                type: string
              max_validators:
                type: integer
              bond_denom:
                type: string
        '500':
          description: Internal Server Error
  /slashing/signing_infos:
    get:
      summary: Get sign info of given all validators
      description: Get sign info of all validators
      produces:
        - application/json
      tags:
        - Slashing
      parameters:
        - in: query
          name: page
          description: Page number
          type: integer
          required: true
          x-example: 1
        - in: query
          name: limit
          description: Maximum number of items per page
          type: integer
          required: true
          x-example: 5
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                start_height:
                  type: string
                index_offset:
                  type: string
                jailed_until:
                  type: string
                missed_blocks_counter:
                  type: string
        '400':
          description: Invalid validator public key for one of the validators
        '500':
          description: Internal Server Error
  '/slashing/validators/{validatorAddr}/unjail':
    post:
      summary: Unjail a jailed validator
      description: Send transaction to unjail a jailed validator
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Slashing
      parameters:
        - type: string
          description: Bech32 validator address
          name: validatorAddr
          required: true
          in: path
          x-example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        - description: ''
          name: UnjailBody
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: object
                  fee:
                    type: object
                    properties:
                      gas:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              example: vspn
                            amount:
                              type: string
                              example: '5000'
                  memo:
                    type: string
                  signature:
                    type: object
                    properties:
                      signature:
                        type: string
                        example: >-
                          MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                      pub_key:
                        type: object
                        properties:
                          type:
                            type: string
                            example: tendermint/PubKeySecp256k1
                          value:
                            type: string
                            example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                      account_number:
                        type: string
                        example: '0'
                      sequence:
                        type: string
                        example: '0'
      responses:
        '200':
          description: Tx was succesfully generated
          schema:
            type: object
            properties:
              check_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 0
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              deliver_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 5
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              height:
                type: integer
        '400':
          description: Invalid validator address or base_req
        '500':
          description: Internal Server Error
  /slashing/parameters:
    get:
      summary: Get the current slashing parameters
      tags:
        - Slashing
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              max_evidence_age:
                type: string
              signed_blocks_window:
                type: string
              min_signed_per_window:
                type: string
              double_sign_unbond_duration:
                type: string
              downtime_unbond_duration:
                type: string
              slash_fraction_double_sign:
                type: string
              slash_fraction_downtime:
                type: string
        '500':
          description: Internal Server Error
  /gov/proposals:
    post:
      summary: Submit a proposal
      description: Send transaction to submit a proposal
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - description: >-
            valid value of `"proposal_type"` can be `"text"`,
            `"parameter_change"`, `"software_upgrade"`
          name: post_proposal_body
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              title:
                type: string
              description:
                type: string
              proposal_type:
                type: string
                example: text
              proposer:
                type: string
                description: bech32 encoded address
                example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
              initial_deposit:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: vspn
                    amount:
                      type: string
                      example: '5000'
      responses:
        '200':
          description: Tx was succesfully generated
          schema:
            type: object
            properties:
              msg:
                type: array
                items:
                  type: object
              fee:
                type: object
                properties:
                  gas:
                    type: string
                  amount:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
              memo:
                type: string
              signature:
                type: object
                properties:
                  signature:
                    type: string
                    example: >-
                      MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                  pub_key:
                    type: object
                    properties:
                      type:
                        type: string
                        example: tendermint/PubKeySecp256k1
                      value:
                        type: string
                        example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '0'
        '400':
          description: Invalid proposal body
        '500':
          description: Internal Server Error
    get:
      summary: Query proposals
      description: Query proposals information with parameters
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - in: query
          name: voter
          description: voter address
          required: false
          type: string
        - in: query
          name: depositor
          description: depositor address
          required: false
          type: string
        - in: query
          name: status
          description: >-
            proposal status, valid values can be `"deposit_period"`,
            `"voting_period"`, `"passed"`, `"rejected"`
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                proposal_id:
                  type: integer
                title:
                  type: string
                description:
                  type: string
                proposal_type:
                  type: string
                proposal_status:
                  type: string
                final_tally_result:
                  type: object
                  properties:
                    'yes':
                      type: string
                      example: '0.0000000000'
                    abstain:
                      type: string
                      example: '0.0000000000'
                    'no':
                      type: string
                      example: '0.0000000000'
                    no_with_veto:
                      type: string
                      example: '0.0000000000'
                submit_time:
                  type: string
                total_deposit:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                        example: vspn
                      amount:
                        type: string
                        example: '5000'
                voting_start_time:
                  type: string
        '400':
          description: Invalid query parameters
        '500':
          description: Internal Server Error
  /gov/proposals/param_change:
    post:
      summary: Generate a parameter change proposal transaction
      description: Generate a parameter change proposal transaction
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - description: >-
            The parameter change proposal body that contains all parameter
            changes
          name: post_proposal_body
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              title:
                type: string
                x-example: Param Change
              description:
                type: string
                x-example: Update max validators
              proposer:
                type: string
                description: bech32 encoded address
                example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
              deposit:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: vspn
                    amount:
                      type: string
                      example: '5000'
              changes:
                type: array
                items:
                  type: object
                  properties:
                    subspace:
                      type: string
                      example: staking
                    key:
                      type: string
                      example: MaxValidators
                    subkey:
                      type: string
                      example: ''
                    value:
                      type: object
      responses:
        '200':
          description: The transaction was succesfully generated
          schema:
            type: object
            properties:
              msg:
                type: array
                items:
                  type: object
              fee:
                type: object
                properties:
                  gas:
                    type: string
                  amount:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
              memo:
                type: string
              signature:
                type: object
                properties:
                  signature:
                    type: string
                    example: >-
                      MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                  pub_key:
                    type: object
                    properties:
                      type:
                        type: string
                        example: tendermint/PubKeySecp256k1
                      value:
                        type: string
                        example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '0'
        '400':
          description: Invalid proposal body
        '500':
          description: Internal Server Error
  '/gov/proposals/{proposalId}':
    get:
      summary: Query a proposal
      description: Query a proposal by id
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          name: proposalId
          required: true
          in: path
          x-example: '2'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              proposal_id:
                type: integer
              title:
                type: string
              description:
                type: string
              proposal_type:
                type: string
              proposal_status:
                type: string
              final_tally_result:
                type: object
                properties:
                  'yes':
                    type: string
                    example: '0.0000000000'
                  abstain:
                    type: string
                    example: '0.0000000000'
                  'no':
                    type: string
                    example: '0.0000000000'
                  no_with_veto:
                    type: string
                    example: '0.0000000000'
              submit_time:
                type: string
              total_deposit:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: vspn
                    amount:
                      type: string
                      example: '5000'
              voting_start_time:
                type: string
        '400':
          description: Invalid proposal id
        '500':
          description: Internal Server Error
  '/gov/proposals/{proposalId}/proposer':
    get:
      summary: Query proposer
      description: Query for the proposer for a proposal
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          name: proposalId
          required: true
          in: path
          x-example: '2'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              proposal_id:
                type: string
              proposer:
                type: string
        '400':
          description: Invalid proposal ID
        '500':
          description: Internal Server Error
  '/gov/proposals/{proposalId}/deposits':
    get:
      summary: Query deposits
      description: Query deposits by proposalId
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          name: proposalId
          required: true
          in: path
          x-example: '2'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                amount:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                        example: vspn
                      amount:
                        type: string
                        example: '5000'
                proposal_id:
                  type: string
                depositor:
                  type: string
                  description: bech32 encoded address
                  example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
        '400':
          description: Invalid proposal id
        '500':
          description: Internal Server Error
    post:
      summary: Deposit tokens to a proposal
      description: Send transaction to deposit tokens to a proposal
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: '2'
        - description: ''
          name: post_deposit_body
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              depositor:
                type: string
                description: bech32 encoded address
                example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
              amount:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: vspn
                    amount:
                      type: string
                      example: '5000'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              check_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 0
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              deliver_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 5
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              height:
                type: integer
        '400':
          description: Invalid proposal id or deposit body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
  '/gov/proposals/{proposalId}/deposits/{depositor}':
    get:
      summary: Query deposit
      description: Query deposit by proposalId and depositor address
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: '2'
        - type: string
          description: Bech32 depositor address
          name: depositor
          required: true
          in: path
          x-example: tp1rr4d0eu62pgt4edw38d2ev27798pfhdhp5ttha
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              amount:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: vspn
                    amount:
                      type: string
                      example: '5000'
              proposal_id:
                type: string
              depositor:
                type: string
                description: bech32 encoded address
                example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
        '400':
          description: Invalid proposal id or depositor address
        '404':
          description: Found no deposit
        '500':
          description: Internal Server Error
  '/gov/proposals/{proposalId}/votes':
    get:
      summary: Query voters
      description: Query voters information by proposalId
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: '2'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                voter:
                  type: string
                proposal_id:
                  type: string
                option:
                  type: string
        '400':
          description: Invalid proposal id
        '500':
          description: Internal Server Error
    post:
      summary: Vote a proposal
      description: Send transaction to vote a proposal
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: '2'
        - description: >-
            valid value of `"option"` field can be `"yes"`, `"no"`,
            `"no_with_veto"` and `"abstain"`
          name: post_vote_body
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              voter:
                type: string
                description: bech32 encoded address
                example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
              option:
                type: string
                example: 'yes'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              check_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 0
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              deliver_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 5
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              height:
                type: integer
        '400':
          description: Invalid proposal id or vote body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
  '/gov/proposals/{proposalId}/votes/{voter}':
    get:
      summary: Query vote
      description: Query vote information by proposal Id and voter address
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: '2'
        - type: string
          description: Bech32 voter address
          name: voter
          required: true
          in: path
          x-example: tp1rr4d0eu62pgt4edw38d2ev27798pfhdhp5ttha
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              voter:
                type: string
              proposal_id:
                type: string
              option:
                type: string
        '400':
          description: Invalid proposal id or voter address
        '404':
          description: Found no vote
        '500':
          description: Internal Server Error
  '/gov/proposals/{proposalId}/tally':
    get:
      summary: Get a proposal's tally result at the current time
      description: >-
        Gets a proposal's tally result at the current time. If the proposal is
        pending deposits (i.e status 'DepositPeriod') it returns an empty tally
        result.
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: '2'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              'yes':
                type: string
                example: '0.0000000000'
              abstain:
                type: string
                example: '0.0000000000'
              'no':
                type: string
                example: '0.0000000000'
              no_with_veto:
                type: string
                example: '0.0000000000'
        '400':
          description: Invalid proposal id
        '500':
          description: Internal Server Error
  /gov/parameters/deposit:
    get:
      summary: Query governance deposit parameters
      description: >-
        Query governance deposit parameters. The max_deposit_period units are in
        nanoseconds.
      produces:
        - application/json
      tags:
        - Governance
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              min_deposit:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: vspn
                    amount:
                      type: string
                      example: '5000'
              max_deposit_period:
                type: string
                example: '86400000000000'
        '400':
          description: <other_path> is not a valid query request path
        '404':
          description: Found no deposit parameters
        '500':
          description: Internal Server Error
  /gov/parameters/tallying:
    get:
      summary: Query governance tally parameters
      description: Query governance tally parameters
      produces:
        - application/json
      tags:
        - Governance
      responses:
        '200':
          description: OK
          schema:
            properties:
              threshold:
                type: string
                example: '0.5000000000'
              veto:
                type: string
                example: '0.3340000000'
              governance_penalty:
                type: string
                example: '0.0100000000'
        '400':
          description: <other_path> is not a valid query request path
        '404':
          description: Found no tally parameters
        '500':
          description: Internal Server Error
  /gov/parameters/voting:
    get:
      summary: Query governance voting parameters
      description: >-
        Query governance voting parameters. The voting_period units are in
        nanoseconds.
      produces:
        - application/json
      tags:
        - Governance
      responses:
        '200':
          description: OK
          schema:
            properties:
              voting_period:
                type: string
                example: '86400000000000'
        '400':
          description: <other_path> is not a valid query request path
        '404':
          description: Found no voting parameters
        '500':
          description: Internal Server Error
  '/distribution/delegators/{delegatorAddr}/rewards':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: pb167w96tdvmazakdwkw2u57227eduula2cy572lf
    get:
      summary: Get the total rewards balance from all delegations
      description: >-
        Get the sum of all the rewards earned by delegations by a single
        delegator
      produces:
        - application/json
      tags:
        - Distribution
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              rewards:
                type: array
                items:
                  type: object
                  properties:
                    validator_address:
                      type: string
                      description: bech32 encoded address
                      example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
                    reward:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: vspn
                          amount:
                            type: string
                            example: '5000'
              total:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: vspn
                    amount:
                      type: string
                      example: '5000'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
    post:
      summary: Withdraw all the delegator's delegation rewards
      description: Withdraw all the delegator's delegation rewards
      tags:
        - Distribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              check_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 0
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              deliver_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 5
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              height:
                type: integer
        '400':
          description: Invalid delegator address
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
  '/distribution/delegators/{delegatorAddr}/rewards/{validatorAddr}':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: tp1rr4d0eu62pgt4edw38d2ev27798pfhdhp5ttha
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Query a delegation reward
      description: Query a single delegation reward by a delegator
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                  example: vspn
                amount:
                  type: string
                  example: '5000'
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
    post:
      summary: Withdraw a delegation reward
      description: Withdraw a delegator's delegation reward from a single validator
      tags:
        - Distribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              check_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 0
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              deliver_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 5
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              height:
                type: integer
        '400':
          description: Invalid delegator address or delegation body
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
  '/distribution/delegators/{delegatorAddr}/withdraw_address':
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: pb167w96tdvmazakdwkw2u57227eduula2cy572lf
    get:
      summary: Get the rewards withdrawal address
      description: >-
        Get the delegations' rewards withdrawal address. This is the address in
        which the user will receive the reward funds
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
            description: bech32 encoded address
            example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
        '400':
          description: Invalid delegator address
        '500':
          description: Internal Server Error
    post:
      summary: Replace the rewards withdrawal address
      description: Replace the delegations' rewards withdrawal address for a new one.
      tags:
        - Distribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
              withdraw_address:
                type: string
                description: bech32 encoded address
                example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              check_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 0
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              deliver_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 5
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              height:
                type: integer
        '400':
          description: Invalid delegator or withdraw address
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
  '/distribution/validators/{validatorAddr}':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Validator distribution information
      description: Query the distribution information of a single validator
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              operator_address:
                type: string
                description: bech32 encoded address
                example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
              self_bond_rewards:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: vspn
                    amount:
                      type: string
                      example: '5000'
              val_commission:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: vspn
                    amount:
                      type: string
                      example: '5000'
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
  '/distribution/validators/{validatorAddr}/outstanding_rewards':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Fee distribution outstanding rewards of a single validator
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                  example: vspn
                amount:
                  type: string
                  example: '5000'
        '500':
          description: Internal Server Error
  '/distribution/validators/{validatorAddr}/rewards':
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    get:
      summary: Commission and self-delegation rewards of a single validator
      description: Query the commission and self-delegation rewards of validator.
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                  example: vspn
                amount:
                  type: string
                  example: '5000'
        '400':
          description: Invalid validator address
        '500':
          description: Internal Server Error
    post:
      summary: Withdraw the validator's rewards
      description: Withdraw the validator's self-delegation and commissions rewards
      tags:
        - Distribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                type: object
                properties:
                  from:
                    type: string
                    example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
                    description: Sender address or Keybase name to generate a transaction
                  memo:
                    type: string
                    example: Sent via Provenance API
                  chain_id:
                    type: string
                    example: provenance-test-chain
                  account_number:
                    type: string
                    example: '0'
                  sequence:
                    type: string
                    example: '1'
                  gas:
                    type: string
                    example: '200000'
                  gas_adjustment:
                    type: string
                    example: '1.2'
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          example: vspn
                        amount:
                          type: string
                          example: '5000'
                  simulate:
                    type: boolean
                    example: false
                    description: >-
                      Estimate gas for a transaction (cannot be used in
                      conjunction with generate_only)
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              check_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 0
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              deliver_tx:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: string
                  gas_used:
                    type: integer
                  gas_wanted:
                    type: integer
                  info:
                    type: string
                  log:
                    type: string
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                example:
                  code: 5
                  data: data
                  log: log
                  gas_used: 5000
                  gas_wanted: 10000
                  info: info
                  tags:
                    - ''
                    - ''
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              height:
                type: integer
        '400':
          description: Invalid validator address
        '401':
          description: Key password is wrong
        '500':
          description: Internal Server Error
  /distribution/community_pool:
    get:
      summary: Community pool parameters
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                  example: vspn
                amount:
                  type: string
                  example: '5000'
        '500':
          description: Internal Server Error
  /distribution/parameters:
    get:
      summary: Fee distribution parameters
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              base_proposer_reward:
                type: string
              bonus_proposer_reward:
                type: string
              community_tax:
                type: string
        '500':
          description: Internal Server Error
  /minting/parameters:
    get:
      summary: Minting module parameters
      tags:
        - Mint
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            properties:
              mint_denom:
                type: string
              inflation_rate_change:
                type: string
              inflation_max:
                type: string
              inflation_min:
                type: string
              goal_bonded:
                type: string
              blocks_per_year:
                type: string
        '500':
          description: Internal Server Error
  /minting/inflation:
    get:
      summary: Current minting inflation value
      tags:
        - Mint
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '500':
          description: Internal Server Error
  /minting/annual-provisions:
    get:
      summary: Current minting annual provisions value
      tags:
        - Mint
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '500':
          description: Internal Server Error
  /supply/total:
    get:
      summary: Total supply of coins in the chain
      tags:
        - Supply
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              total:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: vspn
                    amount:
                      type: string
                      example: '5000'
        '500':
          description: Internal Server Error
  '/supply/total/{denomination}':
    parameters:
      - in: path
        name: denomination
        description: Coin denomination
        required: true
        type: string
        x-example: uatom
    get:
      summary: Total supply of a single coin denomination
      tags:
        - Supply
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '400':
          description: Invalid coin denomination
        '500':
          description: Internal Server Error
  '/provenance/attribute/v1/attribute/{account}/scan/{suffix}':
    get:
      summary: >-
        Scan queries attributes on a given account (address) for any that match
        the provided suffix
      operationId: Scan
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              account:
                type: string
                title: >-
                  a string containing the address of the account the attributes
                  are assigned to=
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The attribute name.
                    value:
                      type: string
                      format: byte
                      description: The attribute value.
                    attribute_type:
                      description: The attribute value type.
                      type: string
                      enum:
                        - ATTRIBUTE_TYPE_UNSPECIFIED
                        - ATTRIBUTE_TYPE_UUID
                        - ATTRIBUTE_TYPE_JSON
                        - ATTRIBUTE_TYPE_STRING
                        - ATTRIBUTE_TYPE_URI
                        - ATTRIBUTE_TYPE_INT
                        - ATTRIBUTE_TYPE_FLOAT
                        - ATTRIBUTE_TYPE_PROTO
                        - ATTRIBUTE_TYPE_BYTES
                      default: ATTRIBUTE_TYPE_UNSPECIFIED
                      title: >-
                        AttributeType defines the type of the data stored in the
                        attribute value
                    address:
                      type: string
                      title: The address the attribute is bound to
                  title: >-
                    Attribute holds a typed key/value structure for data
                    associated with an account
                title: a list of attribute values
              pagination:
                description: pagination defines an optional pagination for the request.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryScanResponse is the response type for the Query/Attribute
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: account
          description: account defines the address to query for.
          in: path
          required: true
          type: string
        - name: suffix
          description: >-
            name defines the partial attribute name to search for base on names
            being in RDNS format.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/provenance/attribute/v1/attribute/{account}/{name}':
    get:
      summary: >-
        Attribute queries attributes on a given account (address) for one (or
        more) with the given name
      operationId: Attribute
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              account:
                type: string
                description: >-
                  a string containing the address of the account the attributes
                  are assigned to.
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The attribute name.
                    value:
                      type: string
                      format: byte
                      description: The attribute value.
                    attribute_type:
                      description: The attribute value type.
                      type: string
                      enum:
                        - ATTRIBUTE_TYPE_UNSPECIFIED
                        - ATTRIBUTE_TYPE_UUID
                        - ATTRIBUTE_TYPE_JSON
                        - ATTRIBUTE_TYPE_STRING
                        - ATTRIBUTE_TYPE_URI
                        - ATTRIBUTE_TYPE_INT
                        - ATTRIBUTE_TYPE_FLOAT
                        - ATTRIBUTE_TYPE_PROTO
                        - ATTRIBUTE_TYPE_BYTES
                      default: ATTRIBUTE_TYPE_UNSPECIFIED
                      title: >-
                        AttributeType defines the type of the data stored in the
                        attribute value
                    address:
                      type: string
                      title: The address the attribute is bound to
                  title: >-
                    Attribute holds a typed key/value structure for data
                    associated with an account
                title: a list of attribute values
              pagination:
                description: pagination defines an optional pagination for the request.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryAttributeResponse is the response type for the
              Query/Attribute method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: account
          description: account defines the address to query for.
          in: path
          required: true
          type: string
        - name: name
          description: name is the attribute name to query for
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/provenance/attribute/v1/attributes/{account}':
    get:
      summary: >-
        Attributes queries attributes on a given account (address) for any
        defined attributes
      operationId: Attributes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              account:
                type: string
                title: >-
                  a string containing the address of the account the attributes
                  are assigned to=
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The attribute name.
                    value:
                      type: string
                      format: byte
                      description: The attribute value.
                    attribute_type:
                      description: The attribute value type.
                      type: string
                      enum:
                        - ATTRIBUTE_TYPE_UNSPECIFIED
                        - ATTRIBUTE_TYPE_UUID
                        - ATTRIBUTE_TYPE_JSON
                        - ATTRIBUTE_TYPE_STRING
                        - ATTRIBUTE_TYPE_URI
                        - ATTRIBUTE_TYPE_INT
                        - ATTRIBUTE_TYPE_FLOAT
                        - ATTRIBUTE_TYPE_PROTO
                        - ATTRIBUTE_TYPE_BYTES
                      default: ATTRIBUTE_TYPE_UNSPECIFIED
                      title: >-
                        AttributeType defines the type of the data stored in the
                        attribute value
                    address:
                      type: string
                      title: The address the attribute is bound to
                  title: >-
                    Attribute holds a typed key/value structure for data
                    associated with an account
                title: a list of attribute values
              pagination:
                description: pagination defines an optional pagination for the request.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryAttributesResponse is the response type for the
              Query/Attribute method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: account
          description: account defines the address to query for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /provenance/attribute/v1/params:
    get:
      summary: Params queries params of the attribute module.
      operationId: AttributeParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  max_value_length:
                    type: integer
                    format: int64
                    title: maximum length of data to allow in an attribute value
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  '/provenance/marker/v1/accesscontrol/{id}':
    get:
      summary: query for access records on an account
      operationId: Access
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                    permissions:
                      type: array
                      items:
                        type: string
                        enum:
                          - ACCESS_UNSPECIFIED
                          - ACCESS_MINT
                          - ACCESS_BURN
                          - ACCESS_DEPOSIT
                          - ACCESS_WITHDRAW
                          - ACCESS_DELETE
                          - ACCESS_ADMIN
                          - ACCESS_TRANSFER
                        default: ACCESS_UNSPECIFIED
                        description: >-
                          Access defines the different types of permissions that
                          a marker supports granting to an address.

                           - ACCESS_UNSPECIFIED: ACCESS_UNSPECIFIED defines a no-op vote option.
                           - ACCESS_MINT: ACCESS_MINT is the ability to increase the supply of a marker
                           - ACCESS_BURN: ACCESS_BURN is the ability to decrease the supply of the marker using coin held by the marker.
                           - ACCESS_DEPOSIT: ACCESS_DEPOSIT is the ability to set a marker reference to this marker in the metadata/scopes module
                           - ACCESS_WITHDRAW: ACCESS_WITHDRAW is the ability to remove marker references to this marker in from metadata/scopes or
                          transfer coin from this marker account to another
                          account.
                           - ACCESS_DELETE: ACCESS_DELETE is the ability to move a proposed, finalized or active marker into the cancelled state. This
                          access also allows cancelled markers to be marked for
                          deletion
                           - ACCESS_ADMIN: ACCESS_ADMIN is the ability to add access grants for accounts to the list of marker permissions.
                           - ACCESS_TRANSFER: ACCESS_TRANSFER is the ability to invoke a send operation using the marker module to facilitate exchange.
                          This capability is useful when the marker denomination
                          has "send enabled = false" preventing normal bank
                          transfer
                  description: >-
                    AccessGrant associates a colelction of permisssions with an
                    address for delegated marker account control.
            description: >-
              QueryAccessResponse is the response type for the
              Query/MarkerAccess method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: id
          description: address or denom for the marker
          in: path
          required: true
          type: string
      tags:
        - Query
  /provenance/marker/v1/all:
    get:
      summary: Returns a list of all markers on the blockchain
      operationId: AllMarkers
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              markers:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
              pagination:
                description: pagination defines an optional pagination for the request.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryAllMarkersResponse is the response type for the
              Query/AllMarkers method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: status
          description: |-
            Optional status to filter request.

             - MARKER_STATUS_UNSPECIFIED: MARKER_STATUS_UNSPECIFIED - Unknown/Invalid Marker Status
             - MARKER_STATUS_PROPOSED: MARKER_STATUS_PROPOSED - Initial configuration period, updates allowed, token supply not created.
             - MARKER_STATUS_FINALIZED: MARKER_STATUS_FINALIZED - Configuration finalized, ready for supply creation
             - MARKER_STATUS_ACTIVE: MARKER_STATUS_ACTIVE - Supply is created, rules are in force.
             - MARKER_STATUS_CANCELLED: MARKER_STATUS_CANCELLED - Marker has been cancelled, pending destroy
             - MARKER_STATUS_DESTROYED: MARKER_STATUS_DESTROYED - Marker supply has all been recalled, marker is considered destroyed and no further
            actions allowed.
          in: query
          required: false
          type: string
          enum:
            - MARKER_STATUS_UNSPECIFIED
            - MARKER_STATUS_PROPOSED
            - MARKER_STATUS_FINALIZED
            - MARKER_STATUS_ACTIVE
            - MARKER_STATUS_CANCELLED
            - MARKER_STATUS_DESTROYED
          default: MARKER_STATUS_UNSPECIFIED
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/provenance/marker/v1/detail/{id}':
    get:
      summary: query for a single marker by denom or address
      operationId: Marker
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              marker:
                type: object
                properties:
                  type_url:
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                  value:
                    type: string
                    format: byte
                    description: >-
                      Must be a valid serialized protocol buffer of the above
                      specified type.
                description: >-
                  `Any` contains an arbitrary serialized protocol buffer message
                  along with a

                  URL that describes the type of the serialized message.


                  Protobuf library provides support to pack/unpack Any values in
                  the form

                  of utility functions or additional generated methods of the
                  Any type.


                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default
                  use

                  'type.googleapis.com/full.type.name' as the type URL and the
                  unpack

                  methods only use the fully qualified type name after the last
                  '/'

                  in the type URL, for example "foo.bar.com/x/y.z" will yield
                  type

                  name "y.z".



                  JSON

                  ====

                  The JSON representation of an `Any` value uses the regular

                  representation of the deserialized, embedded message, with an

                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom
                  JSON

                  representation, that representation will be embedded adding a
                  field

                  `value` which holds the custom JSON in addition to the `@type`

                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            description: >-
              QueryMarkerResponse is the response type for the Query/Marker
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: id
          description: the address or denom of the marker
          in: path
          required: true
          type: string
      tags:
        - Query
  '/provenance/marker/v1/escrow/{id}':
    get:
      summary: query for coins on a marker account
      operationId: Escrow
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              escrow:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
            description: >-
              QueryEscrowResponse is the response type for the
              Query/MarkerEscrow method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: id
          description: address or denom for the marker
          in: path
          required: true
          type: string
      tags:
        - Query
  '/provenance/marker/v1/getdenommetadata/{denom}':
    get:
      summary: query for access records on an account
      operationId: DenomMetadata
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              metadata:
                type: object
                properties:
                  description:
                    type: string
                  denom_units:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          description: >-
                            denom represents the string name of the given denom
                            unit (e.g uatom).
                        exponent:
                          type: integer
                          format: int64
                          description: >-
                            exponent represents power of 10 exponent that one
                            must

                            raise the base_denom to in order to equal the given
                            DenomUnit's denom

                            1 denom = 1^exponent base_denom

                            (e.g. with a base_denom of uatom, one can create a
                            DenomUnit of 'atom' with

                            exponent = 6, thus: 1 atom = 10^6 uatom).
                        aliases:
                          type: array
                          items:
                            type: string
                          title: >-
                            aliases is a list of string aliases for the given
                            denom
                      description: |-
                        DenomUnit represents a struct that describes a given
                        denomination unit of the basic token.
                    title: >-
                      denom_units represents the list of DenomUnit's for a given
                      coin
                  base:
                    type: string
                    description: >-
                      base represents the base denom (should be the DenomUnit
                      with exponent = 0).
                  display:
                    type: string
                    description: |-
                      display indicates the suggested denom that should be
                      displayed in clients.
                description: |-
                  Metadata represents a struct that describes
                  a basic token.
            title: >-
              QueryDenomMetadataResponse is the response type for the
              Query/DenomMetadata
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: denom
          in: path
          required: true
          type: string
      tags:
        - Query
  '/provenance/marker/v1/holding/{id}':
    get:
      summary: query for all accounts holding the given marker coins
      operationId: Holding
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              balances:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      description: address is the address of the balance holder.
                    coins:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      description: coins defines the different coins this balance holds.
                  title: >-
                    Balance defines an account address and balance pair used in
                    queries for accounts holding a marker
              pagination:
                description: pagination defines an optional pagination for the request.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryHoldingResponse is the response type for the
              Query/MarkerHolders method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: id
          description: the address or denom of the marker
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /provenance/marker/v1/params:
    get:
      summary: Params queries the parameters of x/bank module.
      operationId: MarkerParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  max_total_supply:
                    type: string
                    format: uint64
                    title: >-
                      maximum amount of supply to allow a marker to be created
                      with
                  enable_governance:
                    type: boolean
                    description: >-
                      indicates if governance based controls of markers is
                      allowed.
                  unrestricted_denom_regex:
                    type: string
                    title: >-
                      a regular expression used to validate marker denom values
                      from normal create requests (governance

                      requests are only subject to platform coin validation
                      denom expression)
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  '/provenance/marker/v1/supply/{id}':
    get:
      summary: query for supply of coin on a marker account
      operationId: Supply
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            description: >-
              QuerySupplyResponse is the response type for the
              Query/MarkerSupply method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: id
          description: address or denom for the marker
          in: path
          required: true
          type: string
      tags:
        - Query
  '/provenance/metadata/v1/contractspec/{contract_specification_uuid}/recordspecs':
    get:
      summary: >-
        RecordSpecificationsForContractSpecification returns the record
        specifications for the given contract specification

        uuid
      operationId: RecordSpecificationsForContractSpecification
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              record_specifications:
                type: array
                items:
                  type: object
                  properties:
                    specification_id:
                      type: string
                      format: byte
                      title: unique identifier for this specification on chain
                    name:
                      type: string
                      title: >-
                        Name of Record that will be created when this
                        specification is used
                    inputs:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            title: name for this input
                          type_name:
                            type: string
                            title: a type_name (typically a proto name or class_name)
                          record_id:
                            type: string
                            format: byte
                            title: >-
                              the address of a record on chain (For Established
                              Records)
                          hash:
                            type: string
                            title: >-
                              the hash of an off-chain piece of information (For
                              Proposed Records)
                        title: >-
                          InputSpecification defines a name, type_name, and
                          source reference (either on or off chain) to define an
                          input

                          parameter
                      title: >-
                        A set of inputs that must be satisified to apply this
                        RecordSpecification and create a Record
                    type_name:
                      type: string
                      title: >-
                        A type name for data associated with this record
                        (typically a class or proto name)
                    result_type:
                      title: >-
                        Type of result for this record specification (must be
                        RECORD or RECORD_LIST)
                      type: string
                      enum:
                        - DEFINITION_TYPE_UNSPECIFIED
                        - DEFINITION_TYPE_PROPOSED
                        - DEFINITION_TYPE_RECORD
                        - DEFINITION_TYPE_RECORD_LIST
                      default: DEFINITION_TYPE_UNSPECIFIED
                      description: >-
                        - DEFINITION_TYPE_UNSPECIFIED:
                        DEFINITION_TYPE_UNSPECIFIED indicates an unknown/invalid
                        value
                         - DEFINITION_TYPE_PROPOSED: DEFINITION_TYPE_PROPOSED indicates a proposed value is used here (a record that is not on-chain)
                         - DEFINITION_TYPE_RECORD: DEFINITION_TYPE_RECORD indicates the value must be a reference to a record on chain
                         - DEFINITION_TYPE_RECORD_LIST: DEFINITION_TYPE_RECORD_LIST indicates the value maybe a reference to a collection of values on chain having
                        the same name
                    responsible_parties:
                      type: array
                      items:
                        type: string
                        enum:
                          - PARTY_TYPE_UNSPECIFIED
                          - PARTY_TYPE_ORIGINATOR
                          - PARTY_TYPE_SERVICER
                          - PARTY_TYPE_INVESTOR
                          - PARTY_TYPE_CUSTODIAN
                          - PARTY_TYPE_OWNER
                          - PARTY_TYPE_AFFILIATE
                          - PARTY_TYPE_OMNIBUS
                          - PARTY_TYPE_PROVENANCE
                        default: PARTY_TYPE_UNSPECIFIED
                        description: >-
                          - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an
                          error condition
                           - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                           - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                           - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                           - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                           - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                           - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                           - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                           - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
                        title: >-
                          PartyType are the different roles parties on a
                          contract may use
                      title: Type of party responsible for this record
                  title: >-
                    RecordSpecification defines the specification for a Record
                    including allowed/required inputs/outputs
              contract_specification_uuid:
                type: string
            description: >-
              RecordSpecificationResponseResponse is the response to a record
              specification for contract specification request.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: contract_specification_uuid
          in: path
          required: true
          type: string
      tags:
        - Query
  '/provenance/metadata/v1/contractspec/{specification_uuid}':
    get:
      summary: >-
        ContractSpecification returns a contract specification for the given
        specification uuid
      operationId: ContractSpecification
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              contract_specification:
                type: object
                properties:
                  specification_id:
                    type: string
                    format: byte
                    title: unique identifier for this specification on chain
                  description:
                    title: Description information for this contract specification
                    type: object
                    properties:
                      name:
                        type: string
                        description: A Name for this thing.
                      description:
                        type: string
                        description: A description of this thing.
                      website_url:
                        type: string
                        description: URL to find even more info.
                      icon_url:
                        type: string
                        description: URL of an icon.
                    description: >-
                      Description holds general information that is handy to
                      associate with a structure.
                  owner_addresses:
                    type: array
                    items:
                      type: string
                    title: Address of the account that owns this specificaiton
                  parties_involved:
                    type: array
                    items:
                      type: string
                      enum:
                        - PARTY_TYPE_UNSPECIFIED
                        - PARTY_TYPE_ORIGINATOR
                        - PARTY_TYPE_SERVICER
                        - PARTY_TYPE_INVESTOR
                        - PARTY_TYPE_CUSTODIAN
                        - PARTY_TYPE_OWNER
                        - PARTY_TYPE_AFFILIATE
                        - PARTY_TYPE_OMNIBUS
                        - PARTY_TYPE_PROVENANCE
                      default: PARTY_TYPE_UNSPECIFIED
                      description: >-
                        - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an
                        error condition
                         - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                         - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                         - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                         - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                         - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                         - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                         - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                         - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
                      title: >-
                        PartyType are the different roles parties on a contract
                        may use
                    title: >-
                      a list of party roles that must be fullfilled when signing
                      a transaction for this contract specification
                  resource_id:
                    type: string
                    format: byte
                    title: >-
                      the address of a record on chain that represents this
                      contract
                  hash:
                    type: string
                    title: the hash of contract binary (off-chain instance)
                  class_name:
                    type: string
                    title: name of the class/type of this contract executable
                title: >-
                  ContractSpecification defines the required parties, resources,
                  conditions, and consideration outputs for a contract
              contract_specification_uuid:
                type: string
            description: >-
              ContractSpecificationResponse is the response to a contract
              specification request.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: specification_uuid
          in: path
          required: true
          type: string
      tags:
        - Query
  '/provenance/metadata/v1/contractspec/{specification_uuid}/extended':
    get:
      summary: >-
        ContractSpecification returns a contract specification and record
        specifications for the given contract

        specification uuid
      operationId: ContractSpecificationExtended
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              contract_specification:
                type: object
                properties:
                  specification_id:
                    type: string
                    format: byte
                    title: unique identifier for this specification on chain
                  description:
                    title: Description information for this contract specification
                    type: object
                    properties:
                      name:
                        type: string
                        description: A Name for this thing.
                      description:
                        type: string
                        description: A description of this thing.
                      website_url:
                        type: string
                        description: URL to find even more info.
                      icon_url:
                        type: string
                        description: URL of an icon.
                    description: >-
                      Description holds general information that is handy to
                      associate with a structure.
                  owner_addresses:
                    type: array
                    items:
                      type: string
                    title: Address of the account that owns this specificaiton
                  parties_involved:
                    type: array
                    items:
                      type: string
                      enum:
                        - PARTY_TYPE_UNSPECIFIED
                        - PARTY_TYPE_ORIGINATOR
                        - PARTY_TYPE_SERVICER
                        - PARTY_TYPE_INVESTOR
                        - PARTY_TYPE_CUSTODIAN
                        - PARTY_TYPE_OWNER
                        - PARTY_TYPE_AFFILIATE
                        - PARTY_TYPE_OMNIBUS
                        - PARTY_TYPE_PROVENANCE
                      default: PARTY_TYPE_UNSPECIFIED
                      description: >-
                        - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an
                        error condition
                         - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                         - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                         - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                         - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                         - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                         - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                         - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                         - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
                      title: >-
                        PartyType are the different roles parties on a contract
                        may use
                    title: >-
                      a list of party roles that must be fullfilled when signing
                      a transaction for this contract specification
                  resource_id:
                    type: string
                    format: byte
                    title: >-
                      the address of a record on chain that represents this
                      contract
                  hash:
                    type: string
                    title: the hash of contract binary (off-chain instance)
                  class_name:
                    type: string
                    title: name of the class/type of this contract executable
                title: >-
                  ContractSpecification defines the required parties, resources,
                  conditions, and consideration outputs for a contract
              record_specifications:
                type: array
                items:
                  type: object
                  properties:
                    specification_id:
                      type: string
                      format: byte
                      title: unique identifier for this specification on chain
                    name:
                      type: string
                      title: >-
                        Name of Record that will be created when this
                        specification is used
                    inputs:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            title: name for this input
                          type_name:
                            type: string
                            title: a type_name (typically a proto name or class_name)
                          record_id:
                            type: string
                            format: byte
                            title: >-
                              the address of a record on chain (For Established
                              Records)
                          hash:
                            type: string
                            title: >-
                              the hash of an off-chain piece of information (For
                              Proposed Records)
                        title: >-
                          InputSpecification defines a name, type_name, and
                          source reference (either on or off chain) to define an
                          input

                          parameter
                      title: >-
                        A set of inputs that must be satisified to apply this
                        RecordSpecification and create a Record
                    type_name:
                      type: string
                      title: >-
                        A type name for data associated with this record
                        (typically a class or proto name)
                    result_type:
                      title: >-
                        Type of result for this record specification (must be
                        RECORD or RECORD_LIST)
                      type: string
                      enum:
                        - DEFINITION_TYPE_UNSPECIFIED
                        - DEFINITION_TYPE_PROPOSED
                        - DEFINITION_TYPE_RECORD
                        - DEFINITION_TYPE_RECORD_LIST
                      default: DEFINITION_TYPE_UNSPECIFIED
                      description: >-
                        - DEFINITION_TYPE_UNSPECIFIED:
                        DEFINITION_TYPE_UNSPECIFIED indicates an unknown/invalid
                        value
                         - DEFINITION_TYPE_PROPOSED: DEFINITION_TYPE_PROPOSED indicates a proposed value is used here (a record that is not on-chain)
                         - DEFINITION_TYPE_RECORD: DEFINITION_TYPE_RECORD indicates the value must be a reference to a record on chain
                         - DEFINITION_TYPE_RECORD_LIST: DEFINITION_TYPE_RECORD_LIST indicates the value maybe a reference to a collection of values on chain having
                        the same name
                    responsible_parties:
                      type: array
                      items:
                        type: string
                        enum:
                          - PARTY_TYPE_UNSPECIFIED
                          - PARTY_TYPE_ORIGINATOR
                          - PARTY_TYPE_SERVICER
                          - PARTY_TYPE_INVESTOR
                          - PARTY_TYPE_CUSTODIAN
                          - PARTY_TYPE_OWNER
                          - PARTY_TYPE_AFFILIATE
                          - PARTY_TYPE_OMNIBUS
                          - PARTY_TYPE_PROVENANCE
                        default: PARTY_TYPE_UNSPECIFIED
                        description: >-
                          - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an
                          error condition
                           - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                           - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                           - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                           - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                           - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                           - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                           - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                           - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
                        title: >-
                          PartyType are the different roles parties on a
                          contract may use
                      title: Type of party responsible for this record
                  title: >-
                    RecordSpecification defines the specification for a Record
                    including allowed/required inputs/outputs
              contract_specification_uuid:
                type: string
            description: >-
              ContractSpecificationExtendedResponse is the response to a
              contract specification extended request.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: specification_uuid
          in: path
          required: true
          type: string
      tags:
        - Query
  '/provenance/metadata/v1/ownership/{address}':
    get:
      summary: >-
        Ownership returns a list of scope identifiers that list the given
        address as a data or value owner
      operationId: Ownership
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              scope_uuids:
                type: array
                items:
                  type: string
                description: A list of scope ids (uuid) associated with the given address.
              pagination:
                description: pagination defines an optional pagination for the request.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: >-
              OwnershipResponse is the reponse to the ownership request and
              includes a list of scope identifiers
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /provenance/metadata/v1/params:
    get:
      summary: Params queries the parameters of x/metadata module.
      operationId: MetadataParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  '/provenance/metadata/v1/recordspec/id/{record_specification_id}':
    get:
      summary: >-
        RecordSpecificationByID returns a record specification for the given
        record specification id
      operationId: RecordSpecificationByID
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              record_specification:
                type: object
                properties:
                  specification_id:
                    type: string
                    format: byte
                    title: unique identifier for this specification on chain
                  name:
                    type: string
                    title: >-
                      Name of Record that will be created when this
                      specification is used
                  inputs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          title: name for this input
                        type_name:
                          type: string
                          title: a type_name (typically a proto name or class_name)
                        record_id:
                          type: string
                          format: byte
                          title: >-
                            the address of a record on chain (For Established
                            Records)
                        hash:
                          type: string
                          title: >-
                            the hash of an off-chain piece of information (For
                            Proposed Records)
                      title: >-
                        InputSpecification defines a name, type_name, and source
                        reference (either on or off chain) to define an input

                        parameter
                    title: >-
                      A set of inputs that must be satisified to apply this
                      RecordSpecification and create a Record
                  type_name:
                    type: string
                    title: >-
                      A type name for data associated with this record
                      (typically a class or proto name)
                  result_type:
                    title: >-
                      Type of result for this record specification (must be
                      RECORD or RECORD_LIST)
                    type: string
                    enum:
                      - DEFINITION_TYPE_UNSPECIFIED
                      - DEFINITION_TYPE_PROPOSED
                      - DEFINITION_TYPE_RECORD
                      - DEFINITION_TYPE_RECORD_LIST
                    default: DEFINITION_TYPE_UNSPECIFIED
                    description: >-
                      - DEFINITION_TYPE_UNSPECIFIED: DEFINITION_TYPE_UNSPECIFIED
                      indicates an unknown/invalid value
                       - DEFINITION_TYPE_PROPOSED: DEFINITION_TYPE_PROPOSED indicates a proposed value is used here (a record that is not on-chain)
                       - DEFINITION_TYPE_RECORD: DEFINITION_TYPE_RECORD indicates the value must be a reference to a record on chain
                       - DEFINITION_TYPE_RECORD_LIST: DEFINITION_TYPE_RECORD_LIST indicates the value maybe a reference to a collection of values on chain having
                      the same name
                  responsible_parties:
                    type: array
                    items:
                      type: string
                      enum:
                        - PARTY_TYPE_UNSPECIFIED
                        - PARTY_TYPE_ORIGINATOR
                        - PARTY_TYPE_SERVICER
                        - PARTY_TYPE_INVESTOR
                        - PARTY_TYPE_CUSTODIAN
                        - PARTY_TYPE_OWNER
                        - PARTY_TYPE_AFFILIATE
                        - PARTY_TYPE_OMNIBUS
                        - PARTY_TYPE_PROVENANCE
                      default: PARTY_TYPE_UNSPECIFIED
                      description: >-
                        - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an
                        error condition
                         - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                         - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                         - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                         - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                         - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                         - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                         - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                         - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
                      title: >-
                        PartyType are the different roles parties on a contract
                        may use
                    title: Type of party responsible for this record
                title: >-
                  RecordSpecification defines the specification for a Record
                  including allowed/required inputs/outputs
              record_specification_id:
                type: string
            description: >-
              RecordSpecificationByIDResponse is the response to a record
              specification by id request.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: record_specification_id
          in: path
          required: true
          type: string
      tags:
        - Query
  '/provenance/metadata/v1/recordspec/{contract_specification_uuid}/{name}':
    get:
      summary: >-
        RecordSpecification returns a record specification for the given
        contract specification uuid and record name
      operationId: RecordSpecification
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              record_specification:
                type: object
                properties:
                  specification_id:
                    type: string
                    format: byte
                    title: unique identifier for this specification on chain
                  name:
                    type: string
                    title: >-
                      Name of Record that will be created when this
                      specification is used
                  inputs:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          title: name for this input
                        type_name:
                          type: string
                          title: a type_name (typically a proto name or class_name)
                        record_id:
                          type: string
                          format: byte
                          title: >-
                            the address of a record on chain (For Established
                            Records)
                        hash:
                          type: string
                          title: >-
                            the hash of an off-chain piece of information (For
                            Proposed Records)
                      title: >-
                        InputSpecification defines a name, type_name, and source
                        reference (either on or off chain) to define an input

                        parameter
                    title: >-
                      A set of inputs that must be satisified to apply this
                      RecordSpecification and create a Record
                  type_name:
                    type: string
                    title: >-
                      A type name for data associated with this record
                      (typically a class or proto name)
                  result_type:
                    title: >-
                      Type of result for this record specification (must be
                      RECORD or RECORD_LIST)
                    type: string
                    enum:
                      - DEFINITION_TYPE_UNSPECIFIED
                      - DEFINITION_TYPE_PROPOSED
                      - DEFINITION_TYPE_RECORD
                      - DEFINITION_TYPE_RECORD_LIST
                    default: DEFINITION_TYPE_UNSPECIFIED
                    description: >-
                      - DEFINITION_TYPE_UNSPECIFIED: DEFINITION_TYPE_UNSPECIFIED
                      indicates an unknown/invalid value
                       - DEFINITION_TYPE_PROPOSED: DEFINITION_TYPE_PROPOSED indicates a proposed value is used here (a record that is not on-chain)
                       - DEFINITION_TYPE_RECORD: DEFINITION_TYPE_RECORD indicates the value must be a reference to a record on chain
                       - DEFINITION_TYPE_RECORD_LIST: DEFINITION_TYPE_RECORD_LIST indicates the value maybe a reference to a collection of values on chain having
                      the same name
                  responsible_parties:
                    type: array
                    items:
                      type: string
                      enum:
                        - PARTY_TYPE_UNSPECIFIED
                        - PARTY_TYPE_ORIGINATOR
                        - PARTY_TYPE_SERVICER
                        - PARTY_TYPE_INVESTOR
                        - PARTY_TYPE_CUSTODIAN
                        - PARTY_TYPE_OWNER
                        - PARTY_TYPE_AFFILIATE
                        - PARTY_TYPE_OMNIBUS
                        - PARTY_TYPE_PROVENANCE
                      default: PARTY_TYPE_UNSPECIFIED
                      description: >-
                        - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an
                        error condition
                         - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                         - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                         - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                         - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                         - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                         - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                         - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                         - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
                      title: >-
                        PartyType are the different roles parties on a contract
                        may use
                    title: Type of party responsible for this record
                title: >-
                  RecordSpecification defines the specification for a Record
                  including allowed/required inputs/outputs
              contract_specification_uuid:
                type: string
              name:
                type: string
            description: >-
              RecordSpecificationResponse is the response to a record
              specification request.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: contract_specification_uuid
          in: path
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      tags:
        - Query
  '/provenance/metadata/v1/scope/id/{scope_id}/records/{name}':
    get:
      summary: >-
        RecordsByScopeID returns a collection of the records in a scope by scope
        bech32 id or a specific one by name
      operationId: RecordsByScopeID
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              scope_uuid:
                type: string
              scope_id:
                type: string
              records:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      title: >-
                        name/identifier for this record.  Value must be unique
                        within the scope.  Also known as a Fact name
                    session_id:
                      type: string
                      format: byte
                      title: >-
                        id of the session context that was used to create this
                        record (use with filtered kvprefix iterator)
                    process:
                      title: >-
                        process contain information used to uniquely identify an
                        execution on or off chain that generated this record
                      type: object
                      properties:
                        address:
                          type: string
                          title: >-
                            the address of a smart contract used for this
                            process
                        hash:
                          type: string
                          title: the hash of an off-chain process used
                        name:
                          type: string
                          title: >-
                            a name associated with the process (type_name,
                            classname or smart contract common name)
                        method:
                          type: string
                          title: >-
                            method is a name or reference to a specific
                            operation (method) within a class/contract that was
                            invoked
                    inputs:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: >-
                              Name value included to link back to the definition
                              spec.
                          record_id:
                            type: string
                            format: byte
                            title: >-
                              the address of a record on chain (For Established
                              Records)
                          hash:
                            type: string
                            title: >-
                              the hash of an off-chain piece of information (For
                              Proposed Records)
                          type_name:
                            type: string
                            title: from proposed fact structure to unmarshal
                          status:
                            title: >-
                              Indicates if this input was a recorded fact on
                              chain or just a given hashed input
                            type: string
                            enum:
                              - RECORD_INPUT_STATUS_UNSPECIFIED
                              - RECORD_INPUT_STATUS_PROPOSED
                              - RECORD_INPUT_STATUS_RECORD
                            default: RECORD_INPUT_STATUS_UNSPECIFIED
                            description: >-
                              - RECORD_INPUT_STATUS_UNSPECIFIED:
                              RECORD_INPUT_STATUS_UNSPECIFIED indicates an
                              invalid/unknown input type
                               - RECORD_INPUT_STATUS_PROPOSED: RECORD_INPUT_STATUS_PROPOSED indicates this input was an arbitrary piece of data that was hashed
                               - RECORD_INPUT_STATUS_RECORD: RECORD_INPUT_STATUS_RECORD indicates this input is a reference to a previously recorded fact on blockchain
                        title: Tracks the inputs used to establish this record
                      title: >-
                        inputs used with the process to achieve the output on
                        this record
                    outputs:
                      type: array
                      items:
                        type: object
                        properties:
                          hash:
                            type: string
                            title: >-
                              Hash of the data output that was output/generated
                              for this record
                          status:
                            title: >-
                              Status of the process execution associated with
                              this output indicating success,failure, or pending
                            type: string
                            enum:
                              - RESULT_STATUS_UNSPECIFIED
                              - RESULT_STATUS_PASS
                              - RESULT_STATUS_SKIP
                              - RESULT_STATUS_FAIL
                            default: RESULT_STATUS_UNSPECIFIED
                            description: >-
                              - RESULT_STATUS_UNSPECIFIED:
                              RESULT_STATUS_UNSPECIFIED indicates an unset
                              condition
                               - RESULT_STATUS_PASS: RESULT_STATUS_PASS indicates the execution was successfult
                               - RESULT_STATUS_SKIP: RESULT_STATUS_SKIP indicates condition/consideration was skipped due to missing inputs or delayed execution
                               - RESULT_STATUS_FAIL: RESULT_STATUS_FAIL indicates the execution of the condition/consideration failed.
                        title: >-
                          RecordOutput encapsulates the output of a process
                          recorded on chain
                      title: >-
                        output(s) is the results of executing the process on the
                        given process indicated in this record
                  title: >-
                    A record (of fact) is attached to a session or each
                    consideration output from a contract
            title: >-
              RecordsByScopeIDResponse is the response to a
              RecordsByScopeIDRequest
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: scope_id
          in: path
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      tags:
        - Query
  '/provenance/metadata/v1/scope/id/{scope_id}/session/{session_id}':
    get:
      summary: >-
        SessionContextByID returns a specific session context within a scope (or
        all sessions)
      operationId: SessionContextByID
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              scope_id:
                type: string
              session_id:
                type: string
              sessions:
                type: array
                items:
                  type: object
                  properties:
                    session_id:
                      type: string
                      format: byte
                    specification_id:
                      type: string
                      format: byte
                      description: >-
                        unique id of the contract specification that was used to
                        create this session.
                    parties:
                      type: array
                      items:
                        type: object
                        properties:
                          address:
                            type: string
                            title: address of the account (on chain)
                          role:
                            type: string
                            enum:
                              - PARTY_TYPE_UNSPECIFIED
                              - PARTY_TYPE_ORIGINATOR
                              - PARTY_TYPE_SERVICER
                              - PARTY_TYPE_INVESTOR
                              - PARTY_TYPE_CUSTODIAN
                              - PARTY_TYPE_OWNER
                              - PARTY_TYPE_AFFILIATE
                              - PARTY_TYPE_OMNIBUS
                              - PARTY_TYPE_PROVENANCE
                            default: PARTY_TYPE_UNSPECIFIED
                            description: >-
                              - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED
                              is an error condition
                               - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                               - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                               - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                               - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                               - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                               - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                               - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                               - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
                            title: >-
                              PartyType are the different roles parties on a
                              contract may use
                        title: >-
                          A Party is an address with/in a given role associated
                          with a contract
                      title: Set of identities that signed this contract
                    name:
                      type: string
                      title: >-
                        name to associate with this session execution context,
                        typically classname
                    audit:
                      description: >-
                        Created by, updated by, timestamps, version number, and
                        related info.
                      type: object
                      properties:
                        created_date:
                          type: string
                          format: date-time
                          title: the date/time when this entry was created
                        created_by:
                          type: string
                          title: the address of the account that created this record
                        updated_date:
                          type: string
                          format: date-time
                          title: the date/time when this entry was last updated
                        updated_by:
                          type: string
                          title: the address of the account that modified this record
                        version:
                          type: integer
                          format: int64
                          title: >-
                            an optional version number that is incremented with
                            each update
                        message:
                          type: string
                          title: >-
                            an optional message associated with the
                            creation/update event
                      title: >-
                        AuditFields capture information about the last account
                        to make modifications and when they were made
                  description: >-
                    The context will have a specification and set of parties
                    involved.  The Session may be updated several

                    times so long as the parties listed are signers on the
                    transaction.  NOTE: When there are no Records within a Scope

                    that reference a Session it is removed.
                  title: >-
                    A Session is created for an execution context against a
                    specific specification instance
            title: >-
              SessionContextByIDResponse is the response to a
              SessionContextByIDRequest
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: scope_id
          in: path
          required: true
          type: string
        - name: session_id
          in: path
          required: true
          type: string
      tags:
        - Query
  '/provenance/metadata/v1/scope/uuid/{scope_uuid}/records/{name}':
    get:
      summary: >-
        RecordsByScopeUUID returns a collection of the records in a scope by
        scope uuid or a specific one by name
      operationId: RecordsByScopeUUID
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              scope_uuid:
                type: string
              scope_id:
                type: string
              records:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      title: >-
                        name/identifier for this record.  Value must be unique
                        within the scope.  Also known as a Fact name
                    session_id:
                      type: string
                      format: byte
                      title: >-
                        id of the session context that was used to create this
                        record (use with filtered kvprefix iterator)
                    process:
                      title: >-
                        process contain information used to uniquely identify an
                        execution on or off chain that generated this record
                      type: object
                      properties:
                        address:
                          type: string
                          title: >-
                            the address of a smart contract used for this
                            process
                        hash:
                          type: string
                          title: the hash of an off-chain process used
                        name:
                          type: string
                          title: >-
                            a name associated with the process (type_name,
                            classname or smart contract common name)
                        method:
                          type: string
                          title: >-
                            method is a name or reference to a specific
                            operation (method) within a class/contract that was
                            invoked
                    inputs:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: >-
                              Name value included to link back to the definition
                              spec.
                          record_id:
                            type: string
                            format: byte
                            title: >-
                              the address of a record on chain (For Established
                              Records)
                          hash:
                            type: string
                            title: >-
                              the hash of an off-chain piece of information (For
                              Proposed Records)
                          type_name:
                            type: string
                            title: from proposed fact structure to unmarshal
                          status:
                            title: >-
                              Indicates if this input was a recorded fact on
                              chain or just a given hashed input
                            type: string
                            enum:
                              - RECORD_INPUT_STATUS_UNSPECIFIED
                              - RECORD_INPUT_STATUS_PROPOSED
                              - RECORD_INPUT_STATUS_RECORD
                            default: RECORD_INPUT_STATUS_UNSPECIFIED
                            description: >-
                              - RECORD_INPUT_STATUS_UNSPECIFIED:
                              RECORD_INPUT_STATUS_UNSPECIFIED indicates an
                              invalid/unknown input type
                               - RECORD_INPUT_STATUS_PROPOSED: RECORD_INPUT_STATUS_PROPOSED indicates this input was an arbitrary piece of data that was hashed
                               - RECORD_INPUT_STATUS_RECORD: RECORD_INPUT_STATUS_RECORD indicates this input is a reference to a previously recorded fact on blockchain
                        title: Tracks the inputs used to establish this record
                      title: >-
                        inputs used with the process to achieve the output on
                        this record
                    outputs:
                      type: array
                      items:
                        type: object
                        properties:
                          hash:
                            type: string
                            title: >-
                              Hash of the data output that was output/generated
                              for this record
                          status:
                            title: >-
                              Status of the process execution associated with
                              this output indicating success,failure, or pending
                            type: string
                            enum:
                              - RESULT_STATUS_UNSPECIFIED
                              - RESULT_STATUS_PASS
                              - RESULT_STATUS_SKIP
                              - RESULT_STATUS_FAIL
                            default: RESULT_STATUS_UNSPECIFIED
                            description: >-
                              - RESULT_STATUS_UNSPECIFIED:
                              RESULT_STATUS_UNSPECIFIED indicates an unset
                              condition
                               - RESULT_STATUS_PASS: RESULT_STATUS_PASS indicates the execution was successfult
                               - RESULT_STATUS_SKIP: RESULT_STATUS_SKIP indicates condition/consideration was skipped due to missing inputs or delayed execution
                               - RESULT_STATUS_FAIL: RESULT_STATUS_FAIL indicates the execution of the condition/consideration failed.
                        title: >-
                          RecordOutput encapsulates the output of a process
                          recorded on chain
                      title: >-
                        output(s) is the results of executing the process on the
                        given process indicated in this record
                  title: >-
                    A record (of fact) is attached to a session or each
                    consideration output from a contract
            title: >-
              RecordsByScopeUUIDResponse is the response to a
              RecordsByScopeUUIDRequest
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: scope_uuid
          in: path
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      tags:
        - Query
  '/provenance/metadata/v1/scope/uuid/{scope_uuid}/session/{session_uuid}':
    get:
      summary: >-
        SessionContextByUUID returns a specific session context within a scope
        (or all sessions)
      operationId: SessionContextByUUID
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              scope_id:
                type: string
              session_id:
                type: string
              sessions:
                type: array
                items:
                  type: object
                  properties:
                    session_id:
                      type: string
                      format: byte
                    specification_id:
                      type: string
                      format: byte
                      description: >-
                        unique id of the contract specification that was used to
                        create this session.
                    parties:
                      type: array
                      items:
                        type: object
                        properties:
                          address:
                            type: string
                            title: address of the account (on chain)
                          role:
                            type: string
                            enum:
                              - PARTY_TYPE_UNSPECIFIED
                              - PARTY_TYPE_ORIGINATOR
                              - PARTY_TYPE_SERVICER
                              - PARTY_TYPE_INVESTOR
                              - PARTY_TYPE_CUSTODIAN
                              - PARTY_TYPE_OWNER
                              - PARTY_TYPE_AFFILIATE
                              - PARTY_TYPE_OMNIBUS
                              - PARTY_TYPE_PROVENANCE
                            default: PARTY_TYPE_UNSPECIFIED
                            description: >-
                              - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED
                              is an error condition
                               - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                               - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                               - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                               - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                               - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                               - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                               - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                               - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
                            title: >-
                              PartyType are the different roles parties on a
                              contract may use
                        title: >-
                          A Party is an address with/in a given role associated
                          with a contract
                      title: Set of identities that signed this contract
                    name:
                      type: string
                      title: >-
                        name to associate with this session execution context,
                        typically classname
                    audit:
                      description: >-
                        Created by, updated by, timestamps, version number, and
                        related info.
                      type: object
                      properties:
                        created_date:
                          type: string
                          format: date-time
                          title: the date/time when this entry was created
                        created_by:
                          type: string
                          title: the address of the account that created this record
                        updated_date:
                          type: string
                          format: date-time
                          title: the date/time when this entry was last updated
                        updated_by:
                          type: string
                          title: the address of the account that modified this record
                        version:
                          type: integer
                          format: int64
                          title: >-
                            an optional version number that is incremented with
                            each update
                        message:
                          type: string
                          title: >-
                            an optional message associated with the
                            creation/update event
                      title: >-
                        AuditFields capture information about the last account
                        to make modifications and when they were made
                  description: >-
                    The context will have a specification and set of parties
                    involved.  The Session may be updated several

                    times so long as the parties listed are signers on the
                    transaction.  NOTE: When there are no Records within a Scope

                    that reference a Session it is removed.
                  title: >-
                    A Session is created for an execution context against a
                    specific specification instance
            title: >-
              SessionContextByUUIDResponse is the response to a
              SessionContextByUUIDRequest
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: scope_uuid
          in: path
          required: true
          type: string
        - name: session_uuid
          in: path
          required: true
          type: string
      tags:
        - Query
  '/provenance/metadata/v1/scope/{scope_uuid}':
    get:
      summary: Scope returns a specific scope by id
      operationId: Scope
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              scope:
                type: object
                properties:
                  scope_id:
                    type: string
                    format: byte
                    title: >-
                      Unique ID for this scope.  Implements sdk.Address
                      interface for use where addresses are required in Cosmos
                  specification_id:
                    type: string
                    format: byte
                    title: >-
                      the scope specification that contains the specifications
                      for data elements allowed within this scope
                  owners:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                          title: address of the account (on chain)
                        role:
                          type: string
                          enum:
                            - PARTY_TYPE_UNSPECIFIED
                            - PARTY_TYPE_ORIGINATOR
                            - PARTY_TYPE_SERVICER
                            - PARTY_TYPE_INVESTOR
                            - PARTY_TYPE_CUSTODIAN
                            - PARTY_TYPE_OWNER
                            - PARTY_TYPE_AFFILIATE
                            - PARTY_TYPE_OMNIBUS
                            - PARTY_TYPE_PROVENANCE
                          default: PARTY_TYPE_UNSPECIFIED
                          description: >-
                            - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is
                            an error condition
                             - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                             - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                             - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                             - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                             - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                             - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                             - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                             - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
                          title: >-
                            PartyType are the different roles parties on a
                            contract may use
                      title: >-
                        A Party is an address with/in a given role associated
                        with a contract
                    description: >-
                      These parties represent top level owners of the records
                      within.  These parties must sign any requests that modify

                      the data within the scope.  These addresses are in union
                      with parties listed on the sessions.
                  data_access:
                    type: array
                    items:
                      type: string
                    description: >-
                      Addessses in this list are authorized to recieve off-chain
                      data associated with this scope.
                  value_owner_address:
                    type: string
                    description: >-
                      An address that controls the value associated with this
                      scope.  Standard blockchain accounts and marker accounts

                      are supported for this value.  This attribute may only be
                      changed by the entity indicated once it is set.
                description: >-
                  Scope defines a root reference for a collection of records
                  owned by one or more parties.
              sessions:
                type: array
                items:
                  type: object
                  properties:
                    session_id:
                      type: string
                      format: byte
                    specification_id:
                      type: string
                      format: byte
                      description: >-
                        unique id of the contract specification that was used to
                        create this session.
                    parties:
                      type: array
                      items:
                        type: object
                        properties:
                          address:
                            type: string
                            title: address of the account (on chain)
                          role:
                            type: string
                            enum:
                              - PARTY_TYPE_UNSPECIFIED
                              - PARTY_TYPE_ORIGINATOR
                              - PARTY_TYPE_SERVICER
                              - PARTY_TYPE_INVESTOR
                              - PARTY_TYPE_CUSTODIAN
                              - PARTY_TYPE_OWNER
                              - PARTY_TYPE_AFFILIATE
                              - PARTY_TYPE_OMNIBUS
                              - PARTY_TYPE_PROVENANCE
                            default: PARTY_TYPE_UNSPECIFIED
                            description: >-
                              - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED
                              is an error condition
                               - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                               - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                               - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                               - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                               - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                               - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                               - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                               - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
                            title: >-
                              PartyType are the different roles parties on a
                              contract may use
                        title: >-
                          A Party is an address with/in a given role associated
                          with a contract
                      title: Set of identities that signed this contract
                    name:
                      type: string
                      title: >-
                        name to associate with this session execution context,
                        typically classname
                    audit:
                      description: >-
                        Created by, updated by, timestamps, version number, and
                        related info.
                      type: object
                      properties:
                        created_date:
                          type: string
                          format: date-time
                          title: the date/time when this entry was created
                        created_by:
                          type: string
                          title: the address of the account that created this record
                        updated_date:
                          type: string
                          format: date-time
                          title: the date/time when this entry was last updated
                        updated_by:
                          type: string
                          title: the address of the account that modified this record
                        version:
                          type: integer
                          format: int64
                          title: >-
                            an optional version number that is incremented with
                            each update
                        message:
                          type: string
                          title: >-
                            an optional message associated with the
                            creation/update event
                      title: >-
                        AuditFields capture information about the last account
                        to make modifications and when they were made
                  description: >-
                    The context will have a specification and set of parties
                    involved.  The Session may be updated several

                    times so long as the parties listed are signers on the
                    transaction.  NOTE: When there are no Records within a Scope

                    that reference a Session it is removed.
                  title: >-
                    A Session is created for an execution context against a
                    specific specification instance
              records:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      title: >-
                        name/identifier for this record.  Value must be unique
                        within the scope.  Also known as a Fact name
                    session_id:
                      type: string
                      format: byte
                      title: >-
                        id of the session context that was used to create this
                        record (use with filtered kvprefix iterator)
                    process:
                      title: >-
                        process contain information used to uniquely identify an
                        execution on or off chain that generated this record
                      type: object
                      properties:
                        address:
                          type: string
                          title: >-
                            the address of a smart contract used for this
                            process
                        hash:
                          type: string
                          title: the hash of an off-chain process used
                        name:
                          type: string
                          title: >-
                            a name associated with the process (type_name,
                            classname or smart contract common name)
                        method:
                          type: string
                          title: >-
                            method is a name or reference to a specific
                            operation (method) within a class/contract that was
                            invoked
                    inputs:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: >-
                              Name value included to link back to the definition
                              spec.
                          record_id:
                            type: string
                            format: byte
                            title: >-
                              the address of a record on chain (For Established
                              Records)
                          hash:
                            type: string
                            title: >-
                              the hash of an off-chain piece of information (For
                              Proposed Records)
                          type_name:
                            type: string
                            title: from proposed fact structure to unmarshal
                          status:
                            title: >-
                              Indicates if this input was a recorded fact on
                              chain or just a given hashed input
                            type: string
                            enum:
                              - RECORD_INPUT_STATUS_UNSPECIFIED
                              - RECORD_INPUT_STATUS_PROPOSED
                              - RECORD_INPUT_STATUS_RECORD
                            default: RECORD_INPUT_STATUS_UNSPECIFIED
                            description: >-
                              - RECORD_INPUT_STATUS_UNSPECIFIED:
                              RECORD_INPUT_STATUS_UNSPECIFIED indicates an
                              invalid/unknown input type
                               - RECORD_INPUT_STATUS_PROPOSED: RECORD_INPUT_STATUS_PROPOSED indicates this input was an arbitrary piece of data that was hashed
                               - RECORD_INPUT_STATUS_RECORD: RECORD_INPUT_STATUS_RECORD indicates this input is a reference to a previously recorded fact on blockchain
                        title: Tracks the inputs used to establish this record
                      title: >-
                        inputs used with the process to achieve the output on
                        this record
                    outputs:
                      type: array
                      items:
                        type: object
                        properties:
                          hash:
                            type: string
                            title: >-
                              Hash of the data output that was output/generated
                              for this record
                          status:
                            title: >-
                              Status of the process execution associated with
                              this output indicating success,failure, or pending
                            type: string
                            enum:
                              - RESULT_STATUS_UNSPECIFIED
                              - RESULT_STATUS_PASS
                              - RESULT_STATUS_SKIP
                              - RESULT_STATUS_FAIL
                            default: RESULT_STATUS_UNSPECIFIED
                            description: >-
                              - RESULT_STATUS_UNSPECIFIED:
                              RESULT_STATUS_UNSPECIFIED indicates an unset
                              condition
                               - RESULT_STATUS_PASS: RESULT_STATUS_PASS indicates the execution was successfult
                               - RESULT_STATUS_SKIP: RESULT_STATUS_SKIP indicates condition/consideration was skipped due to missing inputs or delayed execution
                               - RESULT_STATUS_FAIL: RESULT_STATUS_FAIL indicates the execution of the condition/consideration failed.
                        title: >-
                          RecordOutput encapsulates the output of a process
                          recorded on chain
                      title: >-
                        output(s) is the results of executing the process on the
                        given process indicated in this record
                  title: >-
                    A record (of fact) is attached to a session or each
                    consideration output from a contract
              scope_uuid:
                type: string
            description: ScopeResponse is the response to a scope request.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: scope_uuid
          in: path
          required: true
          type: string
      tags:
        - Query
  '/provenance/metadata/v1/scopespec/{specification_uuid}':
    get:
      summary: >-
        ScopeSpecification returns a scope specification for the given
        specification uuid
      operationId: ScopeSpecification
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              scope_specification:
                type: object
                properties:
                  specification_id:
                    type: string
                    format: byte
                    title: unique identifier for this specification on chain
                  description:
                    description: General information about this scope specification.
                    type: object
                    properties:
                      name:
                        type: string
                        description: A Name for this thing.
                      description:
                        type: string
                        description: A description of this thing.
                      website_url:
                        type: string
                        description: URL to find even more info.
                      icon_url:
                        type: string
                        description: URL of an icon.
                  owner_addresses:
                    type: array
                    items:
                      type: string
                    description: Addresses of the owners of this scope specification.
                  parties_involved:
                    type: array
                    items:
                      type: string
                      enum:
                        - PARTY_TYPE_UNSPECIFIED
                        - PARTY_TYPE_ORIGINATOR
                        - PARTY_TYPE_SERVICER
                        - PARTY_TYPE_INVESTOR
                        - PARTY_TYPE_CUSTODIAN
                        - PARTY_TYPE_OWNER
                        - PARTY_TYPE_AFFILIATE
                        - PARTY_TYPE_OMNIBUS
                        - PARTY_TYPE_PROVENANCE
                      default: PARTY_TYPE_UNSPECIFIED
                      description: >-
                        - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an
                        error condition
                         - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                         - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                         - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                         - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                         - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                         - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                         - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                         - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
                      title: >-
                        PartyType are the different roles parties on a contract
                        may use
                    title: >-
                      A list of parties that must be present on a scope (and
                      their associated roles)
                  contract_spec_ids:
                    type: array
                    items:
                      type: string
                      format: byte
                    description: >-
                      A list of contract specification ids allowed for a scope
                      based on this specification.
                title: >-
                  ScopeSpecification defines the required parties, resources,
                  conditions, and consideration outputs for a contract
              specification_uuid:
                type: string
            description: >-
              ScopeSpecification is the response to a scope specification
              request.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: specification_uuid
          in: path
          required: true
          type: string
      tags:
        - Query
  '/provenance/metadata/v1/valueownership/{address}':
    get:
      summary: >-
        ValueOwnership returns a list of scope identifiers that list the given
        address as the value owner
      operationId: ValueOwnership
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              scope_uuids:
                type: array
                items:
                  type: string
                description: A list of scope ids (uuid) associated with the given address.
              pagination:
                description: pagination defines an optional pagination for the request.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: >-
              ValueOwnershipResponse is the reponse to the Valueownership
              request and includes a list of scope identifiers
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/provenance/name/v1/lookup/{address}':
    get:
      summary: ReverseLookup queries for all names bound against a given address
      operationId: ReverseLookup
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              name:
                type: array
                items:
                  type: string
                title: an array of names bound against a given address
              pagination:
                description: pagination defines an optional pagination for the request.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryReverseLookupResponse is the response type for the
              Query/Resolve method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address to find name records for
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /provenance/name/v1/params:
    get:
      summary: Params queries params of the name module.
      operationId: NameParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  max_segment_length:
                    type: integer
                    format: int64
                    title: maximum length of name segment to allow
                  min_segment_length:
                    type: integer
                    format: int64
                    title: minimum length of name segment to allow
                  max_name_levels:
                    type: integer
                    format: int64
                    title: >-
                      maximum number of name segments to allow.  Example:
                      `foo.bar.baz` would be 3
                  allow_unrestricted_names:
                    type: boolean
                    title: determines if unrestricted name keys are allowed or not
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  '/provenance/name/v1/resolve/{name}':
    get:
      summary: Resolve queries for the address associated with a given name
      operationId: Resolve
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              address:
                type: string
                title: a string containing the address the name resolves to
            description: >-
              QueryResolveResponse is the response type for the Query/Resolve
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: name
          description: name to resolve the address for
          in: path
          required: true
          type: string
      tags:
        - Query
definitions:
  CheckTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          type: object
          properties:
            key:
              type: string
            value:
              type: string
    example:
      code: 0
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
        - ''
        - ''
  DeliverTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          type: object
          properties:
            key:
              type: string
            value:
              type: string
    example:
      code: 5
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
        - ''
        - ''
  BroadcastTxCommitResult:
    type: object
    properties:
      check_tx:
        type: object
        properties:
          code:
            type: integer
          data:
            type: string
          gas_used:
            type: integer
          gas_wanted:
            type: integer
          info:
            type: string
          log:
            type: string
          tags:
            type: array
            items:
              type: object
              properties:
                key:
                  type: string
                value:
                  type: string
        example:
          code: 0
          data: data
          log: log
          gas_used: 5000
          gas_wanted: 10000
          info: info
          tags:
            - ''
            - ''
      deliver_tx:
        type: object
        properties:
          code:
            type: integer
          data:
            type: string
          gas_used:
            type: integer
          gas_wanted:
            type: integer
          info:
            type: string
          log:
            type: string
          tags:
            type: array
            items:
              type: object
              properties:
                key:
                  type: string
                value:
                  type: string
        example:
          code: 5
          data: data
          log: log
          gas_used: 5000
          gas_wanted: 10000
          info: info
          tags:
            - ''
            - ''
      hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      height:
        type: integer
  KVPair:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  Msg:
    type: object
  Address:
    type: string
    description: bech32 encoded address
    example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
  ValidatorAddress:
    type: string
    description: bech32 encoded address
    example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
  Coin:
    type: object
    properties:
      denom:
        type: string
        example: vspn
      amount:
        type: string
        example: '5000'
  Hash:
    type: string
    example: EE5F3404034C524501629B56E0DDC38FAD651F04
  TxQuery:
    type: object
    properties:
      hash:
        type: string
        example: D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656
      height:
        type: number
        example: 368
      tx:
        type: object
        properties:
          msg:
            type: array
            items:
              type: object
          fee:
            type: object
            properties:
              gas:
                type: string
              amount:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      example: vspn
                    amount:
                      type: string
                      example: '5000'
          memo:
            type: string
          signature:
            type: object
            properties:
              signature:
                type: string
                example: >-
                  MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
              pub_key:
                type: object
                properties:
                  type:
                    type: string
                    example: tendermint/PubKeySecp256k1
                  value:
                    type: string
                    example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
              account_number:
                type: string
                example: '0'
              sequence:
                type: string
                example: '0'
      result:
        type: object
        properties:
          log:
            type: string
          gas_wanted:
            type: string
            example: '200000'
          gas_used:
            type: string
            example: '26354'
          tags:
            type: array
            items:
              type: object
              properties:
                key:
                  type: string
                value:
                  type: string
  PaginatedQueryTxs:
    type: object
    properties:
      total_count:
        type: number
        example: 1
      count:
        type: number
        example: 1
      page_number:
        type: number
        example: 1
      page_total:
        type: number
        example: 1
      limit:
        type: number
        example: 30
      txs:
        type: array
        items:
          type: object
          properties:
            hash:
              type: string
              example: D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656
            height:
              type: number
              example: 368
            tx:
              type: object
              properties:
                msg:
                  type: array
                  items:
                    type: object
                fee:
                  type: object
                  properties:
                    gas:
                      type: string
                    amount:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            example: vspn
                          amount:
                            type: string
                            example: '5000'
                memo:
                  type: string
                signature:
                  type: object
                  properties:
                    signature:
                      type: string
                      example: >-
                        MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
                    pub_key:
                      type: object
                      properties:
                        type:
                          type: string
                          example: tendermint/PubKeySecp256k1
                        value:
                          type: string
                          example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
                    account_number:
                      type: string
                      example: '0'
                    sequence:
                      type: string
                      example: '0'
            result:
              type: object
              properties:
                log:
                  type: string
                gas_wanted:
                  type: string
                  example: '200000'
                gas_used:
                  type: string
                  example: '26354'
                tags:
                  type: array
                  items:
                    type: object
                    properties:
                      key:
                        type: string
                      value:
                        type: string
  StdTx:
    type: object
    properties:
      msg:
        type: array
        items:
          type: object
      fee:
        type: object
        properties:
          gas:
            type: string
          amount:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                  example: vspn
                amount:
                  type: string
                  example: '5000'
      memo:
        type: string
      signature:
        type: object
        properties:
          signature:
            type: string
            example: >-
              MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
          pub_key:
            type: object
            properties:
              type:
                type: string
                example: tendermint/PubKeySecp256k1
              value:
                type: string
                example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
          account_number:
            type: string
            example: '0'
          sequence:
            type: string
            example: '0'
  BlockID:
    type: object
    properties:
      hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      parts:
        type: object
        properties:
          total:
            type: number
            example: 0
          hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
  BlockHeader:
    type: object
    properties:
      chain_id:
        type: string
        example: provenance-test-chain
      height:
        type: number
        example: 1
      time:
        type: string
        example: '2017-12-30T05:53:09.287+01:00'
      num_txs:
        type: number
        example: 0
      last_block_id:
        type: object
        properties:
          hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          parts:
            type: object
            properties:
              total:
                type: number
                example: 0
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
      total_txs:
        type: number
        example: 35
      last_commit_hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      data_hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      validators_hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      next_validators_hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      consensus_hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      app_hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      last_results_hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      evidence_hash:
        type: string
        example: EE5F3404034C524501629B56E0DDC38FAD651F04
      proposer_address:
        type: string
        description: bech32 encoded address
        example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
      version:
        type: object
        properties:
          block:
            type: string
            example: 10
          app:
            type: string
            example: 0
  Block:
    type: object
    properties:
      header:
        type: object
        properties:
          chain_id:
            type: string
            example: provenance-test-chain
          height:
            type: number
            example: 1
          time:
            type: string
            example: '2017-12-30T05:53:09.287+01:00'
          num_txs:
            type: number
            example: 0
          last_block_id:
            type: object
            properties:
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              parts:
                type: object
                properties:
                  total:
                    type: number
                    example: 0
                  hash:
                    type: string
                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
          total_txs:
            type: number
            example: 35
          last_commit_hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          data_hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          validators_hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          next_validators_hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          consensus_hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          app_hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          last_results_hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          evidence_hash:
            type: string
            example: EE5F3404034C524501629B56E0DDC38FAD651F04
          proposer_address:
            type: string
            description: bech32 encoded address
            example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
          version:
            type: object
            properties:
              block:
                type: string
                example: 10
              app:
                type: string
                example: 0
      txs:
        type: array
        items:
          type: string
      evidence:
        type: array
        items:
          type: string
      last_commit:
        type: object
        properties:
          block_id:
            type: object
            properties:
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              parts:
                type: object
                properties:
                  total:
                    type: number
                    example: 0
                  hash:
                    type: string
                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
          precommits:
            type: array
            items:
              type: object
              properties:
                validator_address:
                  type: string
                validator_index:
                  type: string
                  example: '0'
                height:
                  type: string
                  example: '0'
                round:
                  type: string
                  example: '0'
                timestamp:
                  type: string
                  example: '2017-12-30T05:53:09.287+01:00'
                type:
                  type: number
                  example: 2
                block_id:
                  type: object
                  properties:
                    hash:
                      type: string
                      example: EE5F3404034C524501629B56E0DDC38FAD651F04
                    parts:
                      type: object
                      properties:
                        total:
                          type: number
                          example: 0
                        hash:
                          type: string
                          example: EE5F3404034C524501629B56E0DDC38FAD651F04
                signature:
                  type: string
                  example: >-
                    7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
  BlockQuery:
    type: object
    properties:
      block_meta:
        type: object
        properties:
          header:
            type: object
            properties:
              chain_id:
                type: string
                example: provenance-test-chain
              height:
                type: number
                example: 1
              time:
                type: string
                example: '2017-12-30T05:53:09.287+01:00'
              num_txs:
                type: number
                example: 0
              last_block_id:
                type: object
                properties:
                  hash:
                    type: string
                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
                  parts:
                    type: object
                    properties:
                      total:
                        type: number
                        example: 0
                      hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
              total_txs:
                type: number
                example: 35
              last_commit_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              data_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              validators_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              next_validators_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              consensus_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              app_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              last_results_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              evidence_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              proposer_address:
                type: string
                description: bech32 encoded address
                example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
              version:
                type: object
                properties:
                  block:
                    type: string
                    example: 10
                  app:
                    type: string
                    example: 0
          block_id:
            type: object
            properties:
              hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              parts:
                type: object
                properties:
                  total:
                    type: number
                    example: 0
                  hash:
                    type: string
                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
      block:
        type: object
        properties:
          header:
            type: object
            properties:
              chain_id:
                type: string
                example: provenance-test-chain
              height:
                type: number
                example: 1
              time:
                type: string
                example: '2017-12-30T05:53:09.287+01:00'
              num_txs:
                type: number
                example: 0
              last_block_id:
                type: object
                properties:
                  hash:
                    type: string
                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
                  parts:
                    type: object
                    properties:
                      total:
                        type: number
                        example: 0
                      hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
              total_txs:
                type: number
                example: 35
              last_commit_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              data_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              validators_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              next_validators_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              consensus_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              app_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              last_results_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              evidence_hash:
                type: string
                example: EE5F3404034C524501629B56E0DDC38FAD651F04
              proposer_address:
                type: string
                description: bech32 encoded address
                example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
              version:
                type: object
                properties:
                  block:
                    type: string
                    example: 10
                  app:
                    type: string
                    example: 0
          txs:
            type: array
            items:
              type: string
          evidence:
            type: array
            items:
              type: string
          last_commit:
            type: object
            properties:
              block_id:
                type: object
                properties:
                  hash:
                    type: string
                    example: EE5F3404034C524501629B56E0DDC38FAD651F04
                  parts:
                    type: object
                    properties:
                      total:
                        type: number
                        example: 0
                      hash:
                        type: string
                        example: EE5F3404034C524501629B56E0DDC38FAD651F04
              precommits:
                type: array
                items:
                  type: object
                  properties:
                    validator_address:
                      type: string
                    validator_index:
                      type: string
                      example: '0'
                    height:
                      type: string
                      example: '0'
                    round:
                      type: string
                      example: '0'
                    timestamp:
                      type: string
                      example: '2017-12-30T05:53:09.287+01:00'
                    type:
                      type: number
                      example: 2
                    block_id:
                      type: object
                      properties:
                        hash:
                          type: string
                          example: EE5F3404034C524501629B56E0DDC38FAD651F04
                        parts:
                          type: object
                          properties:
                            total:
                              type: number
                              example: 0
                            hash:
                              type: string
                              example: EE5F3404034C524501629B56E0DDC38FAD651F04
                    signature:
                      type: string
                      example: >-
                        7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
  DelegationDelegatorReward:
    type: object
    properties:
      validator_address:
        type: string
        description: bech32 encoded address
        example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
      reward:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              example: vspn
            amount:
              type: string
              example: '5000'
  DelegatorTotalRewards:
    type: object
    properties:
      rewards:
        type: array
        items:
          type: object
          properties:
            validator_address:
              type: string
              description: bech32 encoded address
              example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
            reward:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    example: vspn
                  amount:
                    type: string
                    example: '5000'
      total:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              example: vspn
            amount:
              type: string
              example: '5000'
  BaseReq:
    type: object
    properties:
      from:
        type: string
        example: pb1ytyfcdj0nymx9afx34mvwj6gyrped0hmfd9qyq
        description: Sender address or Keybase name to generate a transaction
      memo:
        type: string
        example: Sent via Provenance API
      chain_id:
        type: string
        example: provenance-test-chain
      account_number:
        type: string
        example: '0'
      sequence:
        type: string
        example: '1'
      gas:
        type: string
        example: '200000'
      gas_adjustment:
        type: string
        example: '1.2'
      fees:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              example: vspn
            amount:
              type: string
              example: '5000'
      simulate:
        type: boolean
        example: false
        description: >-
          Estimate gas for a transaction (cannot be used in conjunction with
          generate_only)
  TendermintValidator:
    type: object
    properties:
      address:
        type: string
        description: bech32 encoded address
        example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
      pub_key:
        type: string
        example: >-
          pbvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
      voting_power:
        type: string
        example: '1000'
      proposer_priority:
        type: string
        example: '1000'
  TextProposal:
    type: object
    properties:
      proposal_id:
        type: integer
      title:
        type: string
      description:
        type: string
      proposal_type:
        type: string
      proposal_status:
        type: string
      final_tally_result:
        type: object
        properties:
          'yes':
            type: string
            example: '0.0000000000'
          abstain:
            type: string
            example: '0.0000000000'
          'no':
            type: string
            example: '0.0000000000'
          no_with_veto:
            type: string
            example: '0.0000000000'
      submit_time:
        type: string
      total_deposit:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              example: vspn
            amount:
              type: string
              example: '5000'
      voting_start_time:
        type: string
  Proposer:
    type: object
    properties:
      proposal_id:
        type: string
      proposer:
        type: string
  Deposit:
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              example: vspn
            amount:
              type: string
              example: '5000'
      proposal_id:
        type: string
      depositor:
        type: string
        description: bech32 encoded address
        example: pb1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
  TallyResult:
    type: object
    properties:
      'yes':
        type: string
        example: '0.0000000000'
      abstain:
        type: string
        example: '0.0000000000'
      'no':
        type: string
        example: '0.0000000000'
      no_with_veto:
        type: string
        example: '0.0000000000'
  Vote:
    type: object
    properties:
      voter:
        type: string
      proposal_id:
        type: string
      option:
        type: string
  Validator:
    type: object
    properties:
      operator_address:
        type: string
        description: bech32 encoded address
        example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
      consensus_pubkey:
        type: string
        example: >-
          pbvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
      jailed:
        type: boolean
      status:
        type: integer
      tokens:
        type: string
      delegator_shares:
        type: string
      description:
        type: object
        properties:
          moniker:
            type: string
          identity:
            type: string
          website:
            type: string
          security_contact:
            type: string
          details:
            type: string
      bond_height:
        type: string
        example: '0'
      bond_intra_tx_counter:
        type: integer
        example: 0
      unbonding_height:
        type: string
        example: '0'
      unbonding_time:
        type: string
        example: '1970-01-01T00:00:00Z'
      commission:
        type: object
        properties:
          rate:
            type: string
            example: '0'
          max_rate:
            type: string
            example: '0'
          max_change_rate:
            type: string
            example: '0'
          update_time:
            type: string
            example: '1970-01-01T00:00:00Z'
  Delegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
      shares:
        type: string
      balance:
        type: object
        properties:
          denom:
            type: string
            example: vspn
          amount:
            type: string
            example: '5000'
  UnbondingDelegationPair:
    type: object
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
      entries:
        type: array
        items:
          type: object
          properties:
            initial_balance:
              type: string
            balance:
              type: string
            creation_height:
              type: string
            min_time:
              type: string
  UnbondingEntries:
    type: object
    properties:
      initial_balance:
        type: string
      balance:
        type: string
      creation_height:
        type: string
      min_time:
        type: string
  UnbondingDelegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
      initial_balance:
        type: string
      balance:
        type: string
      creation_height:
        type: integer
      min_time:
        type: integer
  Redelegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_src_address:
        type: string
      validator_dst_address:
        type: string
      entries:
        type: array
        items:
          $ref: '#/definitions/Redelegation'
  RedelegationEntry:
    type: object
    properties:
      creation_height:
        type: integer
      completion_time:
        type: integer
      initial_balance:
        type: string
      balance:
        type: string
      shares_dst:
        type: string
  ValidatorDistInfo:
    type: object
    properties:
      operator_address:
        type: string
        description: bech32 encoded address
        example: pbvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
      self_bond_rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              example: vspn
            amount:
              type: string
              example: '5000'
      val_commission:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              example: vspn
            amount:
              type: string
              example: '5000'
  PublicKey:
    type: object
    properties:
      type:
        type: string
      value:
        type: string
  SigningInfo:
    type: object
    properties:
      start_height:
        type: string
      index_offset:
        type: string
      jailed_until:
        type: string
      missed_blocks_counter:
        type: string
  ParamChange:
    type: object
    properties:
      subspace:
        type: string
        example: staking
      key:
        type: string
        example: MaxValidators
      subkey:
        type: string
        example: ''
      value:
        type: object
  Supply:
    type: object
    properties:
      total:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              example: vspn
            amount:
              type: string
              example: '5000'
  cosmos.base.query.v1beta1.PageRequest:
    type: object
    properties:
      key:
        type: string
        format: byte
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
      offset:
        type: string
        format: uint64
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
      limit:
        type: string
        format: uint64
        description: >-
          limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.
      count_total:
        type: boolean
        description: >-
          count_total is set to true  to indicate that the result set should
          include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when
          key

          is set.
    description: |-
      message SomeRequest {
               Foo some_parameter = 1;
               PageRequest pagination = 2;
       }
    title: |-
      PageRequest is to be embedded in gRPC request messages for efficient
      pagination. Ex:
  cosmos.base.query.v1beta1.PageResponse:
    type: object
    properties:
      next_key:
        type: string
        format: byte
        title: |-
          next_key is the key to be passed to PageRequest.key to
          query the next page most efficiently
      total:
        type: string
        format: uint64
        title: |-
          total is total number of results available if PageRequest.count_total
          was set, its value is undefined otherwise
    description: |-
      PageResponse is to be embedded in gRPC response messages where the
      corresponding request message has used PageRequest.

       message SomeResponse {
               repeated Bar results = 1;
               PageResponse page = 2;
       }
  google.protobuf.Any:
    type: object
    properties:
      type_url:
        type: string
        description: >-
          A URL/resource name that uniquely identifies the type of the
          serialized

          protocol buffer message. This string must contain at least

          one "/" character. The last segment of the URL's path must represent

          the fully qualified name of the type (as in

          `path/google.protobuf.Duration`). The name should be in a canonical
          form

          (e.g., leading "." is not accepted).


          In practice, teams usually precompile into the binary all types that
          they

          expect it to use in the context of Any. However, for URLs which use
          the

          scheme `http`, `https`, or no scheme, one can optionally set up a type

          server that maps type URLs to message definitions as follows:


          * If no scheme is provided, `https` is assumed.

          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official

          protobuf release, and it is not used for type URLs beginning with

          type.googleapis.com.


          Schemes other than `http`, `https` (or the empty scheme) might be

          used with implementation specific semantics.
      value:
        type: string
        format: byte
        description: >-
          Must be a valid serialized protocol buffer of the above specified
          type.
    description: >-
      `Any` contains an arbitrary serialized protocol buffer message along with
      a

      URL that describes the type of the serialized message.


      Protobuf library provides support to pack/unpack Any values in the form

      of utility functions or additional generated methods of the Any type.


      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }

       Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

       Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := ptypes.MarshalAny(foo)
           ...
           foo := &pb.Foo{}
           if err := ptypes.UnmarshalAny(any, foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use

      'type.googleapis.com/full.type.name' as the type URL and the unpack

      methods only use the fully qualified type name after the last '/'

      in the type URL, for example "foo.bar.com/x/y.z" will yield type

      name "y.z".



      JSON

      ====

      The JSON representation of an `Any` value uses the regular

      representation of the deserialized, embedded message, with an

      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON

      representation, that representation will be embedded adding a field

      `value` which holds the custom JSON in addition to the `@type`

      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  grpc.gateway.runtime.Error:
    type: object
    properties:
      error:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".



            JSON

            ====

            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
  provenance.attribute.v1.Attribute:
    type: object
    properties:
      name:
        type: string
        description: The attribute name.
      value:
        type: string
        format: byte
        description: The attribute value.
      attribute_type:
        description: The attribute value type.
        type: string
        enum:
          - ATTRIBUTE_TYPE_UNSPECIFIED
          - ATTRIBUTE_TYPE_UUID
          - ATTRIBUTE_TYPE_JSON
          - ATTRIBUTE_TYPE_STRING
          - ATTRIBUTE_TYPE_URI
          - ATTRIBUTE_TYPE_INT
          - ATTRIBUTE_TYPE_FLOAT
          - ATTRIBUTE_TYPE_PROTO
          - ATTRIBUTE_TYPE_BYTES
        default: ATTRIBUTE_TYPE_UNSPECIFIED
        title: >-
          AttributeType defines the type of the data stored in the attribute
          value
      address:
        type: string
        title: The address the attribute is bound to
    title: >-
      Attribute holds a typed key/value structure for data associated with an
      account
  provenance.attribute.v1.AttributeType:
    type: string
    enum:
      - ATTRIBUTE_TYPE_UNSPECIFIED
      - ATTRIBUTE_TYPE_UUID
      - ATTRIBUTE_TYPE_JSON
      - ATTRIBUTE_TYPE_STRING
      - ATTRIBUTE_TYPE_URI
      - ATTRIBUTE_TYPE_INT
      - ATTRIBUTE_TYPE_FLOAT
      - ATTRIBUTE_TYPE_PROTO
      - ATTRIBUTE_TYPE_BYTES
    default: ATTRIBUTE_TYPE_UNSPECIFIED
    description: >-
      - ATTRIBUTE_TYPE_UNSPECIFIED: ATTRIBUTE_TYPE_UNSPECIFIED defines an
      unknown/invalid type
       - ATTRIBUTE_TYPE_UUID: ATTRIBUTE_TYPE_UUID defines an attribute value that contains a string value representation of a V4 uuid
       - ATTRIBUTE_TYPE_JSON: ATTRIBUTE_TYPE_JSON defines an attribute value that contains a byte string containing json data
       - ATTRIBUTE_TYPE_STRING: ATTRIBUTE_TYPE_STRING defines an attribute value that contains a generic string value
       - ATTRIBUTE_TYPE_URI: ATTRIBUTE_TYPE_URI defines an attribute value that contains a URI
       - ATTRIBUTE_TYPE_INT: ATTRIBUTE_TYPE_INT defines an attribute value that contains an integer (cast as int64)
       - ATTRIBUTE_TYPE_FLOAT: ATTRIBUTE_TYPE_FLOAT defines an attribute value that contains a float
       - ATTRIBUTE_TYPE_PROTO: ATTRIBUTE_TYPE_PROTO defines an attribute value that contains a serialized proto value in bytes
       - ATTRIBUTE_TYPE_BYTES: ATTRIBUTE_TYPE_BYTES defines an attribute value that contains an untyped array of bytes
    title: AttributeType defines the type of the data stored in the attribute value
  provenance.attribute.v1.Params:
    type: object
    properties:
      max_value_length:
        type: integer
        format: int64
        title: maximum length of data to allow in an attribute value
    description: Params defines the set of params for the attribute module.
  provenance.attribute.v1.QueryAttributeResponse:
    type: object
    properties:
      account:
        type: string
        description: >-
          a string containing the address of the account the attributes are
          assigned to.
      attributes:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              description: The attribute name.
            value:
              type: string
              format: byte
              description: The attribute value.
            attribute_type:
              description: The attribute value type.
              type: string
              enum:
                - ATTRIBUTE_TYPE_UNSPECIFIED
                - ATTRIBUTE_TYPE_UUID
                - ATTRIBUTE_TYPE_JSON
                - ATTRIBUTE_TYPE_STRING
                - ATTRIBUTE_TYPE_URI
                - ATTRIBUTE_TYPE_INT
                - ATTRIBUTE_TYPE_FLOAT
                - ATTRIBUTE_TYPE_PROTO
                - ATTRIBUTE_TYPE_BYTES
              default: ATTRIBUTE_TYPE_UNSPECIFIED
              title: >-
                AttributeType defines the type of the data stored in the
                attribute value
            address:
              type: string
              title: The address the attribute is bound to
          title: >-
            Attribute holds a typed key/value structure for data associated with
            an account
        title: a list of attribute values
      pagination:
        description: pagination defines an optional pagination for the request.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryAttributeResponse is the response type for the Query/Attribute
      method.
  provenance.attribute.v1.QueryAttributesResponse:
    type: object
    properties:
      account:
        type: string
        title: >-
          a string containing the address of the account the attributes are
          assigned to=
      attributes:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              description: The attribute name.
            value:
              type: string
              format: byte
              description: The attribute value.
            attribute_type:
              description: The attribute value type.
              type: string
              enum:
                - ATTRIBUTE_TYPE_UNSPECIFIED
                - ATTRIBUTE_TYPE_UUID
                - ATTRIBUTE_TYPE_JSON
                - ATTRIBUTE_TYPE_STRING
                - ATTRIBUTE_TYPE_URI
                - ATTRIBUTE_TYPE_INT
                - ATTRIBUTE_TYPE_FLOAT
                - ATTRIBUTE_TYPE_PROTO
                - ATTRIBUTE_TYPE_BYTES
              default: ATTRIBUTE_TYPE_UNSPECIFIED
              title: >-
                AttributeType defines the type of the data stored in the
                attribute value
            address:
              type: string
              title: The address the attribute is bound to
          title: >-
            Attribute holds a typed key/value structure for data associated with
            an account
        title: a list of attribute values
      pagination:
        description: pagination defines an optional pagination for the request.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryAttributesResponse is the response type for the Query/Attribute
      method.
  provenance.attribute.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          max_value_length:
            type: integer
            format: int64
            title: maximum length of data to allow in an attribute value
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  provenance.attribute.v1.QueryScanResponse:
    type: object
    properties:
      account:
        type: string
        title: >-
          a string containing the address of the account the attributes are
          assigned to=
      attributes:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              description: The attribute name.
            value:
              type: string
              format: byte
              description: The attribute value.
            attribute_type:
              description: The attribute value type.
              type: string
              enum:
                - ATTRIBUTE_TYPE_UNSPECIFIED
                - ATTRIBUTE_TYPE_UUID
                - ATTRIBUTE_TYPE_JSON
                - ATTRIBUTE_TYPE_STRING
                - ATTRIBUTE_TYPE_URI
                - ATTRIBUTE_TYPE_INT
                - ATTRIBUTE_TYPE_FLOAT
                - ATTRIBUTE_TYPE_PROTO
                - ATTRIBUTE_TYPE_BYTES
              default: ATTRIBUTE_TYPE_UNSPECIFIED
              title: >-
                AttributeType defines the type of the data stored in the
                attribute value
            address:
              type: string
              title: The address the attribute is bound to
          title: >-
            Attribute holds a typed key/value structure for data associated with
            an account
        title: a list of attribute values
      pagination:
        description: pagination defines an optional pagination for the request.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: QueryScanResponse is the response type for the Query/Attribute method.
  cosmos.bank.v1beta1.DenomUnit:
    type: object
    properties:
      denom:
        type: string
        description: denom represents the string name of the given denom unit (e.g uatom).
      exponent:
        type: integer
        format: int64
        description: >-
          exponent represents power of 10 exponent that one must

          raise the base_denom to in order to equal the given DenomUnit's denom

          1 denom = 1^exponent base_denom

          (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom'
          with

          exponent = 6, thus: 1 atom = 10^6 uatom).
      aliases:
        type: array
        items:
          type: string
        title: aliases is a list of string aliases for the given denom
    description: |-
      DenomUnit represents a struct that describes a given
      denomination unit of the basic token.
  cosmos.bank.v1beta1.Metadata:
    type: object
    properties:
      description:
        type: string
      denom_units:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              description: >-
                denom represents the string name of the given denom unit (e.g
                uatom).
            exponent:
              type: integer
              format: int64
              description: >-
                exponent represents power of 10 exponent that one must

                raise the base_denom to in order to equal the given DenomUnit's
                denom

                1 denom = 1^exponent base_denom

                (e.g. with a base_denom of uatom, one can create a DenomUnit of
                'atom' with

                exponent = 6, thus: 1 atom = 10^6 uatom).
            aliases:
              type: array
              items:
                type: string
              title: aliases is a list of string aliases for the given denom
          description: |-
            DenomUnit represents a struct that describes a given
            denomination unit of the basic token.
        title: denom_units represents the list of DenomUnit's for a given coin
      base:
        type: string
        description: >-
          base represents the base denom (should be the DenomUnit with exponent
          = 0).
      display:
        type: string
        description: |-
          display indicates the suggested denom that should be
          displayed in clients.
    description: |-
      Metadata represents a struct that describes
      a basic token.
  cosmos.base.v1beta1.Coin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      Coin defines a token with a denomination and an amount.

      NOTE: The amount field is an Int which implements the custom method
      signatures required by gogoproto.
  provenance.marker.v1.Access:
    type: string
    enum:
      - ACCESS_UNSPECIFIED
      - ACCESS_MINT
      - ACCESS_BURN
      - ACCESS_DEPOSIT
      - ACCESS_WITHDRAW
      - ACCESS_DELETE
      - ACCESS_ADMIN
      - ACCESS_TRANSFER
    default: ACCESS_UNSPECIFIED
    description: >-
      Access defines the different types of permissions that a marker supports
      granting to an address.

       - ACCESS_UNSPECIFIED: ACCESS_UNSPECIFIED defines a no-op vote option.
       - ACCESS_MINT: ACCESS_MINT is the ability to increase the supply of a marker
       - ACCESS_BURN: ACCESS_BURN is the ability to decrease the supply of the marker using coin held by the marker.
       - ACCESS_DEPOSIT: ACCESS_DEPOSIT is the ability to set a marker reference to this marker in the metadata/scopes module
       - ACCESS_WITHDRAW: ACCESS_WITHDRAW is the ability to remove marker references to this marker in from metadata/scopes or
      transfer coin from this marker account to another account.
       - ACCESS_DELETE: ACCESS_DELETE is the ability to move a proposed, finalized or active marker into the cancelled state. This
      access also allows cancelled markers to be marked for deletion
       - ACCESS_ADMIN: ACCESS_ADMIN is the ability to add access grants for accounts to the list of marker permissions.
       - ACCESS_TRANSFER: ACCESS_TRANSFER is the ability to invoke a send operation using the marker module to facilitate exchange.
      This capability is useful when the marker denomination has "send enabled =
      false" preventing normal bank transfer
  provenance.marker.v1.AccessGrant:
    type: object
    properties:
      address:
        type: string
      permissions:
        type: array
        items:
          type: string
          enum:
            - ACCESS_UNSPECIFIED
            - ACCESS_MINT
            - ACCESS_BURN
            - ACCESS_DEPOSIT
            - ACCESS_WITHDRAW
            - ACCESS_DELETE
            - ACCESS_ADMIN
            - ACCESS_TRANSFER
          default: ACCESS_UNSPECIFIED
          description: >-
            Access defines the different types of permissions that a marker
            supports granting to an address.

             - ACCESS_UNSPECIFIED: ACCESS_UNSPECIFIED defines a no-op vote option.
             - ACCESS_MINT: ACCESS_MINT is the ability to increase the supply of a marker
             - ACCESS_BURN: ACCESS_BURN is the ability to decrease the supply of the marker using coin held by the marker.
             - ACCESS_DEPOSIT: ACCESS_DEPOSIT is the ability to set a marker reference to this marker in the metadata/scopes module
             - ACCESS_WITHDRAW: ACCESS_WITHDRAW is the ability to remove marker references to this marker in from metadata/scopes or
            transfer coin from this marker account to another account.
             - ACCESS_DELETE: ACCESS_DELETE is the ability to move a proposed, finalized or active marker into the cancelled state. This
            access also allows cancelled markers to be marked for deletion
             - ACCESS_ADMIN: ACCESS_ADMIN is the ability to add access grants for accounts to the list of marker permissions.
             - ACCESS_TRANSFER: ACCESS_TRANSFER is the ability to invoke a send operation using the marker module to facilitate exchange.
            This capability is useful when the marker denomination has "send
            enabled = false" preventing normal bank transfer
    description: >-
      AccessGrant associates a colelction of permisssions with an address for
      delegated marker account control.
  provenance.marker.v1.Balance:
    type: object
    properties:
      address:
        type: string
        description: address is the address of the balance holder.
      coins:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: coins defines the different coins this balance holds.
    title: >-
      Balance defines an account address and balance pair used in queries for
      accounts holding a marker
  provenance.marker.v1.MarkerStatus:
    type: string
    enum:
      - MARKER_STATUS_UNSPECIFIED
      - MARKER_STATUS_PROPOSED
      - MARKER_STATUS_FINALIZED
      - MARKER_STATUS_ACTIVE
      - MARKER_STATUS_CANCELLED
      - MARKER_STATUS_DESTROYED
    default: MARKER_STATUS_UNSPECIFIED
    description: |-
      MarkerStatus defines the various states a marker account can be in.

       - MARKER_STATUS_UNSPECIFIED: MARKER_STATUS_UNSPECIFIED - Unknown/Invalid Marker Status
       - MARKER_STATUS_PROPOSED: MARKER_STATUS_PROPOSED - Initial configuration period, updates allowed, token supply not created.
       - MARKER_STATUS_FINALIZED: MARKER_STATUS_FINALIZED - Configuration finalized, ready for supply creation
       - MARKER_STATUS_ACTIVE: MARKER_STATUS_ACTIVE - Supply is created, rules are in force.
       - MARKER_STATUS_CANCELLED: MARKER_STATUS_CANCELLED - Marker has been cancelled, pending destroy
       - MARKER_STATUS_DESTROYED: MARKER_STATUS_DESTROYED - Marker supply has all been recalled, marker is considered destroyed and no further
      actions allowed.
  provenance.marker.v1.Params:
    type: object
    properties:
      max_total_supply:
        type: string
        format: uint64
        title: maximum amount of supply to allow a marker to be created with
      enable_governance:
        type: boolean
        description: indicates if governance based controls of markers is allowed.
      unrestricted_denom_regex:
        type: string
        title: >-
          a regular expression used to validate marker denom values from normal
          create requests (governance

          requests are only subject to platform coin validation denom
          expression)
    description: Params defines the set of params for the account module.
  provenance.marker.v1.QueryAccessResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
            permissions:
              type: array
              items:
                type: string
                enum:
                  - ACCESS_UNSPECIFIED
                  - ACCESS_MINT
                  - ACCESS_BURN
                  - ACCESS_DEPOSIT
                  - ACCESS_WITHDRAW
                  - ACCESS_DELETE
                  - ACCESS_ADMIN
                  - ACCESS_TRANSFER
                default: ACCESS_UNSPECIFIED
                description: >-
                  Access defines the different types of permissions that a
                  marker supports granting to an address.

                   - ACCESS_UNSPECIFIED: ACCESS_UNSPECIFIED defines a no-op vote option.
                   - ACCESS_MINT: ACCESS_MINT is the ability to increase the supply of a marker
                   - ACCESS_BURN: ACCESS_BURN is the ability to decrease the supply of the marker using coin held by the marker.
                   - ACCESS_DEPOSIT: ACCESS_DEPOSIT is the ability to set a marker reference to this marker in the metadata/scopes module
                   - ACCESS_WITHDRAW: ACCESS_WITHDRAW is the ability to remove marker references to this marker in from metadata/scopes or
                  transfer coin from this marker account to another account.
                   - ACCESS_DELETE: ACCESS_DELETE is the ability to move a proposed, finalized or active marker into the cancelled state. This
                  access also allows cancelled markers to be marked for deletion
                   - ACCESS_ADMIN: ACCESS_ADMIN is the ability to add access grants for accounts to the list of marker permissions.
                   - ACCESS_TRANSFER: ACCESS_TRANSFER is the ability to invoke a send operation using the marker module to facilitate exchange.
                  This capability is useful when the marker denomination has
                  "send enabled = false" preventing normal bank transfer
          description: >-
            AccessGrant associates a colelction of permisssions with an address
            for delegated marker account control.
    description: >-
      QueryAccessResponse is the response type for the Query/MarkerAccess
      method.
  provenance.marker.v1.QueryAllMarkersResponse:
    type: object
    properties:
      markers:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".



            JSON

            ====

            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
      pagination:
        description: pagination defines an optional pagination for the request.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryAllMarkersResponse is the response type for the Query/AllMarkers
      method.
  provenance.marker.v1.QueryDenomMetadataResponse:
    type: object
    properties:
      metadata:
        type: object
        properties:
          description:
            type: string
          denom_units:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                  description: >-
                    denom represents the string name of the given denom unit
                    (e.g uatom).
                exponent:
                  type: integer
                  format: int64
                  description: >-
                    exponent represents power of 10 exponent that one must

                    raise the base_denom to in order to equal the given
                    DenomUnit's denom

                    1 denom = 1^exponent base_denom

                    (e.g. with a base_denom of uatom, one can create a DenomUnit
                    of 'atom' with

                    exponent = 6, thus: 1 atom = 10^6 uatom).
                aliases:
                  type: array
                  items:
                    type: string
                  title: aliases is a list of string aliases for the given denom
              description: |-
                DenomUnit represents a struct that describes a given
                denomination unit of the basic token.
            title: denom_units represents the list of DenomUnit's for a given coin
          base:
            type: string
            description: >-
              base represents the base denom (should be the DenomUnit with
              exponent = 0).
          display:
            type: string
            description: |-
              display indicates the suggested denom that should be
              displayed in clients.
        description: |-
          Metadata represents a struct that describes
          a basic token.
    title: >-
      QueryDenomMetadataResponse is the response type for the
      Query/DenomMetadata
  provenance.marker.v1.QueryEscrowResponse:
    type: object
    properties:
      escrow:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    description: >-
      QueryEscrowResponse is the response type for the Query/MarkerEscrow
      method.
  provenance.marker.v1.QueryHoldingResponse:
    type: object
    properties:
      balances:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
              description: address is the address of the balance holder.
            coins:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              description: coins defines the different coins this balance holds.
          title: >-
            Balance defines an account address and balance pair used in queries
            for accounts holding a marker
      pagination:
        description: pagination defines an optional pagination for the request.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryHoldingResponse is the response type for the Query/MarkerHolders
      method.
  provenance.marker.v1.QueryMarkerResponse:
    type: object
    properties:
      marker:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

           Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

           Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := ptypes.MarshalAny(foo)
               ...
               foo := &pb.Foo{}
               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON

          ====

          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
    description: QueryMarkerResponse is the response type for the Query/Marker method.
  provenance.marker.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          max_total_supply:
            type: string
            format: uint64
            title: maximum amount of supply to allow a marker to be created with
          enable_governance:
            type: boolean
            description: indicates if governance based controls of markers is allowed.
          unrestricted_denom_regex:
            type: string
            title: >-
              a regular expression used to validate marker denom values from
              normal create requests (governance

              requests are only subject to platform coin validation denom
              expression)
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  provenance.marker.v1.QuerySupplyResponse:
    type: object
    properties:
      amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    description: >-
      QuerySupplyResponse is the response type for the Query/MarkerSupply
      method.
  provenance.metadata.v1.AuditFields:
    type: object
    properties:
      created_date:
        type: string
        format: date-time
        title: the date/time when this entry was created
      created_by:
        type: string
        title: the address of the account that created this record
      updated_date:
        type: string
        format: date-time
        title: the date/time when this entry was last updated
      updated_by:
        type: string
        title: the address of the account that modified this record
      version:
        type: integer
        format: int64
        title: an optional version number that is incremented with each update
      message:
        type: string
        title: an optional message associated with the creation/update event
    title: >-
      AuditFields capture information about the last account to make
      modifications and when they were made
  provenance.metadata.v1.ContractSpecification:
    type: object
    properties:
      specification_id:
        type: string
        format: byte
        title: unique identifier for this specification on chain
      description:
        title: Description information for this contract specification
        type: object
        properties:
          name:
            type: string
            description: A Name for this thing.
          description:
            type: string
            description: A description of this thing.
          website_url:
            type: string
            description: URL to find even more info.
          icon_url:
            type: string
            description: URL of an icon.
        description: >-
          Description holds general information that is handy to associate with
          a structure.
      owner_addresses:
        type: array
        items:
          type: string
        title: Address of the account that owns this specificaiton
      parties_involved:
        type: array
        items:
          type: string
          enum:
            - PARTY_TYPE_UNSPECIFIED
            - PARTY_TYPE_ORIGINATOR
            - PARTY_TYPE_SERVICER
            - PARTY_TYPE_INVESTOR
            - PARTY_TYPE_CUSTODIAN
            - PARTY_TYPE_OWNER
            - PARTY_TYPE_AFFILIATE
            - PARTY_TYPE_OMNIBUS
            - PARTY_TYPE_PROVENANCE
          default: PARTY_TYPE_UNSPECIFIED
          description: >-
            - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an error
            condition
             - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
             - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
             - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
             - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
             - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
             - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
             - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
             - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
          title: PartyType are the different roles parties on a contract may use
        title: >-
          a list of party roles that must be fullfilled when signing a
          transaction for this contract specification
      resource_id:
        type: string
        format: byte
        title: the address of a record on chain that represents this contract
      hash:
        type: string
        title: the hash of contract binary (off-chain instance)
      class_name:
        type: string
        title: name of the class/type of this contract executable
    title: >-
      ContractSpecification defines the required parties, resources, conditions,
      and consideration outputs for a contract
  provenance.metadata.v1.ContractSpecificationExtendedResponse:
    type: object
    properties:
      contract_specification:
        type: object
        properties:
          specification_id:
            type: string
            format: byte
            title: unique identifier for this specification on chain
          description:
            title: Description information for this contract specification
            type: object
            properties:
              name:
                type: string
                description: A Name for this thing.
              description:
                type: string
                description: A description of this thing.
              website_url:
                type: string
                description: URL to find even more info.
              icon_url:
                type: string
                description: URL of an icon.
            description: >-
              Description holds general information that is handy to associate
              with a structure.
          owner_addresses:
            type: array
            items:
              type: string
            title: Address of the account that owns this specificaiton
          parties_involved:
            type: array
            items:
              type: string
              enum:
                - PARTY_TYPE_UNSPECIFIED
                - PARTY_TYPE_ORIGINATOR
                - PARTY_TYPE_SERVICER
                - PARTY_TYPE_INVESTOR
                - PARTY_TYPE_CUSTODIAN
                - PARTY_TYPE_OWNER
                - PARTY_TYPE_AFFILIATE
                - PARTY_TYPE_OMNIBUS
                - PARTY_TYPE_PROVENANCE
              default: PARTY_TYPE_UNSPECIFIED
              description: >-
                - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an error
                condition
                 - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                 - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                 - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                 - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                 - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                 - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                 - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                 - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
              title: PartyType are the different roles parties on a contract may use
            title: >-
              a list of party roles that must be fullfilled when signing a
              transaction for this contract specification
          resource_id:
            type: string
            format: byte
            title: the address of a record on chain that represents this contract
          hash:
            type: string
            title: the hash of contract binary (off-chain instance)
          class_name:
            type: string
            title: name of the class/type of this contract executable
        title: >-
          ContractSpecification defines the required parties, resources,
          conditions, and consideration outputs for a contract
      record_specifications:
        type: array
        items:
          type: object
          properties:
            specification_id:
              type: string
              format: byte
              title: unique identifier for this specification on chain
            name:
              type: string
              title: >-
                Name of Record that will be created when this specification is
                used
            inputs:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    title: name for this input
                  type_name:
                    type: string
                    title: a type_name (typically a proto name or class_name)
                  record_id:
                    type: string
                    format: byte
                    title: the address of a record on chain (For Established Records)
                  hash:
                    type: string
                    title: >-
                      the hash of an off-chain piece of information (For
                      Proposed Records)
                title: >-
                  InputSpecification defines a name, type_name, and source
                  reference (either on or off chain) to define an input

                  parameter
              title: >-
                A set of inputs that must be satisified to apply this
                RecordSpecification and create a Record
            type_name:
              type: string
              title: >-
                A type name for data associated with this record (typically a
                class or proto name)
            result_type:
              title: >-
                Type of result for this record specification (must be RECORD or
                RECORD_LIST)
              type: string
              enum:
                - DEFINITION_TYPE_UNSPECIFIED
                - DEFINITION_TYPE_PROPOSED
                - DEFINITION_TYPE_RECORD
                - DEFINITION_TYPE_RECORD_LIST
              default: DEFINITION_TYPE_UNSPECIFIED
              description: >-
                - DEFINITION_TYPE_UNSPECIFIED: DEFINITION_TYPE_UNSPECIFIED
                indicates an unknown/invalid value
                 - DEFINITION_TYPE_PROPOSED: DEFINITION_TYPE_PROPOSED indicates a proposed value is used here (a record that is not on-chain)
                 - DEFINITION_TYPE_RECORD: DEFINITION_TYPE_RECORD indicates the value must be a reference to a record on chain
                 - DEFINITION_TYPE_RECORD_LIST: DEFINITION_TYPE_RECORD_LIST indicates the value maybe a reference to a collection of values on chain having
                the same name
            responsible_parties:
              type: array
              items:
                type: string
                enum:
                  - PARTY_TYPE_UNSPECIFIED
                  - PARTY_TYPE_ORIGINATOR
                  - PARTY_TYPE_SERVICER
                  - PARTY_TYPE_INVESTOR
                  - PARTY_TYPE_CUSTODIAN
                  - PARTY_TYPE_OWNER
                  - PARTY_TYPE_AFFILIATE
                  - PARTY_TYPE_OMNIBUS
                  - PARTY_TYPE_PROVENANCE
                default: PARTY_TYPE_UNSPECIFIED
                description: >-
                  - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an error
                  condition
                   - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                   - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                   - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                   - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                   - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                   - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                   - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                   - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
                title: >-
                  PartyType are the different roles parties on a contract may
                  use
              title: Type of party responsible for this record
          title: >-
            RecordSpecification defines the specification for a Record including
            allowed/required inputs/outputs
      contract_specification_uuid:
        type: string
    description: >-
      ContractSpecificationExtendedResponse is the response to a contract
      specification extended request.
  provenance.metadata.v1.ContractSpecificationResponse:
    type: object
    properties:
      contract_specification:
        type: object
        properties:
          specification_id:
            type: string
            format: byte
            title: unique identifier for this specification on chain
          description:
            title: Description information for this contract specification
            type: object
            properties:
              name:
                type: string
                description: A Name for this thing.
              description:
                type: string
                description: A description of this thing.
              website_url:
                type: string
                description: URL to find even more info.
              icon_url:
                type: string
                description: URL of an icon.
            description: >-
              Description holds general information that is handy to associate
              with a structure.
          owner_addresses:
            type: array
            items:
              type: string
            title: Address of the account that owns this specificaiton
          parties_involved:
            type: array
            items:
              type: string
              enum:
                - PARTY_TYPE_UNSPECIFIED
                - PARTY_TYPE_ORIGINATOR
                - PARTY_TYPE_SERVICER
                - PARTY_TYPE_INVESTOR
                - PARTY_TYPE_CUSTODIAN
                - PARTY_TYPE_OWNER
                - PARTY_TYPE_AFFILIATE
                - PARTY_TYPE_OMNIBUS
                - PARTY_TYPE_PROVENANCE
              default: PARTY_TYPE_UNSPECIFIED
              description: >-
                - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an error
                condition
                 - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                 - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                 - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                 - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                 - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                 - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                 - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                 - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
              title: PartyType are the different roles parties on a contract may use
            title: >-
              a list of party roles that must be fullfilled when signing a
              transaction for this contract specification
          resource_id:
            type: string
            format: byte
            title: the address of a record on chain that represents this contract
          hash:
            type: string
            title: the hash of contract binary (off-chain instance)
          class_name:
            type: string
            title: name of the class/type of this contract executable
        title: >-
          ContractSpecification defines the required parties, resources,
          conditions, and consideration outputs for a contract
      contract_specification_uuid:
        type: string
    description: >-
      ContractSpecificationResponse is the response to a contract specification
      request.
  provenance.metadata.v1.DefinitionType:
    type: string
    enum:
      - DEFINITION_TYPE_UNSPECIFIED
      - DEFINITION_TYPE_PROPOSED
      - DEFINITION_TYPE_RECORD
      - DEFINITION_TYPE_RECORD_LIST
    default: DEFINITION_TYPE_UNSPECIFIED
    description: >-
      - DEFINITION_TYPE_UNSPECIFIED: DEFINITION_TYPE_UNSPECIFIED indicates an
      unknown/invalid value
       - DEFINITION_TYPE_PROPOSED: DEFINITION_TYPE_PROPOSED indicates a proposed value is used here (a record that is not on-chain)
       - DEFINITION_TYPE_RECORD: DEFINITION_TYPE_RECORD indicates the value must be a reference to a record on chain
       - DEFINITION_TYPE_RECORD_LIST: DEFINITION_TYPE_RECORD_LIST indicates the value maybe a reference to a collection of values on chain having
      the same name
    title: DefinitionType indicates the required definition type for this value
  provenance.metadata.v1.Description:
    type: object
    properties:
      name:
        type: string
        description: A Name for this thing.
      description:
        type: string
        description: A description of this thing.
      website_url:
        type: string
        description: URL to find even more info.
      icon_url:
        type: string
        description: URL of an icon.
    description: >-
      Description holds general information that is handy to associate with a
      structure.
  provenance.metadata.v1.InputSpecification:
    type: object
    properties:
      name:
        type: string
        title: name for this input
      type_name:
        type: string
        title: a type_name (typically a proto name or class_name)
      record_id:
        type: string
        format: byte
        title: the address of a record on chain (For Established Records)
      hash:
        type: string
        title: the hash of an off-chain piece of information (For Proposed Records)
    title: >-
      InputSpecification defines a name, type_name, and source reference (either
      on or off chain) to define an input

      parameter
  provenance.metadata.v1.OwnershipResponse:
    type: object
    properties:
      scope_uuids:
        type: array
        items:
          type: string
        description: A list of scope ids (uuid) associated with the given address.
      pagination:
        description: pagination defines an optional pagination for the request.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: >-
      OwnershipResponse is the reponse to the ownership request and includes a
      list of scope identifiers
  provenance.metadata.v1.Params:
    type: object
    description: Params defines the set of params for the account module.
  provenance.metadata.v1.Party:
    type: object
    properties:
      address:
        type: string
        title: address of the account (on chain)
      role:
        type: string
        enum:
          - PARTY_TYPE_UNSPECIFIED
          - PARTY_TYPE_ORIGINATOR
          - PARTY_TYPE_SERVICER
          - PARTY_TYPE_INVESTOR
          - PARTY_TYPE_CUSTODIAN
          - PARTY_TYPE_OWNER
          - PARTY_TYPE_AFFILIATE
          - PARTY_TYPE_OMNIBUS
          - PARTY_TYPE_PROVENANCE
        default: PARTY_TYPE_UNSPECIFIED
        description: |-
          - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an error condition
           - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
           - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
           - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
           - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
           - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
           - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
           - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
           - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
        title: PartyType are the different roles parties on a contract may use
    title: A Party is an address with/in a given role associated with a contract
  provenance.metadata.v1.PartyType:
    type: string
    enum:
      - PARTY_TYPE_UNSPECIFIED
      - PARTY_TYPE_ORIGINATOR
      - PARTY_TYPE_SERVICER
      - PARTY_TYPE_INVESTOR
      - PARTY_TYPE_CUSTODIAN
      - PARTY_TYPE_OWNER
      - PARTY_TYPE_AFFILIATE
      - PARTY_TYPE_OMNIBUS
      - PARTY_TYPE_PROVENANCE
    default: PARTY_TYPE_UNSPECIFIED
    description: |-
      - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an error condition
       - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
       - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
       - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
       - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
       - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
       - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
       - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
       - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
    title: PartyType are the different roles parties on a contract may use
  provenance.metadata.v1.Process:
    type: object
    properties:
      address:
        type: string
        title: the address of a smart contract used for this process
      hash:
        type: string
        title: the hash of an off-chain process used
      name:
        type: string
        title: >-
          a name associated with the process (type_name, classname or smart
          contract common name)
      method:
        type: string
        title: >-
          method is a name or reference to a specific operation (method) within
          a class/contract that was invoked
    title: >-
      Process contains information used to uniquely identify what was used to
      generate this record
  provenance.metadata.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  provenance.metadata.v1.Record:
    type: object
    properties:
      name:
        type: string
        title: >-
          name/identifier for this record.  Value must be unique within the
          scope.  Also known as a Fact name
      session_id:
        type: string
        format: byte
        title: >-
          id of the session context that was used to create this record (use
          with filtered kvprefix iterator)
      process:
        title: >-
          process contain information used to uniquely identify an execution on
          or off chain that generated this record
        type: object
        properties:
          address:
            type: string
            title: the address of a smart contract used for this process
          hash:
            type: string
            title: the hash of an off-chain process used
          name:
            type: string
            title: >-
              a name associated with the process (type_name, classname or smart
              contract common name)
          method:
            type: string
            title: >-
              method is a name or reference to a specific operation (method)
              within a class/contract that was invoked
      inputs:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              description: Name value included to link back to the definition spec.
            record_id:
              type: string
              format: byte
              title: the address of a record on chain (For Established Records)
            hash:
              type: string
              title: >-
                the hash of an off-chain piece of information (For Proposed
                Records)
            type_name:
              type: string
              title: from proposed fact structure to unmarshal
            status:
              title: >-
                Indicates if this input was a recorded fact on chain or just a
                given hashed input
              type: string
              enum:
                - RECORD_INPUT_STATUS_UNSPECIFIED
                - RECORD_INPUT_STATUS_PROPOSED
                - RECORD_INPUT_STATUS_RECORD
              default: RECORD_INPUT_STATUS_UNSPECIFIED
              description: >-
                - RECORD_INPUT_STATUS_UNSPECIFIED:
                RECORD_INPUT_STATUS_UNSPECIFIED indicates an invalid/unknown
                input type
                 - RECORD_INPUT_STATUS_PROPOSED: RECORD_INPUT_STATUS_PROPOSED indicates this input was an arbitrary piece of data that was hashed
                 - RECORD_INPUT_STATUS_RECORD: RECORD_INPUT_STATUS_RECORD indicates this input is a reference to a previously recorded fact on blockchain
          title: Tracks the inputs used to establish this record
        title: inputs used with the process to achieve the output on this record
      outputs:
        type: array
        items:
          type: object
          properties:
            hash:
              type: string
              title: >-
                Hash of the data output that was output/generated for this
                record
            status:
              title: >-
                Status of the process execution associated with this output
                indicating success,failure, or pending
              type: string
              enum:
                - RESULT_STATUS_UNSPECIFIED
                - RESULT_STATUS_PASS
                - RESULT_STATUS_SKIP
                - RESULT_STATUS_FAIL
              default: RESULT_STATUS_UNSPECIFIED
              description: >-
                - RESULT_STATUS_UNSPECIFIED: RESULT_STATUS_UNSPECIFIED indicates
                an unset condition
                 - RESULT_STATUS_PASS: RESULT_STATUS_PASS indicates the execution was successfult
                 - RESULT_STATUS_SKIP: RESULT_STATUS_SKIP indicates condition/consideration was skipped due to missing inputs or delayed execution
                 - RESULT_STATUS_FAIL: RESULT_STATUS_FAIL indicates the execution of the condition/consideration failed.
          title: RecordOutput encapsulates the output of a process recorded on chain
        title: >-
          output(s) is the results of executing the process on the given process
          indicated in this record
    title: >-
      A record (of fact) is attached to a session or each consideration output
      from a contract
  provenance.metadata.v1.RecordInput:
    type: object
    properties:
      name:
        type: string
        description: Name value included to link back to the definition spec.
      record_id:
        type: string
        format: byte
        title: the address of a record on chain (For Established Records)
      hash:
        type: string
        title: the hash of an off-chain piece of information (For Proposed Records)
      type_name:
        type: string
        title: from proposed fact structure to unmarshal
      status:
        title: >-
          Indicates if this input was a recorded fact on chain or just a given
          hashed input
        type: string
        enum:
          - RECORD_INPUT_STATUS_UNSPECIFIED
          - RECORD_INPUT_STATUS_PROPOSED
          - RECORD_INPUT_STATUS_RECORD
        default: RECORD_INPUT_STATUS_UNSPECIFIED
        description: >-
          - RECORD_INPUT_STATUS_UNSPECIFIED: RECORD_INPUT_STATUS_UNSPECIFIED
          indicates an invalid/unknown input type
           - RECORD_INPUT_STATUS_PROPOSED: RECORD_INPUT_STATUS_PROPOSED indicates this input was an arbitrary piece of data that was hashed
           - RECORD_INPUT_STATUS_RECORD: RECORD_INPUT_STATUS_RECORD indicates this input is a reference to a previously recorded fact on blockchain
    title: Tracks the inputs used to establish this record
  provenance.metadata.v1.RecordInputStatus:
    type: string
    enum:
      - RECORD_INPUT_STATUS_UNSPECIFIED
      - RECORD_INPUT_STATUS_PROPOSED
      - RECORD_INPUT_STATUS_RECORD
    default: RECORD_INPUT_STATUS_UNSPECIFIED
    description: >-
      - RECORD_INPUT_STATUS_UNSPECIFIED: RECORD_INPUT_STATUS_UNSPECIFIED
      indicates an invalid/unknown input type
       - RECORD_INPUT_STATUS_PROPOSED: RECORD_INPUT_STATUS_PROPOSED indicates this input was an arbitrary piece of data that was hashed
       - RECORD_INPUT_STATUS_RECORD: RECORD_INPUT_STATUS_RECORD indicates this input is a reference to a previously recorded fact on blockchain
    title: A set of types for inputs on a record (of fact)
  provenance.metadata.v1.RecordOutput:
    type: object
    properties:
      hash:
        type: string
        title: Hash of the data output that was output/generated for this record
      status:
        title: >-
          Status of the process execution associated with this output indicating
          success,failure, or pending
        type: string
        enum:
          - RESULT_STATUS_UNSPECIFIED
          - RESULT_STATUS_PASS
          - RESULT_STATUS_SKIP
          - RESULT_STATUS_FAIL
        default: RESULT_STATUS_UNSPECIFIED
        description: >-
          - RESULT_STATUS_UNSPECIFIED: RESULT_STATUS_UNSPECIFIED indicates an
          unset condition
           - RESULT_STATUS_PASS: RESULT_STATUS_PASS indicates the execution was successfult
           - RESULT_STATUS_SKIP: RESULT_STATUS_SKIP indicates condition/consideration was skipped due to missing inputs or delayed execution
           - RESULT_STATUS_FAIL: RESULT_STATUS_FAIL indicates the execution of the condition/consideration failed.
    title: RecordOutput encapsulates the output of a process recorded on chain
  provenance.metadata.v1.RecordSpecification:
    type: object
    properties:
      specification_id:
        type: string
        format: byte
        title: unique identifier for this specification on chain
      name:
        type: string
        title: Name of Record that will be created when this specification is used
      inputs:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              title: name for this input
            type_name:
              type: string
              title: a type_name (typically a proto name or class_name)
            record_id:
              type: string
              format: byte
              title: the address of a record on chain (For Established Records)
            hash:
              type: string
              title: >-
                the hash of an off-chain piece of information (For Proposed
                Records)
          title: >-
            InputSpecification defines a name, type_name, and source reference
            (either on or off chain) to define an input

            parameter
        title: >-
          A set of inputs that must be satisified to apply this
          RecordSpecification and create a Record
      type_name:
        type: string
        title: >-
          A type name for data associated with this record (typically a class or
          proto name)
      result_type:
        title: >-
          Type of result for this record specification (must be RECORD or
          RECORD_LIST)
        type: string
        enum:
          - DEFINITION_TYPE_UNSPECIFIED
          - DEFINITION_TYPE_PROPOSED
          - DEFINITION_TYPE_RECORD
          - DEFINITION_TYPE_RECORD_LIST
        default: DEFINITION_TYPE_UNSPECIFIED
        description: >-
          - DEFINITION_TYPE_UNSPECIFIED: DEFINITION_TYPE_UNSPECIFIED indicates
          an unknown/invalid value
           - DEFINITION_TYPE_PROPOSED: DEFINITION_TYPE_PROPOSED indicates a proposed value is used here (a record that is not on-chain)
           - DEFINITION_TYPE_RECORD: DEFINITION_TYPE_RECORD indicates the value must be a reference to a record on chain
           - DEFINITION_TYPE_RECORD_LIST: DEFINITION_TYPE_RECORD_LIST indicates the value maybe a reference to a collection of values on chain having
          the same name
      responsible_parties:
        type: array
        items:
          type: string
          enum:
            - PARTY_TYPE_UNSPECIFIED
            - PARTY_TYPE_ORIGINATOR
            - PARTY_TYPE_SERVICER
            - PARTY_TYPE_INVESTOR
            - PARTY_TYPE_CUSTODIAN
            - PARTY_TYPE_OWNER
            - PARTY_TYPE_AFFILIATE
            - PARTY_TYPE_OMNIBUS
            - PARTY_TYPE_PROVENANCE
          default: PARTY_TYPE_UNSPECIFIED
          description: >-
            - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an error
            condition
             - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
             - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
             - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
             - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
             - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
             - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
             - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
             - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
          title: PartyType are the different roles parties on a contract may use
        title: Type of party responsible for this record
    title: >-
      RecordSpecification defines the specification for a Record including
      allowed/required inputs/outputs
  provenance.metadata.v1.RecordSpecificationByIDResponse:
    type: object
    properties:
      record_specification:
        type: object
        properties:
          specification_id:
            type: string
            format: byte
            title: unique identifier for this specification on chain
          name:
            type: string
            title: >-
              Name of Record that will be created when this specification is
              used
          inputs:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  title: name for this input
                type_name:
                  type: string
                  title: a type_name (typically a proto name or class_name)
                record_id:
                  type: string
                  format: byte
                  title: the address of a record on chain (For Established Records)
                hash:
                  type: string
                  title: >-
                    the hash of an off-chain piece of information (For Proposed
                    Records)
              title: >-
                InputSpecification defines a name, type_name, and source
                reference (either on or off chain) to define an input

                parameter
            title: >-
              A set of inputs that must be satisified to apply this
              RecordSpecification and create a Record
          type_name:
            type: string
            title: >-
              A type name for data associated with this record (typically a
              class or proto name)
          result_type:
            title: >-
              Type of result for this record specification (must be RECORD or
              RECORD_LIST)
            type: string
            enum:
              - DEFINITION_TYPE_UNSPECIFIED
              - DEFINITION_TYPE_PROPOSED
              - DEFINITION_TYPE_RECORD
              - DEFINITION_TYPE_RECORD_LIST
            default: DEFINITION_TYPE_UNSPECIFIED
            description: >-
              - DEFINITION_TYPE_UNSPECIFIED: DEFINITION_TYPE_UNSPECIFIED
              indicates an unknown/invalid value
               - DEFINITION_TYPE_PROPOSED: DEFINITION_TYPE_PROPOSED indicates a proposed value is used here (a record that is not on-chain)
               - DEFINITION_TYPE_RECORD: DEFINITION_TYPE_RECORD indicates the value must be a reference to a record on chain
               - DEFINITION_TYPE_RECORD_LIST: DEFINITION_TYPE_RECORD_LIST indicates the value maybe a reference to a collection of values on chain having
              the same name
          responsible_parties:
            type: array
            items:
              type: string
              enum:
                - PARTY_TYPE_UNSPECIFIED
                - PARTY_TYPE_ORIGINATOR
                - PARTY_TYPE_SERVICER
                - PARTY_TYPE_INVESTOR
                - PARTY_TYPE_CUSTODIAN
                - PARTY_TYPE_OWNER
                - PARTY_TYPE_AFFILIATE
                - PARTY_TYPE_OMNIBUS
                - PARTY_TYPE_PROVENANCE
              default: PARTY_TYPE_UNSPECIFIED
              description: >-
                - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an error
                condition
                 - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                 - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                 - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                 - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                 - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                 - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                 - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                 - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
              title: PartyType are the different roles parties on a contract may use
            title: Type of party responsible for this record
        title: >-
          RecordSpecification defines the specification for a Record including
          allowed/required inputs/outputs
      record_specification_id:
        type: string
    description: >-
      RecordSpecificationByIDResponse is the response to a record specification
      by id request.
  provenance.metadata.v1.RecordSpecificationResponse:
    type: object
    properties:
      record_specification:
        type: object
        properties:
          specification_id:
            type: string
            format: byte
            title: unique identifier for this specification on chain
          name:
            type: string
            title: >-
              Name of Record that will be created when this specification is
              used
          inputs:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  title: name for this input
                type_name:
                  type: string
                  title: a type_name (typically a proto name or class_name)
                record_id:
                  type: string
                  format: byte
                  title: the address of a record on chain (For Established Records)
                hash:
                  type: string
                  title: >-
                    the hash of an off-chain piece of information (For Proposed
                    Records)
              title: >-
                InputSpecification defines a name, type_name, and source
                reference (either on or off chain) to define an input

                parameter
            title: >-
              A set of inputs that must be satisified to apply this
              RecordSpecification and create a Record
          type_name:
            type: string
            title: >-
              A type name for data associated with this record (typically a
              class or proto name)
          result_type:
            title: >-
              Type of result for this record specification (must be RECORD or
              RECORD_LIST)
            type: string
            enum:
              - DEFINITION_TYPE_UNSPECIFIED
              - DEFINITION_TYPE_PROPOSED
              - DEFINITION_TYPE_RECORD
              - DEFINITION_TYPE_RECORD_LIST
            default: DEFINITION_TYPE_UNSPECIFIED
            description: >-
              - DEFINITION_TYPE_UNSPECIFIED: DEFINITION_TYPE_UNSPECIFIED
              indicates an unknown/invalid value
               - DEFINITION_TYPE_PROPOSED: DEFINITION_TYPE_PROPOSED indicates a proposed value is used here (a record that is not on-chain)
               - DEFINITION_TYPE_RECORD: DEFINITION_TYPE_RECORD indicates the value must be a reference to a record on chain
               - DEFINITION_TYPE_RECORD_LIST: DEFINITION_TYPE_RECORD_LIST indicates the value maybe a reference to a collection of values on chain having
              the same name
          responsible_parties:
            type: array
            items:
              type: string
              enum:
                - PARTY_TYPE_UNSPECIFIED
                - PARTY_TYPE_ORIGINATOR
                - PARTY_TYPE_SERVICER
                - PARTY_TYPE_INVESTOR
                - PARTY_TYPE_CUSTODIAN
                - PARTY_TYPE_OWNER
                - PARTY_TYPE_AFFILIATE
                - PARTY_TYPE_OMNIBUS
                - PARTY_TYPE_PROVENANCE
              default: PARTY_TYPE_UNSPECIFIED
              description: >-
                - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an error
                condition
                 - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                 - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                 - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                 - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                 - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                 - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                 - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                 - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
              title: PartyType are the different roles parties on a contract may use
            title: Type of party responsible for this record
        title: >-
          RecordSpecification defines the specification for a Record including
          allowed/required inputs/outputs
      contract_specification_uuid:
        type: string
      name:
        type: string
    description: >-
      RecordSpecificationResponse is the response to a record specification
      request.
  provenance.metadata.v1.RecordSpecificationsForContractSpecificationResponse:
    type: object
    properties:
      record_specifications:
        type: array
        items:
          type: object
          properties:
            specification_id:
              type: string
              format: byte
              title: unique identifier for this specification on chain
            name:
              type: string
              title: >-
                Name of Record that will be created when this specification is
                used
            inputs:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    title: name for this input
                  type_name:
                    type: string
                    title: a type_name (typically a proto name or class_name)
                  record_id:
                    type: string
                    format: byte
                    title: the address of a record on chain (For Established Records)
                  hash:
                    type: string
                    title: >-
                      the hash of an off-chain piece of information (For
                      Proposed Records)
                title: >-
                  InputSpecification defines a name, type_name, and source
                  reference (either on or off chain) to define an input

                  parameter
              title: >-
                A set of inputs that must be satisified to apply this
                RecordSpecification and create a Record
            type_name:
              type: string
              title: >-
                A type name for data associated with this record (typically a
                class or proto name)
            result_type:
              title: >-
                Type of result for this record specification (must be RECORD or
                RECORD_LIST)
              type: string
              enum:
                - DEFINITION_TYPE_UNSPECIFIED
                - DEFINITION_TYPE_PROPOSED
                - DEFINITION_TYPE_RECORD
                - DEFINITION_TYPE_RECORD_LIST
              default: DEFINITION_TYPE_UNSPECIFIED
              description: >-
                - DEFINITION_TYPE_UNSPECIFIED: DEFINITION_TYPE_UNSPECIFIED
                indicates an unknown/invalid value
                 - DEFINITION_TYPE_PROPOSED: DEFINITION_TYPE_PROPOSED indicates a proposed value is used here (a record that is not on-chain)
                 - DEFINITION_TYPE_RECORD: DEFINITION_TYPE_RECORD indicates the value must be a reference to a record on chain
                 - DEFINITION_TYPE_RECORD_LIST: DEFINITION_TYPE_RECORD_LIST indicates the value maybe a reference to a collection of values on chain having
                the same name
            responsible_parties:
              type: array
              items:
                type: string
                enum:
                  - PARTY_TYPE_UNSPECIFIED
                  - PARTY_TYPE_ORIGINATOR
                  - PARTY_TYPE_SERVICER
                  - PARTY_TYPE_INVESTOR
                  - PARTY_TYPE_CUSTODIAN
                  - PARTY_TYPE_OWNER
                  - PARTY_TYPE_AFFILIATE
                  - PARTY_TYPE_OMNIBUS
                  - PARTY_TYPE_PROVENANCE
                default: PARTY_TYPE_UNSPECIFIED
                description: >-
                  - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an error
                  condition
                   - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                   - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                   - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                   - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                   - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                   - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                   - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                   - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
                title: >-
                  PartyType are the different roles parties on a contract may
                  use
              title: Type of party responsible for this record
          title: >-
            RecordSpecification defines the specification for a Record including
            allowed/required inputs/outputs
      contract_specification_uuid:
        type: string
    description: >-
      RecordSpecificationResponseResponse is the response to a record
      specification for contract specification request.
  provenance.metadata.v1.RecordsByScopeIDResponse:
    type: object
    properties:
      scope_uuid:
        type: string
      scope_id:
        type: string
      records:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              title: >-
                name/identifier for this record.  Value must be unique within
                the scope.  Also known as a Fact name
            session_id:
              type: string
              format: byte
              title: >-
                id of the session context that was used to create this record
                (use with filtered kvprefix iterator)
            process:
              title: >-
                process contain information used to uniquely identify an
                execution on or off chain that generated this record
              type: object
              properties:
                address:
                  type: string
                  title: the address of a smart contract used for this process
                hash:
                  type: string
                  title: the hash of an off-chain process used
                name:
                  type: string
                  title: >-
                    a name associated with the process (type_name, classname or
                    smart contract common name)
                method:
                  type: string
                  title: >-
                    method is a name or reference to a specific operation
                    (method) within a class/contract that was invoked
            inputs:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Name value included to link back to the definition spec.
                  record_id:
                    type: string
                    format: byte
                    title: the address of a record on chain (For Established Records)
                  hash:
                    type: string
                    title: >-
                      the hash of an off-chain piece of information (For
                      Proposed Records)
                  type_name:
                    type: string
                    title: from proposed fact structure to unmarshal
                  status:
                    title: >-
                      Indicates if this input was a recorded fact on chain or
                      just a given hashed input
                    type: string
                    enum:
                      - RECORD_INPUT_STATUS_UNSPECIFIED
                      - RECORD_INPUT_STATUS_PROPOSED
                      - RECORD_INPUT_STATUS_RECORD
                    default: RECORD_INPUT_STATUS_UNSPECIFIED
                    description: >-
                      - RECORD_INPUT_STATUS_UNSPECIFIED:
                      RECORD_INPUT_STATUS_UNSPECIFIED indicates an
                      invalid/unknown input type
                       - RECORD_INPUT_STATUS_PROPOSED: RECORD_INPUT_STATUS_PROPOSED indicates this input was an arbitrary piece of data that was hashed
                       - RECORD_INPUT_STATUS_RECORD: RECORD_INPUT_STATUS_RECORD indicates this input is a reference to a previously recorded fact on blockchain
                title: Tracks the inputs used to establish this record
              title: >-
                inputs used with the process to achieve the output on this
                record
            outputs:
              type: array
              items:
                type: object
                properties:
                  hash:
                    type: string
                    title: >-
                      Hash of the data output that was output/generated for this
                      record
                  status:
                    title: >-
                      Status of the process execution associated with this
                      output indicating success,failure, or pending
                    type: string
                    enum:
                      - RESULT_STATUS_UNSPECIFIED
                      - RESULT_STATUS_PASS
                      - RESULT_STATUS_SKIP
                      - RESULT_STATUS_FAIL
                    default: RESULT_STATUS_UNSPECIFIED
                    description: >-
                      - RESULT_STATUS_UNSPECIFIED: RESULT_STATUS_UNSPECIFIED
                      indicates an unset condition
                       - RESULT_STATUS_PASS: RESULT_STATUS_PASS indicates the execution was successfult
                       - RESULT_STATUS_SKIP: RESULT_STATUS_SKIP indicates condition/consideration was skipped due to missing inputs or delayed execution
                       - RESULT_STATUS_FAIL: RESULT_STATUS_FAIL indicates the execution of the condition/consideration failed.
                title: >-
                  RecordOutput encapsulates the output of a process recorded on
                  chain
              title: >-
                output(s) is the results of executing the process on the given
                process indicated in this record
          title: >-
            A record (of fact) is attached to a session or each consideration
            output from a contract
    title: RecordsByScopeIDResponse is the response to a RecordsByScopeIDRequest
  provenance.metadata.v1.RecordsByScopeUUIDResponse:
    type: object
    properties:
      scope_uuid:
        type: string
      scope_id:
        type: string
      records:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              title: >-
                name/identifier for this record.  Value must be unique within
                the scope.  Also known as a Fact name
            session_id:
              type: string
              format: byte
              title: >-
                id of the session context that was used to create this record
                (use with filtered kvprefix iterator)
            process:
              title: >-
                process contain information used to uniquely identify an
                execution on or off chain that generated this record
              type: object
              properties:
                address:
                  type: string
                  title: the address of a smart contract used for this process
                hash:
                  type: string
                  title: the hash of an off-chain process used
                name:
                  type: string
                  title: >-
                    a name associated with the process (type_name, classname or
                    smart contract common name)
                method:
                  type: string
                  title: >-
                    method is a name or reference to a specific operation
                    (method) within a class/contract that was invoked
            inputs:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Name value included to link back to the definition spec.
                  record_id:
                    type: string
                    format: byte
                    title: the address of a record on chain (For Established Records)
                  hash:
                    type: string
                    title: >-
                      the hash of an off-chain piece of information (For
                      Proposed Records)
                  type_name:
                    type: string
                    title: from proposed fact structure to unmarshal
                  status:
                    title: >-
                      Indicates if this input was a recorded fact on chain or
                      just a given hashed input
                    type: string
                    enum:
                      - RECORD_INPUT_STATUS_UNSPECIFIED
                      - RECORD_INPUT_STATUS_PROPOSED
                      - RECORD_INPUT_STATUS_RECORD
                    default: RECORD_INPUT_STATUS_UNSPECIFIED
                    description: >-
                      - RECORD_INPUT_STATUS_UNSPECIFIED:
                      RECORD_INPUT_STATUS_UNSPECIFIED indicates an
                      invalid/unknown input type
                       - RECORD_INPUT_STATUS_PROPOSED: RECORD_INPUT_STATUS_PROPOSED indicates this input was an arbitrary piece of data that was hashed
                       - RECORD_INPUT_STATUS_RECORD: RECORD_INPUT_STATUS_RECORD indicates this input is a reference to a previously recorded fact on blockchain
                title: Tracks the inputs used to establish this record
              title: >-
                inputs used with the process to achieve the output on this
                record
            outputs:
              type: array
              items:
                type: object
                properties:
                  hash:
                    type: string
                    title: >-
                      Hash of the data output that was output/generated for this
                      record
                  status:
                    title: >-
                      Status of the process execution associated with this
                      output indicating success,failure, or pending
                    type: string
                    enum:
                      - RESULT_STATUS_UNSPECIFIED
                      - RESULT_STATUS_PASS
                      - RESULT_STATUS_SKIP
                      - RESULT_STATUS_FAIL
                    default: RESULT_STATUS_UNSPECIFIED
                    description: >-
                      - RESULT_STATUS_UNSPECIFIED: RESULT_STATUS_UNSPECIFIED
                      indicates an unset condition
                       - RESULT_STATUS_PASS: RESULT_STATUS_PASS indicates the execution was successfult
                       - RESULT_STATUS_SKIP: RESULT_STATUS_SKIP indicates condition/consideration was skipped due to missing inputs or delayed execution
                       - RESULT_STATUS_FAIL: RESULT_STATUS_FAIL indicates the execution of the condition/consideration failed.
                title: >-
                  RecordOutput encapsulates the output of a process recorded on
                  chain
              title: >-
                output(s) is the results of executing the process on the given
                process indicated in this record
          title: >-
            A record (of fact) is attached to a session or each consideration
            output from a contract
    title: RecordsByScopeUUIDResponse is the response to a RecordsByScopeUUIDRequest
  provenance.metadata.v1.ResultStatus:
    type: string
    enum:
      - RESULT_STATUS_UNSPECIFIED
      - RESULT_STATUS_PASS
      - RESULT_STATUS_SKIP
      - RESULT_STATUS_FAIL
    default: RESULT_STATUS_UNSPECIFIED
    description: >-
      - RESULT_STATUS_UNSPECIFIED: RESULT_STATUS_UNSPECIFIED indicates an unset
      condition
       - RESULT_STATUS_PASS: RESULT_STATUS_PASS indicates the execution was successfult
       - RESULT_STATUS_SKIP: RESULT_STATUS_SKIP indicates condition/consideration was skipped due to missing inputs or delayed execution
       - RESULT_STATUS_FAIL: RESULT_STATUS_FAIL indicates the execution of the condition/consideration failed.
    title: ResultStatus indicates the various states of execution of a record
  provenance.metadata.v1.Scope:
    type: object
    properties:
      scope_id:
        type: string
        format: byte
        title: >-
          Unique ID for this scope.  Implements sdk.Address interface for use
          where addresses are required in Cosmos
      specification_id:
        type: string
        format: byte
        title: >-
          the scope specification that contains the specifications for data
          elements allowed within this scope
      owners:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
              title: address of the account (on chain)
            role:
              type: string
              enum:
                - PARTY_TYPE_UNSPECIFIED
                - PARTY_TYPE_ORIGINATOR
                - PARTY_TYPE_SERVICER
                - PARTY_TYPE_INVESTOR
                - PARTY_TYPE_CUSTODIAN
                - PARTY_TYPE_OWNER
                - PARTY_TYPE_AFFILIATE
                - PARTY_TYPE_OMNIBUS
                - PARTY_TYPE_PROVENANCE
              default: PARTY_TYPE_UNSPECIFIED
              description: >-
                - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an error
                condition
                 - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                 - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                 - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                 - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                 - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                 - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                 - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                 - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
              title: PartyType are the different roles parties on a contract may use
          title: >-
            A Party is an address with/in a given role associated with a
            contract
        description: >-
          These parties represent top level owners of the records within.  These
          parties must sign any requests that modify

          the data within the scope.  These addresses are in union with parties
          listed on the sessions.
      data_access:
        type: array
        items:
          type: string
        description: >-
          Addessses in this list are authorized to recieve off-chain data
          associated with this scope.
      value_owner_address:
        type: string
        description: >-
          An address that controls the value associated with this scope. 
          Standard blockchain accounts and marker accounts

          are supported for this value.  This attribute may only be changed by
          the entity indicated once it is set.
    description: >-
      Scope defines a root reference for a collection of records owned by one or
      more parties.
  provenance.metadata.v1.ScopeResponse:
    type: object
    properties:
      scope:
        type: object
        properties:
          scope_id:
            type: string
            format: byte
            title: >-
              Unique ID for this scope.  Implements sdk.Address interface for
              use where addresses are required in Cosmos
          specification_id:
            type: string
            format: byte
            title: >-
              the scope specification that contains the specifications for data
              elements allowed within this scope
          owners:
            type: array
            items:
              type: object
              properties:
                address:
                  type: string
                  title: address of the account (on chain)
                role:
                  type: string
                  enum:
                    - PARTY_TYPE_UNSPECIFIED
                    - PARTY_TYPE_ORIGINATOR
                    - PARTY_TYPE_SERVICER
                    - PARTY_TYPE_INVESTOR
                    - PARTY_TYPE_CUSTODIAN
                    - PARTY_TYPE_OWNER
                    - PARTY_TYPE_AFFILIATE
                    - PARTY_TYPE_OMNIBUS
                    - PARTY_TYPE_PROVENANCE
                  default: PARTY_TYPE_UNSPECIFIED
                  description: >-
                    - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an error
                    condition
                     - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                     - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                     - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                     - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                     - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                     - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                     - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                     - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
                  title: >-
                    PartyType are the different roles parties on a contract may
                    use
              title: >-
                A Party is an address with/in a given role associated with a
                contract
            description: >-
              These parties represent top level owners of the records within. 
              These parties must sign any requests that modify

              the data within the scope.  These addresses are in union with
              parties listed on the sessions.
          data_access:
            type: array
            items:
              type: string
            description: >-
              Addessses in this list are authorized to recieve off-chain data
              associated with this scope.
          value_owner_address:
            type: string
            description: >-
              An address that controls the value associated with this scope. 
              Standard blockchain accounts and marker accounts

              are supported for this value.  This attribute may only be changed
              by the entity indicated once it is set.
        description: >-
          Scope defines a root reference for a collection of records owned by
          one or more parties.
      sessions:
        type: array
        items:
          type: object
          properties:
            session_id:
              type: string
              format: byte
            specification_id:
              type: string
              format: byte
              description: >-
                unique id of the contract specification that was used to create
                this session.
            parties:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                    title: address of the account (on chain)
                  role:
                    type: string
                    enum:
                      - PARTY_TYPE_UNSPECIFIED
                      - PARTY_TYPE_ORIGINATOR
                      - PARTY_TYPE_SERVICER
                      - PARTY_TYPE_INVESTOR
                      - PARTY_TYPE_CUSTODIAN
                      - PARTY_TYPE_OWNER
                      - PARTY_TYPE_AFFILIATE
                      - PARTY_TYPE_OMNIBUS
                      - PARTY_TYPE_PROVENANCE
                    default: PARTY_TYPE_UNSPECIFIED
                    description: >-
                      - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an
                      error condition
                       - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                       - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                       - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                       - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                       - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                       - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                       - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                       - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
                    title: >-
                      PartyType are the different roles parties on a contract
                      may use
                title: >-
                  A Party is an address with/in a given role associated with a
                  contract
              title: Set of identities that signed this contract
            name:
              type: string
              title: >-
                name to associate with this session execution context, typically
                classname
            audit:
              description: >-
                Created by, updated by, timestamps, version number, and related
                info.
              type: object
              properties:
                created_date:
                  type: string
                  format: date-time
                  title: the date/time when this entry was created
                created_by:
                  type: string
                  title: the address of the account that created this record
                updated_date:
                  type: string
                  format: date-time
                  title: the date/time when this entry was last updated
                updated_by:
                  type: string
                  title: the address of the account that modified this record
                version:
                  type: integer
                  format: int64
                  title: >-
                    an optional version number that is incremented with each
                    update
                message:
                  type: string
                  title: >-
                    an optional message associated with the creation/update
                    event
              title: >-
                AuditFields capture information about the last account to make
                modifications and when they were made
          description: >-
            The context will have a specification and set of parties involved. 
            The Session may be updated several

            times so long as the parties listed are signers on the transaction. 
            NOTE: When there are no Records within a Scope

            that reference a Session it is removed.
          title: >-
            A Session is created for an execution context against a specific
            specification instance
      records:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              title: >-
                name/identifier for this record.  Value must be unique within
                the scope.  Also known as a Fact name
            session_id:
              type: string
              format: byte
              title: >-
                id of the session context that was used to create this record
                (use with filtered kvprefix iterator)
            process:
              title: >-
                process contain information used to uniquely identify an
                execution on or off chain that generated this record
              type: object
              properties:
                address:
                  type: string
                  title: the address of a smart contract used for this process
                hash:
                  type: string
                  title: the hash of an off-chain process used
                name:
                  type: string
                  title: >-
                    a name associated with the process (type_name, classname or
                    smart contract common name)
                method:
                  type: string
                  title: >-
                    method is a name or reference to a specific operation
                    (method) within a class/contract that was invoked
            inputs:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Name value included to link back to the definition spec.
                  record_id:
                    type: string
                    format: byte
                    title: the address of a record on chain (For Established Records)
                  hash:
                    type: string
                    title: >-
                      the hash of an off-chain piece of information (For
                      Proposed Records)
                  type_name:
                    type: string
                    title: from proposed fact structure to unmarshal
                  status:
                    title: >-
                      Indicates if this input was a recorded fact on chain or
                      just a given hashed input
                    type: string
                    enum:
                      - RECORD_INPUT_STATUS_UNSPECIFIED
                      - RECORD_INPUT_STATUS_PROPOSED
                      - RECORD_INPUT_STATUS_RECORD
                    default: RECORD_INPUT_STATUS_UNSPECIFIED
                    description: >-
                      - RECORD_INPUT_STATUS_UNSPECIFIED:
                      RECORD_INPUT_STATUS_UNSPECIFIED indicates an
                      invalid/unknown input type
                       - RECORD_INPUT_STATUS_PROPOSED: RECORD_INPUT_STATUS_PROPOSED indicates this input was an arbitrary piece of data that was hashed
                       - RECORD_INPUT_STATUS_RECORD: RECORD_INPUT_STATUS_RECORD indicates this input is a reference to a previously recorded fact on blockchain
                title: Tracks the inputs used to establish this record
              title: >-
                inputs used with the process to achieve the output on this
                record
            outputs:
              type: array
              items:
                type: object
                properties:
                  hash:
                    type: string
                    title: >-
                      Hash of the data output that was output/generated for this
                      record
                  status:
                    title: >-
                      Status of the process execution associated with this
                      output indicating success,failure, or pending
                    type: string
                    enum:
                      - RESULT_STATUS_UNSPECIFIED
                      - RESULT_STATUS_PASS
                      - RESULT_STATUS_SKIP
                      - RESULT_STATUS_FAIL
                    default: RESULT_STATUS_UNSPECIFIED
                    description: >-
                      - RESULT_STATUS_UNSPECIFIED: RESULT_STATUS_UNSPECIFIED
                      indicates an unset condition
                       - RESULT_STATUS_PASS: RESULT_STATUS_PASS indicates the execution was successfult
                       - RESULT_STATUS_SKIP: RESULT_STATUS_SKIP indicates condition/consideration was skipped due to missing inputs or delayed execution
                       - RESULT_STATUS_FAIL: RESULT_STATUS_FAIL indicates the execution of the condition/consideration failed.
                title: >-
                  RecordOutput encapsulates the output of a process recorded on
                  chain
              title: >-
                output(s) is the results of executing the process on the given
                process indicated in this record
          title: >-
            A record (of fact) is attached to a session or each consideration
            output from a contract
      scope_uuid:
        type: string
    description: ScopeResponse is the response to a scope request.
  provenance.metadata.v1.ScopeSpecification:
    type: object
    properties:
      specification_id:
        type: string
        format: byte
        title: unique identifier for this specification on chain
      description:
        description: General information about this scope specification.
        type: object
        properties:
          name:
            type: string
            description: A Name for this thing.
          description:
            type: string
            description: A description of this thing.
          website_url:
            type: string
            description: URL to find even more info.
          icon_url:
            type: string
            description: URL of an icon.
      owner_addresses:
        type: array
        items:
          type: string
        description: Addresses of the owners of this scope specification.
      parties_involved:
        type: array
        items:
          type: string
          enum:
            - PARTY_TYPE_UNSPECIFIED
            - PARTY_TYPE_ORIGINATOR
            - PARTY_TYPE_SERVICER
            - PARTY_TYPE_INVESTOR
            - PARTY_TYPE_CUSTODIAN
            - PARTY_TYPE_OWNER
            - PARTY_TYPE_AFFILIATE
            - PARTY_TYPE_OMNIBUS
            - PARTY_TYPE_PROVENANCE
          default: PARTY_TYPE_UNSPECIFIED
          description: >-
            - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an error
            condition
             - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
             - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
             - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
             - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
             - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
             - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
             - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
             - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
          title: PartyType are the different roles parties on a contract may use
        title: >-
          A list of parties that must be present on a scope (and their
          associated roles)
      contract_spec_ids:
        type: array
        items:
          type: string
          format: byte
        description: >-
          A list of contract specification ids allowed for a scope based on this
          specification.
    title: >-
      ScopeSpecification defines the required parties, resources, conditions,
      and consideration outputs for a contract
  provenance.metadata.v1.ScopeSpecificationResponse:
    type: object
    properties:
      scope_specification:
        type: object
        properties:
          specification_id:
            type: string
            format: byte
            title: unique identifier for this specification on chain
          description:
            description: General information about this scope specification.
            type: object
            properties:
              name:
                type: string
                description: A Name for this thing.
              description:
                type: string
                description: A description of this thing.
              website_url:
                type: string
                description: URL to find even more info.
              icon_url:
                type: string
                description: URL of an icon.
          owner_addresses:
            type: array
            items:
              type: string
            description: Addresses of the owners of this scope specification.
          parties_involved:
            type: array
            items:
              type: string
              enum:
                - PARTY_TYPE_UNSPECIFIED
                - PARTY_TYPE_ORIGINATOR
                - PARTY_TYPE_SERVICER
                - PARTY_TYPE_INVESTOR
                - PARTY_TYPE_CUSTODIAN
                - PARTY_TYPE_OWNER
                - PARTY_TYPE_AFFILIATE
                - PARTY_TYPE_OMNIBUS
                - PARTY_TYPE_PROVENANCE
              default: PARTY_TYPE_UNSPECIFIED
              description: >-
                - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an error
                condition
                 - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                 - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                 - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                 - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                 - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                 - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                 - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                 - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
              title: PartyType are the different roles parties on a contract may use
            title: >-
              A list of parties that must be present on a scope (and their
              associated roles)
          contract_spec_ids:
            type: array
            items:
              type: string
              format: byte
            description: >-
              A list of contract specification ids allowed for a scope based on
              this specification.
        title: >-
          ScopeSpecification defines the required parties, resources,
          conditions, and consideration outputs for a contract
      specification_uuid:
        type: string
    description: ScopeSpecification is the response to a scope specification request.
  provenance.metadata.v1.Session:
    type: object
    properties:
      session_id:
        type: string
        format: byte
      specification_id:
        type: string
        format: byte
        description: >-
          unique id of the contract specification that was used to create this
          session.
      parties:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
              title: address of the account (on chain)
            role:
              type: string
              enum:
                - PARTY_TYPE_UNSPECIFIED
                - PARTY_TYPE_ORIGINATOR
                - PARTY_TYPE_SERVICER
                - PARTY_TYPE_INVESTOR
                - PARTY_TYPE_CUSTODIAN
                - PARTY_TYPE_OWNER
                - PARTY_TYPE_AFFILIATE
                - PARTY_TYPE_OMNIBUS
                - PARTY_TYPE_PROVENANCE
              default: PARTY_TYPE_UNSPECIFIED
              description: >-
                - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an error
                condition
                 - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                 - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                 - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                 - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                 - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                 - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                 - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                 - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
              title: PartyType are the different roles parties on a contract may use
          title: >-
            A Party is an address with/in a given role associated with a
            contract
        title: Set of identities that signed this contract
      name:
        type: string
        title: >-
          name to associate with this session execution context, typically
          classname
      audit:
        description: 'Created by, updated by, timestamps, version number, and related info.'
        type: object
        properties:
          created_date:
            type: string
            format: date-time
            title: the date/time when this entry was created
          created_by:
            type: string
            title: the address of the account that created this record
          updated_date:
            type: string
            format: date-time
            title: the date/time when this entry was last updated
          updated_by:
            type: string
            title: the address of the account that modified this record
          version:
            type: integer
            format: int64
            title: an optional version number that is incremented with each update
          message:
            type: string
            title: an optional message associated with the creation/update event
        title: >-
          AuditFields capture information about the last account to make
          modifications and when they were made
    description: >-
      The context will have a specification and set of parties involved.  The
      Session may be updated several

      times so long as the parties listed are signers on the transaction.  NOTE:
      When there are no Records within a Scope

      that reference a Session it is removed.
    title: >-
      A Session is created for an execution context against a specific
      specification instance
  provenance.metadata.v1.SessionContextByIDResponse:
    type: object
    properties:
      scope_id:
        type: string
      session_id:
        type: string
      sessions:
        type: array
        items:
          type: object
          properties:
            session_id:
              type: string
              format: byte
            specification_id:
              type: string
              format: byte
              description: >-
                unique id of the contract specification that was used to create
                this session.
            parties:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                    title: address of the account (on chain)
                  role:
                    type: string
                    enum:
                      - PARTY_TYPE_UNSPECIFIED
                      - PARTY_TYPE_ORIGINATOR
                      - PARTY_TYPE_SERVICER
                      - PARTY_TYPE_INVESTOR
                      - PARTY_TYPE_CUSTODIAN
                      - PARTY_TYPE_OWNER
                      - PARTY_TYPE_AFFILIATE
                      - PARTY_TYPE_OMNIBUS
                      - PARTY_TYPE_PROVENANCE
                    default: PARTY_TYPE_UNSPECIFIED
                    description: >-
                      - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an
                      error condition
                       - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                       - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                       - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                       - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                       - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                       - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                       - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                       - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
                    title: >-
                      PartyType are the different roles parties on a contract
                      may use
                title: >-
                  A Party is an address with/in a given role associated with a
                  contract
              title: Set of identities that signed this contract
            name:
              type: string
              title: >-
                name to associate with this session execution context, typically
                classname
            audit:
              description: >-
                Created by, updated by, timestamps, version number, and related
                info.
              type: object
              properties:
                created_date:
                  type: string
                  format: date-time
                  title: the date/time when this entry was created
                created_by:
                  type: string
                  title: the address of the account that created this record
                updated_date:
                  type: string
                  format: date-time
                  title: the date/time when this entry was last updated
                updated_by:
                  type: string
                  title: the address of the account that modified this record
                version:
                  type: integer
                  format: int64
                  title: >-
                    an optional version number that is incremented with each
                    update
                message:
                  type: string
                  title: >-
                    an optional message associated with the creation/update
                    event
              title: >-
                AuditFields capture information about the last account to make
                modifications and when they were made
          description: >-
            The context will have a specification and set of parties involved. 
            The Session may be updated several

            times so long as the parties listed are signers on the transaction. 
            NOTE: When there are no Records within a Scope

            that reference a Session it is removed.
          title: >-
            A Session is created for an execution context against a specific
            specification instance
    title: SessionContextByIDResponse is the response to a SessionContextByIDRequest
  provenance.metadata.v1.SessionContextByUUIDResponse:
    type: object
    properties:
      scope_id:
        type: string
      session_id:
        type: string
      sessions:
        type: array
        items:
          type: object
          properties:
            session_id:
              type: string
              format: byte
            specification_id:
              type: string
              format: byte
              description: >-
                unique id of the contract specification that was used to create
                this session.
            parties:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                    title: address of the account (on chain)
                  role:
                    type: string
                    enum:
                      - PARTY_TYPE_UNSPECIFIED
                      - PARTY_TYPE_ORIGINATOR
                      - PARTY_TYPE_SERVICER
                      - PARTY_TYPE_INVESTOR
                      - PARTY_TYPE_CUSTODIAN
                      - PARTY_TYPE_OWNER
                      - PARTY_TYPE_AFFILIATE
                      - PARTY_TYPE_OMNIBUS
                      - PARTY_TYPE_PROVENANCE
                    default: PARTY_TYPE_UNSPECIFIED
                    description: >-
                      - PARTY_TYPE_UNSPECIFIED: PARTY_TYPE_UNSPECIFIED is an
                      error condition
                       - PARTY_TYPE_ORIGINATOR: PARTY_TYPE_ORIGINATOR is an asset originator
                       - PARTY_TYPE_SERVICER: PARTY_TYPE_SERVICER provides debt servicing functions
                       - PARTY_TYPE_INVESTOR: PARTY_TYPE_INVESTOR is a generic investor
                       - PARTY_TYPE_CUSTODIAN: PARTY_TYPE_CUSTODIAN is an entity that provides custodian services for assets
                       - PARTY_TYPE_OWNER: PARTY_TYPE_OWNER indicates this party is an owner of the item
                       - PARTY_TYPE_AFFILIATE: PARTY_TYPE_AFFILIATE is a party with an affiliate agreement
                       - PARTY_TYPE_OMNIBUS: PARTY_TYPE_OMNIBUS is a special type of party that controls an omnibus bank account
                       - PARTY_TYPE_PROVENANCE: PARTY_TYPE_PROVENANCE is used to indicate this party represents the blockchain or a smart contract action
                    title: >-
                      PartyType are the different roles parties on a contract
                      may use
                title: >-
                  A Party is an address with/in a given role associated with a
                  contract
              title: Set of identities that signed this contract
            name:
              type: string
              title: >-
                name to associate with this session execution context, typically
                classname
            audit:
              description: >-
                Created by, updated by, timestamps, version number, and related
                info.
              type: object
              properties:
                created_date:
                  type: string
                  format: date-time
                  title: the date/time when this entry was created
                created_by:
                  type: string
                  title: the address of the account that created this record
                updated_date:
                  type: string
                  format: date-time
                  title: the date/time when this entry was last updated
                updated_by:
                  type: string
                  title: the address of the account that modified this record
                version:
                  type: integer
                  format: int64
                  title: >-
                    an optional version number that is incremented with each
                    update
                message:
                  type: string
                  title: >-
                    an optional message associated with the creation/update
                    event
              title: >-
                AuditFields capture information about the last account to make
                modifications and when they were made
          description: >-
            The context will have a specification and set of parties involved. 
            The Session may be updated several

            times so long as the parties listed are signers on the transaction. 
            NOTE: When there are no Records within a Scope

            that reference a Session it is removed.
          title: >-
            A Session is created for an execution context against a specific
            specification instance
    title: >-
      SessionContextByUUIDResponse is the response to a
      SessionContextByUUIDRequest
  provenance.metadata.v1.ValueOwnershipResponse:
    type: object
    properties:
      scope_uuids:
        type: array
        items:
          type: string
        description: A list of scope ids (uuid) associated with the given address.
      pagination:
        description: pagination defines an optional pagination for the request.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: >-
      ValueOwnershipResponse is the reponse to the Valueownership request and
      includes a list of scope identifiers
  provenance.name.v1.Params:
    type: object
    properties:
      max_segment_length:
        type: integer
        format: int64
        title: maximum length of name segment to allow
      min_segment_length:
        type: integer
        format: int64
        title: minimum length of name segment to allow
      max_name_levels:
        type: integer
        format: int64
        title: >-
          maximum number of name segments to allow.  Example: `foo.bar.baz`
          would be 3
      allow_unrestricted_names:
        type: boolean
        title: determines if unrestricted name keys are allowed or not
    description: Params defines the set of params for the name module.
  provenance.name.v1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          max_segment_length:
            type: integer
            format: int64
            title: maximum length of name segment to allow
          min_segment_length:
            type: integer
            format: int64
            title: minimum length of name segment to allow
          max_name_levels:
            type: integer
            format: int64
            title: >-
              maximum number of name segments to allow.  Example: `foo.bar.baz`
              would be 3
          allow_unrestricted_names:
            type: boolean
            title: determines if unrestricted name keys are allowed or not
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  provenance.name.v1.QueryResolveResponse:
    type: object
    properties:
      address:
        type: string
        title: a string containing the address the name resolves to
    description: QueryResolveResponse is the response type for the Query/Resolve method.
  provenance.name.v1.QueryReverseLookupResponse:
    type: object
    properties:
      name:
        type: array
        items:
          type: string
        title: an array of names bound against a given address
      pagination:
        description: pagination defines an optional pagination for the request.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryReverseLookupResponse is the response type for the Query/Resolve
      method.
