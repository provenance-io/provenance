syntax = "proto3";
package vault.v1;

import "gogoproto/gogo.proto";
import "vault/v1/vault.proto";

option go_package = "github.com/provlabs/vault/types";

message QueueEntry {
  uint64 time = 1;
  string addr = 2;
}

message PendingSwapOutQueueEntry {
  int64 time = 1;
  uint64 id = 2;
  PendingSwapOut swap_out = 3 [(gogoproto.nullable) = false];
}

message PendingSwapOutQueue {
  uint64 latest_sequence_number = 1;
  repeated PendingSwapOutQueueEntry entries = 2 [(gogoproto.nullable) = false];
}

// GenesisState defines the vault module's genesis state.
// NOTE: payout verification queue is not imported or exported.  It will always be empty after endblocker processes it.
message GenesisState {
  // vaults defines the vaults that exist at genesis.
  repeated VaultAccount vaults = 1 [(gogoproto.nullable) = false];

  // payout_timeout_queue contains (time, addr) entries for vaults that are
  // temporarily deferred from automatic payout/interest verification until the
  // given UNIX timestamp (seconds). These entries are re-enqueued on InitGenesis.
  repeated QueueEntry payout_timeout_queue = 2 [(gogoproto.nullable) = false];

  // pending_swap_out_queue contains entries for pending swap outs.
  PendingSwapOutQueue pending_swap_out_queue = 3 [(gogoproto.nullable) = false];
}
