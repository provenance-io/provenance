// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: provenance/smartaccounts/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgRegisterFido2Credential is used to initialize a provenance smart account with fido2 credentials.
type MsgRegisterFido2Credential struct {
	// sender is the address of the sender of this message.
	Sender             string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	EncodedAttestation string `protobuf:"bytes,2,opt,name=encodedAttestation,proto3" json:"encodedAttestation,omitempty"`
	// You must store the user ID separately when initiating registration and retrieve it later.
	// This is the fido2 user identifier for the authenticator.
	UserIdentifier string `protobuf:"bytes,3,opt,name=user_identifier,json=userIdentifier,proto3" json:"user_identifier,omitempty"`
}

func (m *MsgRegisterFido2Credential) Reset()         { *m = MsgRegisterFido2Credential{} }
func (m *MsgRegisterFido2Credential) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterFido2Credential) ProtoMessage()    {}
func (*MsgRegisterFido2Credential) Descriptor() ([]byte, []int) {
	return fileDescriptor_61894182d7e375a2, []int{0}
}
func (m *MsgRegisterFido2Credential) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterFido2Credential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterFido2Credential.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterFido2Credential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterFido2Credential.Merge(m, src)
}
func (m *MsgRegisterFido2Credential) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterFido2Credential) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterFido2Credential.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterFido2Credential proto.InternalMessageInfo

func (m *MsgRegisterFido2Credential) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgRegisterFido2Credential) GetEncodedAttestation() string {
	if m != nil {
		return m.EncodedAttestation
	}
	return ""
}

func (m *MsgRegisterFido2Credential) GetUserIdentifier() string {
	if m != nil {
		return m.UserIdentifier
	}
	return ""
}

// Moves to smart contract authentication only.
type MsgMigrateToSmartAccountAuthentication struct {
	// sender is the address of the sender of this message.
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (m *MsgMigrateToSmartAccountAuthentication) Reset() {
	*m = MsgMigrateToSmartAccountAuthentication{}
}
func (m *MsgMigrateToSmartAccountAuthentication) String() string { return proto.CompactTextString(m) }
func (*MsgMigrateToSmartAccountAuthentication) ProtoMessage()    {}
func (*MsgMigrateToSmartAccountAuthentication) Descriptor() ([]byte, []int) {
	return fileDescriptor_61894182d7e375a2, []int{1}
}
func (m *MsgMigrateToSmartAccountAuthentication) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMigrateToSmartAccountAuthentication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMigrateToSmartAccountAuthentication.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMigrateToSmartAccountAuthentication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMigrateToSmartAccountAuthentication.Merge(m, src)
}
func (m *MsgMigrateToSmartAccountAuthentication) XXX_Size() int {
	return m.Size()
}
func (m *MsgMigrateToSmartAccountAuthentication) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMigrateToSmartAccountAuthentication.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMigrateToSmartAccountAuthentication proto.InternalMessageInfo

func (m *MsgMigrateToSmartAccountAuthentication) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

type MsgMigrateToSmartAccountAuthenticationResponse struct {
}

func (m *MsgMigrateToSmartAccountAuthenticationResponse) Reset() {
	*m = MsgMigrateToSmartAccountAuthenticationResponse{}
}
func (m *MsgMigrateToSmartAccountAuthenticationResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgMigrateToSmartAccountAuthenticationResponse) ProtoMessage() {}
func (*MsgMigrateToSmartAccountAuthenticationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_61894182d7e375a2, []int{2}
}
func (m *MsgMigrateToSmartAccountAuthenticationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMigrateToSmartAccountAuthenticationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMigrateToSmartAccountAuthenticationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMigrateToSmartAccountAuthenticationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMigrateToSmartAccountAuthenticationResponse.Merge(m, src)
}
func (m *MsgMigrateToSmartAccountAuthenticationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMigrateToSmartAccountAuthenticationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMigrateToSmartAccountAuthenticationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMigrateToSmartAccountAuthenticationResponse proto.InternalMessageInfo

type MsgDeleteCredential struct {
	// sender is the address of the sender of this message.
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// credential number is the credential number assigned to the credential in the provenance smart account module.
	CredentialNumber uint64 `protobuf:"varint,2,opt,name=credential_number,json=credentialNumber,proto3" json:"credential_number,omitempty"`
}

func (m *MsgDeleteCredential) Reset()         { *m = MsgDeleteCredential{} }
func (m *MsgDeleteCredential) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteCredential) ProtoMessage()    {}
func (*MsgDeleteCredential) Descriptor() ([]byte, []int) {
	return fileDescriptor_61894182d7e375a2, []int{3}
}
func (m *MsgDeleteCredential) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteCredential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteCredential.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteCredential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteCredential.Merge(m, src)
}
func (m *MsgDeleteCredential) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteCredential) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteCredential.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteCredential proto.InternalMessageInfo

func (m *MsgDeleteCredential) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgDeleteCredential) GetCredentialNumber() uint64 {
	if m != nil {
		return m.CredentialNumber
	}
	return 0
}

type MsgDeleteCredentialResponse struct {
	// credential_number is the credential number that was deleted.
	CredentialNumber uint64 `protobuf:"varint,1,opt,name=credential_number,json=credentialNumber,proto3" json:"credential_number,omitempty"`
}

func (m *MsgDeleteCredentialResponse) Reset()         { *m = MsgDeleteCredentialResponse{} }
func (m *MsgDeleteCredentialResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteCredentialResponse) ProtoMessage()    {}
func (*MsgDeleteCredentialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_61894182d7e375a2, []int{4}
}
func (m *MsgDeleteCredentialResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteCredentialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteCredentialResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteCredentialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteCredentialResponse.Merge(m, src)
}
func (m *MsgDeleteCredentialResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteCredentialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteCredentialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteCredentialResponse proto.InternalMessageInfo

func (m *MsgDeleteCredentialResponse) GetCredentialNumber() uint64 {
	if m != nil {
		return m.CredentialNumber
	}
	return 0
}

// delete smart account for whatever reason.
type MsgDeleteAccount struct {
	// sender is the address of the sender of this message.
	Sender  string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgDeleteAccount) Reset()         { *m = MsgDeleteAccount{} }
func (m *MsgDeleteAccount) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteAccount) ProtoMessage()    {}
func (*MsgDeleteAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_61894182d7e375a2, []int{5}
}
func (m *MsgDeleteAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteAccount.Merge(m, src)
}
func (m *MsgDeleteAccount) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteAccount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteAccount proto.InternalMessageInfo

func (m *MsgDeleteAccount) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgDeleteAccount) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgDeleteAccountResponse struct {
}

func (m *MsgDeleteAccountResponse) Reset()         { *m = MsgDeleteAccountResponse{} }
func (m *MsgDeleteAccountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteAccountResponse) ProtoMessage()    {}
func (*MsgDeleteAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_61894182d7e375a2, []int{6}
}
func (m *MsgDeleteAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteAccountResponse.Merge(m, src)
}
func (m *MsgDeleteAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteAccountResponse proto.InternalMessageInfo

type MsgRegisterCosmosCredential struct {
	// sender is the address of the sender of this message.
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	// pubkey for which the secp256k1 keypair being registered.
	Pubkey *types.Any `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
}

func (m *MsgRegisterCosmosCredential) Reset()         { *m = MsgRegisterCosmosCredential{} }
func (m *MsgRegisterCosmosCredential) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterCosmosCredential) ProtoMessage()    {}
func (*MsgRegisterCosmosCredential) Descriptor() ([]byte, []int) {
	return fileDescriptor_61894182d7e375a2, []int{7}
}
func (m *MsgRegisterCosmosCredential) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterCosmosCredential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterCosmosCredential.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterCosmosCredential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterCosmosCredential.Merge(m, src)
}
func (m *MsgRegisterCosmosCredential) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterCosmosCredential) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterCosmosCredential.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterCosmosCredential proto.InternalMessageInfo

func (m *MsgRegisterCosmosCredential) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgRegisterCosmosCredential) GetPubkey() *types.Any {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

// MsgRegisterFido2CredentialResponse is returned after successfully registering a WebAuthn credential.
// It contains information about the newly registered credential and the associated smart account.
type MsgRegisterFido2CredentialResponse struct {
	// credential_number is a globally unique identifier assigned to the newly registered credential.
	// This number can be used in future operations like credential deletion.
	CredentialNumber uint64 `protobuf:"varint,1,opt,name=credential_number,json=credentialNumber,proto3" json:"credential_number,omitempty"`
	// provenanceaccount contains the full smart account data after the registration,
	// including all credentials associated with the account and its current state.
	ProvenanceAccount *ProvenanceAccount `protobuf:"bytes,2,opt,name=provenance_account,json=provenanceAccount,proto3" json:"provenance_account,omitempty"`
}

func (m *MsgRegisterFido2CredentialResponse) Reset()         { *m = MsgRegisterFido2CredentialResponse{} }
func (m *MsgRegisterFido2CredentialResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterFido2CredentialResponse) ProtoMessage()    {}
func (*MsgRegisterFido2CredentialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_61894182d7e375a2, []int{8}
}
func (m *MsgRegisterFido2CredentialResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterFido2CredentialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterFido2CredentialResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterFido2CredentialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterFido2CredentialResponse.Merge(m, src)
}
func (m *MsgRegisterFido2CredentialResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterFido2CredentialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterFido2CredentialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterFido2CredentialResponse proto.InternalMessageInfo

func (m *MsgRegisterFido2CredentialResponse) GetCredentialNumber() uint64 {
	if m != nil {
		return m.CredentialNumber
	}
	return 0
}

func (m *MsgRegisterFido2CredentialResponse) GetProvenanceAccount() *ProvenanceAccount {
	if m != nil {
		return m.ProvenanceAccount
	}
	return nil
}

type MsgRegisterCosmosCredentialResponse struct {
	CredentialNumber uint64 `protobuf:"varint,1,opt,name=credential_number,json=credentialNumber,proto3" json:"credential_number,omitempty"`
}

func (m *MsgRegisterCosmosCredentialResponse) Reset()         { *m = MsgRegisterCosmosCredentialResponse{} }
func (m *MsgRegisterCosmosCredentialResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterCosmosCredentialResponse) ProtoMessage()    {}
func (*MsgRegisterCosmosCredentialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_61894182d7e375a2, []int{9}
}
func (m *MsgRegisterCosmosCredentialResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterCosmosCredentialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterCosmosCredentialResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterCosmosCredentialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterCosmosCredentialResponse.Merge(m, src)
}
func (m *MsgRegisterCosmosCredentialResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterCosmosCredentialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterCosmosCredentialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterCosmosCredentialResponse proto.InternalMessageInfo

func (m *MsgRegisterCosmosCredentialResponse) GetCredentialNumber() uint64 {
	if m != nil {
		return m.CredentialNumber
	}
	return 0
}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
type MsgUpdateParams struct {
	// authority is the address of the governance account.
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// params defines the parameters to update.
	//
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_61894182d7e375a2, []int{10}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_61894182d7e375a2, []int{11}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgRegisterFido2Credential)(nil), "provenance.smartaccounts.v1.MsgRegisterFido2Credential")
	proto.RegisterType((*MsgMigrateToSmartAccountAuthentication)(nil), "provenance.smartaccounts.v1.MsgMigrateToSmartAccountAuthentication")
	proto.RegisterType((*MsgMigrateToSmartAccountAuthenticationResponse)(nil), "provenance.smartaccounts.v1.MsgMigrateToSmartAccountAuthenticationResponse")
	proto.RegisterType((*MsgDeleteCredential)(nil), "provenance.smartaccounts.v1.MsgDeleteCredential")
	proto.RegisterType((*MsgDeleteCredentialResponse)(nil), "provenance.smartaccounts.v1.MsgDeleteCredentialResponse")
	proto.RegisterType((*MsgDeleteAccount)(nil), "provenance.smartaccounts.v1.MsgDeleteAccount")
	proto.RegisterType((*MsgDeleteAccountResponse)(nil), "provenance.smartaccounts.v1.MsgDeleteAccountResponse")
	proto.RegisterType((*MsgRegisterCosmosCredential)(nil), "provenance.smartaccounts.v1.MsgRegisterCosmosCredential")
	proto.RegisterType((*MsgRegisterFido2CredentialResponse)(nil), "provenance.smartaccounts.v1.MsgRegisterFido2CredentialResponse")
	proto.RegisterType((*MsgRegisterCosmosCredentialResponse)(nil), "provenance.smartaccounts.v1.MsgRegisterCosmosCredentialResponse")
	proto.RegisterType((*MsgUpdateParams)(nil), "provenance.smartaccounts.v1.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "provenance.smartaccounts.v1.MsgUpdateParamsResponse")
}

func init() {
	proto.RegisterFile("provenance/smartaccounts/v1/tx.proto", fileDescriptor_61894182d7e375a2)
}

var fileDescriptor_61894182d7e375a2 = []byte{
	// 738 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcf, 0x4f, 0xd4, 0x4e,
	0x14, 0xdf, 0xf9, 0x02, 0xfb, 0x0d, 0xc3, 0x37, 0xfc, 0xe8, 0x97, 0x84, 0xa5, 0x24, 0xab, 0x59,
	0x0c, 0x2a, 0x42, 0xcb, 0x0f, 0xa3, 0xc8, 0x45, 0x17, 0x8c, 0x89, 0x9a, 0x55, 0x52, 0xf4, 0x62,
	0x62, 0x36, 0xdd, 0x76, 0x18, 0x1a, 0xb6, 0x33, 0xcd, 0xcc, 0x94, 0xb0, 0x17, 0xa3, 0x1e, 0x3d,
	0x99, 0x98, 0x78, 0xf2, 0x8f, 0xe0, 0xc0, 0xc9, 0xbf, 0x80, 0x23, 0xf1, 0xe4, 0xc9, 0x18, 0x38,
	0x70, 0xf1, 0x8f, 0x30, 0x6d, 0xa7, 0x5d, 0xb6, 0xee, 0x76, 0x61, 0xf1, 0xd6, 0x79, 0xef, 0x7d,
	0x3e, 0xef, 0xf3, 0x5e, 0xe7, 0xbd, 0x16, 0x5e, 0xf3, 0x18, 0xdd, 0x45, 0xc4, 0x24, 0x16, 0xd2,
	0xb9, 0x6b, 0x32, 0x61, 0x5a, 0x16, 0xf5, 0x89, 0xe0, 0xfa, 0xee, 0xa2, 0x2e, 0xf6, 0x34, 0x8f,
	0x51, 0x41, 0x95, 0xa9, 0x66, 0x94, 0xd6, 0x12, 0xa5, 0xed, 0x2e, 0xaa, 0x13, 0x16, 0xe5, 0x2e,
	0xe5, 0xba, 0xcb, 0x71, 0x00, 0x72, 0x39, 0x8e, 0x50, 0xea, 0x38, 0xa6, 0x98, 0x86, 0x8f, 0x7a,
	0xf0, 0x24, 0xad, 0x93, 0x51, 0x78, 0x35, 0x72, 0x44, 0x07, 0xe9, 0xba, 0x99, 0x25, 0x06, 0x23,
	0x82, 0xb8, 0x13, 0x87, 0x4e, 0x62, 0x4a, 0x71, 0x1d, 0xe9, 0xe1, 0xa9, 0xe6, 0x6f, 0xe9, 0x26,
	0x69, 0x48, 0xd7, 0x72, 0x16, 0x4b, 0xd3, 0x27, 0xad, 0x11, 0xa8, 0x74, 0x00, 0xa0, 0x5a, 0xe1,
	0xd8, 0x40, 0xd8, 0xe1, 0x02, 0xb1, 0x47, 0x8e, 0x4d, 0x97, 0xd6, 0x19, 0xb2, 0x11, 0x11, 0x8e,
	0x59, 0x57, 0x16, 0x60, 0x9e, 0x23, 0x62, 0x23, 0x56, 0x00, 0x57, 0xc1, 0x8d, 0xc1, 0xb5, 0xc2,
	0xb7, 0x83, 0xf9, 0x71, 0xa9, 0xbd, 0x6c, 0xdb, 0x0c, 0x71, 0xbe, 0x29, 0x98, 0x43, 0xb0, 0x21,
	0xe3, 0x14, 0x0d, 0x2a, 0x88, 0x58, 0xd4, 0x46, 0x76, 0x59, 0x08, 0xc4, 0x85, 0x29, 0x1c, 0x4a,
	0x0a, 0xff, 0x04, 0x68, 0xa3, 0x8d, 0x47, 0xb9, 0x0e, 0x47, 0x7c, 0x8e, 0x58, 0xd5, 0x09, 0x53,
	0x6e, 0x39, 0x88, 0x15, 0xfa, 0xc2, 0xe0, 0xe1, 0xc0, 0xfc, 0x38, 0xb1, 0xae, 0x0e, 0xbd, 0x3f,
	0xdd, 0x9f, 0x95, 0x59, 0x4a, 0x18, 0xce, 0x54, 0x38, 0xae, 0x38, 0x98, 0x99, 0x02, 0xbd, 0xa0,
	0x9b, 0x41, 0xb9, 0xe5, 0xa8, 0xb0, 0xb2, 0x2f, 0xb6, 0x03, 0x90, 0x15, 0xf1, 0x5f, 0xb8, 0x82,
	0xd6, 0x44, 0x0b, 0x50, 0x3b, 0x5f, 0x22, 0x03, 0x71, 0x8f, 0x12, 0x8e, 0x4a, 0xef, 0x00, 0xfc,
	0xbf, 0xc2, 0xf1, 0x43, 0x54, 0x47, 0x02, 0x5d, 0xaa, 0x95, 0xb7, 0xe0, 0x98, 0x95, 0xe0, 0xab,
	0xc4, 0x77, 0x6b, 0x88, 0x85, 0x9d, 0xec, 0x37, 0x46, 0x9b, 0x8e, 0x67, 0xa1, 0xbd, 0x55, 0xf5,
	0x13, 0x38, 0xd5, 0x46, 0x42, 0x2c, 0xb1, 0x3d, 0x31, 0x68, 0x4f, 0x5c, 0xda, 0x81, 0xa3, 0x09,
	0x97, 0xac, 0xbc, 0x87, 0x5a, 0x0a, 0xf0, 0x5f, 0x33, 0x72, 0xc8, 0xbb, 0x10, 0x1f, 0x5b, 0x85,
	0xab, 0xb0, 0x90, 0x4e, 0x96, 0x34, 0xf6, 0x03, 0x08, 0xab, 0x8a, 0xaf, 0xea, 0x7a, 0x98, 0xee,
	0x52, 0x0d, 0x9e, 0x83, 0x79, 0xcf, 0xaf, 0xed, 0xa0, 0x46, 0xa8, 0x69, 0x68, 0x69, 0x5c, 0x8b,
	0xa6, 0x4b, 0x8b, 0xa7, 0x4b, 0x2b, 0x93, 0x86, 0x21, 0x63, 0x5a, 0x85, 0xee, 0x03, 0x58, 0xea,
	0x3c, 0x37, 0x3d, 0x75, 0x5a, 0x79, 0x0d, 0x95, 0xe6, 0x98, 0x56, 0xe5, 0x9c, 0x4a, 0x69, 0x9a,
	0x96, 0xb1, 0x8a, 0xb4, 0x8d, 0xc4, 0x17, 0x37, 0x6d, 0xcc, 0x4b, 0x9b, 0x4a, 0x06, 0x9c, 0xce,
	0x68, 0x5f, 0x6f, 0x97, 0xe3, 0x0b, 0x80, 0x23, 0x15, 0x8e, 0x5f, 0x7a, 0xb6, 0x29, 0xd0, 0x86,
	0xc9, 0x4c, 0x97, 0x2b, 0x77, 0xe0, 0xa0, 0xe9, 0x8b, 0x6d, 0xca, 0x1c, 0xd1, 0xe8, 0xfa, 0x2a,
	0x9a, 0xa1, 0x4a, 0x19, 0xe6, 0xbd, 0x90, 0x41, 0x96, 0x3c, 0x9d, 0x5d, 0x72, 0x18, 0xba, 0xd6,
	0x7f, 0xf8, 0xe3, 0x4a, 0xce, 0x90, 0xc0, 0xd5, 0xe1, 0xe0, 0x15, 0x35, 0x29, 0x4b, 0x93, 0x70,
	0x22, 0xa5, 0x2e, 0x2e, 0x73, 0xe9, 0xd7, 0x00, 0xec, 0xab, 0x70, 0xac, 0x30, 0xf8, 0x5f, 0x8b,
	0xfa, 0xb9, 0xcc, 0xac, 0x29, 0x36, 0xf5, 0xf6, 0x45, 0xa2, 0x93, 0x16, 0x7f, 0x02, 0x70, 0xa2,
	0xd3, 0xc6, 0xbd, 0xdb, 0x8d, 0xb1, 0x03, 0x50, 0xbd, 0xdf, 0x23, 0x30, 0x51, 0xf5, 0x15, 0xc0,
	0x99, 0x48, 0x6e, 0xd6, 0x9e, 0x7b, 0x4e, 0xea, 0x0d, 0x65, 0xbd, 0x5b, 0xae, 0x73, 0x2c, 0x4c,
	0xf5, 0xe9, 0x5f, 0x20, 0x49, 0xc4, 0x7f, 0x06, 0xb0, 0xd0, 0x71, 0x33, 0xac, 0x9c, 0xb7, 0x35,
	0x69, 0xa4, 0xfa, 0xa0, 0x57, 0x64, 0x22, 0xec, 0x0d, 0x1c, 0xfd, 0xf3, 0x53, 0xd0, 0x8d, 0x35,
	0x8d, 0x50, 0x57, 0x2e, 0x8a, 0x88, 0xf3, 0xab, 0x03, 0x6f, 0x4f, 0xf7, 0x67, 0xc1, 0xda, 0xe6,
	0xe1, 0x71, 0x11, 0x1c, 0x1d, 0x17, 0xc1, 0xcf, 0xe3, 0x22, 0xf8, 0x78, 0x52, 0xcc, 0x1d, 0x9d,
	0x14, 0x73, 0xdf, 0x4f, 0x8a, 0xb9, 0x57, 0xf7, 0xb0, 0x23, 0xb6, 0xfd, 0x9a, 0x66, 0x51, 0xf7,
	0xcc, 0x5f, 0xc2, 0xbc, 0x43, 0xcf, 0x9c, 0xf4, 0xbd, 0xd4, 0x1f, 0x85, 0x68, 0x78, 0x88, 0xd7,
	0xf2, 0xe1, 0x9e, 0x5c, 0xfe, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x37, 0x7a, 0xe6, 0x6d, 0x4d, 0x09,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateParams defines a governance operation for updating the parameters.
	//
	// Since: cosmos-sdk 0.47
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	RegisterFido2Credential(ctx context.Context, in *MsgRegisterFido2Credential, opts ...grpc.CallOption) (*MsgRegisterFido2CredentialResponse, error)
	UpdateToSmartAccountAuthenticationOnly(ctx context.Context, in *MsgMigrateToSmartAccountAuthentication, opts ...grpc.CallOption) (*MsgMigrateToSmartAccountAuthenticationResponse, error)
	RegisterCosmosCredential(ctx context.Context, in *MsgRegisterCosmosCredential, opts ...grpc.CallOption) (*MsgRegisterCosmosCredentialResponse, error)
	DeleteCredential(ctx context.Context, in *MsgDeleteCredential, opts ...grpc.CallOption) (*MsgDeleteCredentialResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/provenance.smartaccounts.v1.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RegisterFido2Credential(ctx context.Context, in *MsgRegisterFido2Credential, opts ...grpc.CallOption) (*MsgRegisterFido2CredentialResponse, error) {
	out := new(MsgRegisterFido2CredentialResponse)
	err := c.cc.Invoke(ctx, "/provenance.smartaccounts.v1.Msg/RegisterFido2Credential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateToSmartAccountAuthenticationOnly(ctx context.Context, in *MsgMigrateToSmartAccountAuthentication, opts ...grpc.CallOption) (*MsgMigrateToSmartAccountAuthenticationResponse, error) {
	out := new(MsgMigrateToSmartAccountAuthenticationResponse)
	err := c.cc.Invoke(ctx, "/provenance.smartaccounts.v1.Msg/UpdateToSmartAccountAuthenticationOnly", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RegisterCosmosCredential(ctx context.Context, in *MsgRegisterCosmosCredential, opts ...grpc.CallOption) (*MsgRegisterCosmosCredentialResponse, error) {
	out := new(MsgRegisterCosmosCredentialResponse)
	err := c.cc.Invoke(ctx, "/provenance.smartaccounts.v1.Msg/RegisterCosmosCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteCredential(ctx context.Context, in *MsgDeleteCredential, opts ...grpc.CallOption) (*MsgDeleteCredentialResponse, error) {
	out := new(MsgDeleteCredentialResponse)
	err := c.cc.Invoke(ctx, "/provenance.smartaccounts.v1.Msg/DeleteCredential", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateParams defines a governance operation for updating the parameters.
	//
	// Since: cosmos-sdk 0.47
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	RegisterFido2Credential(context.Context, *MsgRegisterFido2Credential) (*MsgRegisterFido2CredentialResponse, error)
	UpdateToSmartAccountAuthenticationOnly(context.Context, *MsgMigrateToSmartAccountAuthentication) (*MsgMigrateToSmartAccountAuthenticationResponse, error)
	RegisterCosmosCredential(context.Context, *MsgRegisterCosmosCredential) (*MsgRegisterCosmosCredentialResponse, error)
	DeleteCredential(context.Context, *MsgDeleteCredential) (*MsgDeleteCredentialResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) RegisterFido2Credential(ctx context.Context, req *MsgRegisterFido2Credential) (*MsgRegisterFido2CredentialResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterFido2Credential not implemented")
}
func (*UnimplementedMsgServer) UpdateToSmartAccountAuthenticationOnly(ctx context.Context, req *MsgMigrateToSmartAccountAuthentication) (*MsgMigrateToSmartAccountAuthenticationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateToSmartAccountAuthenticationOnly not implemented")
}
func (*UnimplementedMsgServer) RegisterCosmosCredential(ctx context.Context, req *MsgRegisterCosmosCredential) (*MsgRegisterCosmosCredentialResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterCosmosCredential not implemented")
}
func (*UnimplementedMsgServer) DeleteCredential(ctx context.Context, req *MsgDeleteCredential) (*MsgDeleteCredentialResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCredential not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.smartaccounts.v1.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RegisterFido2Credential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterFido2Credential)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterFido2Credential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.smartaccounts.v1.Msg/RegisterFido2Credential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterFido2Credential(ctx, req.(*MsgRegisterFido2Credential))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateToSmartAccountAuthenticationOnly_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMigrateToSmartAccountAuthentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateToSmartAccountAuthenticationOnly(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.smartaccounts.v1.Msg/UpdateToSmartAccountAuthenticationOnly",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateToSmartAccountAuthenticationOnly(ctx, req.(*MsgMigrateToSmartAccountAuthentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RegisterCosmosCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterCosmosCredential)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterCosmosCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.smartaccounts.v1.Msg/RegisterCosmosCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterCosmosCredential(ctx, req.(*MsgRegisterCosmosCredential))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteCredential)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.smartaccounts.v1.Msg/DeleteCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteCredential(ctx, req.(*MsgDeleteCredential))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "provenance.smartaccounts.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "RegisterFido2Credential",
			Handler:    _Msg_RegisterFido2Credential_Handler,
		},
		{
			MethodName: "UpdateToSmartAccountAuthenticationOnly",
			Handler:    _Msg_UpdateToSmartAccountAuthenticationOnly_Handler,
		},
		{
			MethodName: "RegisterCosmosCredential",
			Handler:    _Msg_RegisterCosmosCredential_Handler,
		},
		{
			MethodName: "DeleteCredential",
			Handler:    _Msg_DeleteCredential_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "provenance/smartaccounts/v1/tx.proto",
}

func (m *MsgRegisterFido2Credential) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterFido2Credential) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterFido2Credential) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.UserIdentifier) > 0 {
		i -= len(m.UserIdentifier)
		copy(dAtA[i:], m.UserIdentifier)
		i = encodeVarintTx(dAtA, i, uint64(len(m.UserIdentifier)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.EncodedAttestation) > 0 {
		i -= len(m.EncodedAttestation)
		copy(dAtA[i:], m.EncodedAttestation)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EncodedAttestation)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMigrateToSmartAccountAuthentication) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMigrateToSmartAccountAuthentication) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMigrateToSmartAccountAuthentication) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMigrateToSmartAccountAuthenticationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMigrateToSmartAccountAuthenticationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMigrateToSmartAccountAuthenticationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteCredential) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteCredential) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteCredential) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CredentialNumber != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CredentialNumber))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteCredentialResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteCredentialResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteCredentialResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CredentialNumber != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CredentialNumber))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRegisterCosmosCredential) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterCosmosCredential) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterCosmosCredential) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pubkey != nil {
		{
			size, err := m.Pubkey.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterFido2CredentialResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterFido2CredentialResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterFido2CredentialResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ProvenanceAccount != nil {
		{
			size, err := m.ProvenanceAccount.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.CredentialNumber != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CredentialNumber))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterCosmosCredentialResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterCosmosCredentialResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterCosmosCredentialResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CredentialNumber != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CredentialNumber))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgRegisterFido2Credential) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EncodedAttestation)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.UserIdentifier)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgMigrateToSmartAccountAuthentication) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgMigrateToSmartAccountAuthenticationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteCredential) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CredentialNumber != 0 {
		n += 1 + sovTx(uint64(m.CredentialNumber))
	}
	return n
}

func (m *MsgDeleteCredentialResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CredentialNumber != 0 {
		n += 1 + sovTx(uint64(m.CredentialNumber))
	}
	return n
}

func (m *MsgDeleteAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRegisterCosmosCredential) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Pubkey != nil {
		l = m.Pubkey.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterFido2CredentialResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CredentialNumber != 0 {
		n += 1 + sovTx(uint64(m.CredentialNumber))
	}
	if m.ProvenanceAccount != nil {
		l = m.ProvenanceAccount.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterCosmosCredentialResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CredentialNumber != 0 {
		n += 1 + sovTx(uint64(m.CredentialNumber))
	}
	return n
}

func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgRegisterFido2Credential) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterFido2Credential: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterFido2Credential: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EncodedAttestation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EncodedAttestation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserIdentifier", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserIdentifier = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMigrateToSmartAccountAuthentication) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMigrateToSmartAccountAuthentication: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMigrateToSmartAccountAuthentication: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMigrateToSmartAccountAuthenticationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMigrateToSmartAccountAuthenticationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMigrateToSmartAccountAuthenticationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteCredential) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteCredential: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteCredential: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CredentialNumber", wireType)
			}
			m.CredentialNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CredentialNumber |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteCredentialResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteCredentialResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteCredentialResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CredentialNumber", wireType)
			}
			m.CredentialNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CredentialNumber |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterCosmosCredential) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterCosmosCredential: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterCosmosCredential: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pubkey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pubkey == nil {
				m.Pubkey = &types.Any{}
			}
			if err := m.Pubkey.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterFido2CredentialResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterFido2CredentialResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterFido2CredentialResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CredentialNumber", wireType)
			}
			m.CredentialNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CredentialNumber |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProvenanceAccount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ProvenanceAccount == nil {
				m.ProvenanceAccount = &ProvenanceAccount{}
			}
			if err := m.ProvenanceAccount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterCosmosCredentialResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterCosmosCredentialResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterCosmosCredentialResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CredentialNumber", wireType)
			}
			m.CredentialNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CredentialNumber |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
