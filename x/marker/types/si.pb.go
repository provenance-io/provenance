// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: provenance/marker/v1/si.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// SIPrefix represents an International System of Units (SI) Prefix.
type SIPrefix int32

const (
	// 10^0    (none)
	SI_PREFIX_NONE SIPrefix = 0
	// 10^1    deka   da
	SI_PREFIX_DEKA SIPrefix = 1
	// 10^2    hecto   h
	SI_PREFIX_HECTO SIPrefix = 2
	// 10^3    kilo    k
	SI_PREFIX_KILO SIPrefix = 3
	// 10^6    mega    M
	SI_PREFIX_MEGA SIPrefix = 6
	// 10^9    giga    G
	SI_PREFIX_GIGA SIPrefix = 9
	// 10^12   tera    T
	SI_PREFIX_TERA SIPrefix = 12
	// 10^15   peta    P
	SI_PREFIX_PETA SIPrefix = 15
	// 10^18   exa     E
	SI_PREFIX_EXA SIPrefix = 18
	// 10^21   zetta   Z
	SI_PREFIX_ZETTA SIPrefix = 21
	// 10^24   yotta   Y
	SI_PREFIX_YOTTA SIPrefix = 24
	// 10^-1   deci    d
	SI_PREFIX_DECI SIPrefix = -1
	// 10^-2   centi   c
	SI_PREFIX_CENTI SIPrefix = -2
	// 10^-3   milli   m
	SI_PREFIX_MILLI SIPrefix = -3
	// 10^-6   micro   Âµ
	SI_PREFIX_MICRO SIPrefix = -6
	// 10^-9   nano    n
	SI_PREFIX_NANO SIPrefix = -9
	// 10^-12  pico    p
	SI_PREFIX_PICO SIPrefix = -12
	// 10^-15  femto   f
	SI_PREFIX_FEMTO SIPrefix = -15
	// 10^-18  atto    a
	SI_PREFIX_ATTO SIPrefix = -18
	// 10^-21  zepto   z
	SI_PREFIX_ZEPTO SIPrefix = -21
	// 10^-24  yocto   y
	SI_PREFIX_YOCTO SIPrefix = -24
)

var SIPrefix_name = map[int32]string{
	0:   "SI_PREFIX_NONE",
	1:   "SI_PREFIX_DEKA",
	2:   "SI_PREFIX_HECTO",
	3:   "SI_PREFIX_KILO",
	6:   "SI_PREFIX_MEGA",
	9:   "SI_PREFIX_GIGA",
	12:  "SI_PREFIX_TERA",
	15:  "SI_PREFIX_PETA",
	18:  "SI_PREFIX_EXA",
	21:  "SI_PREFIX_ZETTA",
	24:  "SI_PREFIX_YOTTA",
	-1:  "SI_PREFIX_DECI",
	-2:  "SI_PREFIX_CENTI",
	-3:  "SI_PREFIX_MILLI",
	-6:  "SI_PREFIX_MICRO",
	-9:  "SI_PREFIX_NANO",
	-12: "SI_PREFIX_PICO",
	-15: "SI_PREFIX_FEMTO",
	-18: "SI_PREFIX_ATTO",
	-21: "SI_PREFIX_ZEPTO",
	-24: "SI_PREFIX_YOCTO",
}

var SIPrefix_value = map[string]int32{
	"SI_PREFIX_NONE":  0,
	"SI_PREFIX_DEKA":  1,
	"SI_PREFIX_HECTO": 2,
	"SI_PREFIX_KILO":  3,
	"SI_PREFIX_MEGA":  6,
	"SI_PREFIX_GIGA":  9,
	"SI_PREFIX_TERA":  12,
	"SI_PREFIX_PETA":  15,
	"SI_PREFIX_EXA":   18,
	"SI_PREFIX_ZETTA": 21,
	"SI_PREFIX_YOTTA": 24,
	"SI_PREFIX_DECI":  -1,
	"SI_PREFIX_CENTI": -2,
	"SI_PREFIX_MILLI": -3,
	"SI_PREFIX_MICRO": -6,
	"SI_PREFIX_NANO":  -9,
	"SI_PREFIX_PICO":  -12,
	"SI_PREFIX_FEMTO": -15,
	"SI_PREFIX_ATTO":  -18,
	"SI_PREFIX_ZEPTO": -21,
	"SI_PREFIX_YOCTO": -24,
}

func (x SIPrefix) String() string {
	return proto.EnumName(SIPrefix_name, int32(x))
}

func (SIPrefix) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_22bfd0db7139ab62, []int{0}
}

func init() {
	proto.RegisterEnum("provenance.marker.v1.SIPrefix", SIPrefix_name, SIPrefix_value)
}

func init() { proto.RegisterFile("provenance/marker/v1/si.proto", fileDescriptor_22bfd0db7139ab62) }

var fileDescriptor_22bfd0db7139ab62 = []byte{
	// 371 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2d, 0x28, 0xca, 0x2f,
	0x4b, 0xcd, 0x4b, 0xcc, 0x4b, 0x4e, 0xd5, 0xcf, 0x4d, 0x2c, 0xca, 0x4e, 0x2d, 0xd2, 0x2f, 0x33,
	0xd4, 0x2f, 0xce, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x41, 0x48, 0xeb, 0x41, 0xa4,
	0xf5, 0xca, 0x0c, 0xa5, 0x44, 0xd2, 0xf3, 0xd3, 0xf3, 0xc1, 0x0a, 0xf4, 0x41, 0x2c, 0x88, 0x5a,
	0xad, 0x69, 0x2c, 0x5c, 0x1c, 0xc1, 0x9e, 0x01, 0x45, 0xa9, 0x69, 0x99, 0x15, 0x42, 0x42, 0x5c,
	0x7c, 0xc1, 0x9e, 0xf1, 0x01, 0x41, 0xae, 0x6e, 0x9e, 0x11, 0xf1, 0x7e, 0xfe, 0x7e, 0xae, 0x02,
	0x0c, 0xa8, 0x62, 0x2e, 0xae, 0xde, 0x8e, 0x02, 0x8c, 0x42, 0xc2, 0x5c, 0xfc, 0x08, 0x31, 0x0f,
	0x57, 0xe7, 0x10, 0x7f, 0x01, 0x26, 0x54, 0x85, 0xde, 0x9e, 0x3e, 0xfe, 0x02, 0xcc, 0xa8, 0x62,
	0xbe, 0xae, 0xee, 0x8e, 0x02, 0x6c, 0xa8, 0x62, 0xee, 0x9e, 0xee, 0x8e, 0x02, 0x9c, 0xa8, 0x62,
	0x21, 0xae, 0x41, 0x8e, 0x02, 0x3c, 0xa8, 0x62, 0x01, 0xae, 0x21, 0x8e, 0x02, 0xfc, 0x42, 0x82,
	0x5c, 0xbc, 0x08, 0x31, 0xd7, 0x08, 0x47, 0x01, 0x21, 0x54, 0xb7, 0x44, 0xb9, 0x86, 0x84, 0x38,
	0x0a, 0x88, 0xa2, 0x0a, 0x46, 0xfa, 0x83, 0x04, 0x25, 0x84, 0xa4, 0x51, 0x7d, 0xe2, 0xec, 0x29,
	0xf0, 0x1f, 0x06, 0x18, 0x85, 0x64, 0x90, 0x75, 0x38, 0xbb, 0xfa, 0x85, 0x78, 0x0a, 0xfc, 0xc3,
	0x21, 0xeb, 0xeb, 0xe9, 0xe3, 0xe3, 0x29, 0xf0, 0x17, 0xa7, 0xac, 0x73, 0x90, 0xbf, 0xc0, 0x2f,
	0x84, 0x2c, 0x8a, 0xb5, 0x7e, 0x8e, 0x7e, 0xfe, 0x02, 0xdf, 0x71, 0x48, 0x06, 0x78, 0x3a, 0xfb,
	0x0b, 0x7c, 0xc1, 0x61, 0xae, 0x9b, 0xab, 0x6f, 0x88, 0xbf, 0xc0, 0x47, 0x1c, 0x5a, 0x1d, 0x43,
	0x42, 0xfc, 0x05, 0xde, 0xe1, 0xd0, 0x1a, 0xe5, 0x1a, 0x10, 0xe2, 0x2f, 0xf0, 0x1a, 0x87, 0x6c,
	0xa4, 0x3f, 0x28, 0xfe, 0x5e, 0xc0, 0x65, 0xa5, 0x58, 0x3a, 0x16, 0xcb, 0x31, 0x38, 0xa5, 0x9f,
	0x78, 0x24, 0xc7, 0x78, 0xe1, 0x91, 0x1c, 0xe3, 0x83, 0x47, 0x72, 0x8c, 0x13, 0x1e, 0xcb, 0x31,
	0x5c, 0x78, 0x2c, 0xc7, 0x70, 0xe3, 0xb1, 0x1c, 0x03, 0x97, 0x78, 0x26, 0x38, 0xf1, 0x60, 0xa4,
	0xb0, 0x00, 0xc6, 0x28, 0xa3, 0xf4, 0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0x7d,
	0x84, 0x12, 0xdd, 0xcc, 0x7c, 0x24, 0x9e, 0x7e, 0x05, 0x2c, 0xcd, 0x96, 0x54, 0x16, 0xa4, 0x16,
	0x27, 0xb1, 0x81, 0x13, 0xa2, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x46, 0x91, 0x1a, 0xfe, 0xd5,
	0x02, 0x00, 0x00,
}
