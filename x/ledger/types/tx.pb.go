// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: provenance/ledger/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgCreateRequest represents a request to create a new ledger.
type MsgCreateRequest struct {
	// The ledger to create.
	Ledger *Ledger `protobuf:"bytes,1,opt,name=ledger,proto3" json:"ledger,omitempty"`
	// The authority address that can create ledgers.
	Authority string `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
}

func (m *MsgCreateRequest) Reset()         { *m = MsgCreateRequest{} }
func (m *MsgCreateRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRequest) ProtoMessage()    {}
func (*MsgCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{0}
}
func (m *MsgCreateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRequest.Merge(m, src)
}
func (m *MsgCreateRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRequest proto.InternalMessageInfo

func (m *MsgCreateRequest) GetLedger() *Ledger {
	if m != nil {
		return m.Ledger
	}
	return nil
}

func (m *MsgCreateRequest) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

// MsgCreateResponse represents the response from creating a ledger.
type MsgCreateResponse struct {
}

func (m *MsgCreateResponse) Reset()         { *m = MsgCreateResponse{} }
func (m *MsgCreateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateResponse) ProtoMessage()    {}
func (*MsgCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{1}
}
func (m *MsgCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateResponse.Merge(m, src)
}
func (m *MsgCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateResponse proto.InternalMessageInfo

// MsgUpdateStatusRequest represents a request to update the status of a ledger.
type MsgUpdateStatusRequest struct {
	// The ledger key identifying the ledger to update.
	Key *LedgerKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The authority address that can update ledgers.
	Authority string `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
	// The new status type ID for the ledger.
	StatusTypeId int32 `protobuf:"varint,3,opt,name=status_type_id,json=statusTypeId,proto3" json:"status_type_id,omitempty"`
}

func (m *MsgUpdateStatusRequest) Reset()         { *m = MsgUpdateStatusRequest{} }
func (m *MsgUpdateStatusRequest) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateStatusRequest) ProtoMessage()    {}
func (*MsgUpdateStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{2}
}
func (m *MsgUpdateStatusRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateStatusRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateStatusRequest.Merge(m, src)
}
func (m *MsgUpdateStatusRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateStatusRequest proto.InternalMessageInfo

func (m *MsgUpdateStatusRequest) GetKey() *LedgerKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *MsgUpdateStatusRequest) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateStatusRequest) GetStatusTypeId() int32 {
	if m != nil {
		return m.StatusTypeId
	}
	return 0
}

// MsgUpdateStatusResponse represents the response from updating a ledger status.
type MsgUpdateStatusResponse struct {
}

func (m *MsgUpdateStatusResponse) Reset()         { *m = MsgUpdateStatusResponse{} }
func (m *MsgUpdateStatusResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateStatusResponse) ProtoMessage()    {}
func (*MsgUpdateStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{3}
}
func (m *MsgUpdateStatusResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateStatusResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateStatusResponse.Merge(m, src)
}
func (m *MsgUpdateStatusResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateStatusResponse proto.InternalMessageInfo

// MsgUpdateInterestRateRequest represents a request to update the interest rate configuration of a ledger.
type MsgUpdateInterestRateRequest struct {
	// The ledger key identifying the ledger to update.
	Key *LedgerKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The authority address that can update ledgers.
	Authority string `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
	// The new interest rate (10000000 = 10.000000%) - 6 decimal places.
	InterestRate int32 `protobuf:"varint,3,opt,name=interest_rate,json=interestRate,proto3" json:"interest_rate,omitempty"`
	// The day count convention for interest calculations.
	InterestDayCount DayCount `protobuf:"varint,4,opt,name=interest_day_count,json=interestDayCount,proto3,enum=provenance.ledger.v1.DayCount" json:"interest_day_count,omitempty"`
	// The interest accrual method.
	InterestAccrual InterestAccrual `protobuf:"varint,5,opt,name=interest_accrual,json=interestAccrual,proto3,enum=provenance.ledger.v1.InterestAccrual" json:"interest_accrual,omitempty"`
}

func (m *MsgUpdateInterestRateRequest) Reset()         { *m = MsgUpdateInterestRateRequest{} }
func (m *MsgUpdateInterestRateRequest) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateInterestRateRequest) ProtoMessage()    {}
func (*MsgUpdateInterestRateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{4}
}
func (m *MsgUpdateInterestRateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateInterestRateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateInterestRateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateInterestRateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateInterestRateRequest.Merge(m, src)
}
func (m *MsgUpdateInterestRateRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateInterestRateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateInterestRateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateInterestRateRequest proto.InternalMessageInfo

func (m *MsgUpdateInterestRateRequest) GetKey() *LedgerKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *MsgUpdateInterestRateRequest) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateInterestRateRequest) GetInterestRate() int32 {
	if m != nil {
		return m.InterestRate
	}
	return 0
}

func (m *MsgUpdateInterestRateRequest) GetInterestDayCount() DayCount {
	if m != nil {
		return m.InterestDayCount
	}
	return DAY_COUNT_UNSPECIFIED
}

func (m *MsgUpdateInterestRateRequest) GetInterestAccrual() InterestAccrual {
	if m != nil {
		return m.InterestAccrual
	}
	return INTEREST_ACCRUAL_UNSPECIFIED
}

// MsgUpdateInterestRateResponse represents the response from updating a ledger interest rate.
type MsgUpdateInterestRateResponse struct {
}

func (m *MsgUpdateInterestRateResponse) Reset()         { *m = MsgUpdateInterestRateResponse{} }
func (m *MsgUpdateInterestRateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateInterestRateResponse) ProtoMessage()    {}
func (*MsgUpdateInterestRateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{5}
}
func (m *MsgUpdateInterestRateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateInterestRateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateInterestRateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateInterestRateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateInterestRateResponse.Merge(m, src)
}
func (m *MsgUpdateInterestRateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateInterestRateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateInterestRateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateInterestRateResponse proto.InternalMessageInfo

// MsgUpdatePaymentRequest represents a request to update payment configuration of a ledger.
type MsgUpdatePaymentRequest struct {
	// The ledger key identifying the ledger to update.
	Key *LedgerKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The authority address that can update ledgers.
	Authority string `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
	// The next payment amount.
	NextPmtAmt int64 `protobuf:"varint,3,opt,name=next_pmt_amt,json=nextPmtAmt,proto3" json:"next_pmt_amt,omitempty"`
	// The next payment date (days since epoch).
	NextPmtDate int32 `protobuf:"varint,4,opt,name=next_pmt_date,json=nextPmtDate,proto3" json:"next_pmt_date,omitempty"`
	// The payment frequency.
	PaymentFrequency PaymentFrequency `protobuf:"varint,5,opt,name=payment_frequency,json=paymentFrequency,proto3,enum=provenance.ledger.v1.PaymentFrequency" json:"payment_frequency,omitempty"`
}

func (m *MsgUpdatePaymentRequest) Reset()         { *m = MsgUpdatePaymentRequest{} }
func (m *MsgUpdatePaymentRequest) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePaymentRequest) ProtoMessage()    {}
func (*MsgUpdatePaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{6}
}
func (m *MsgUpdatePaymentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePaymentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePaymentRequest.Merge(m, src)
}
func (m *MsgUpdatePaymentRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePaymentRequest proto.InternalMessageInfo

func (m *MsgUpdatePaymentRequest) GetKey() *LedgerKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *MsgUpdatePaymentRequest) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdatePaymentRequest) GetNextPmtAmt() int64 {
	if m != nil {
		return m.NextPmtAmt
	}
	return 0
}

func (m *MsgUpdatePaymentRequest) GetNextPmtDate() int32 {
	if m != nil {
		return m.NextPmtDate
	}
	return 0
}

func (m *MsgUpdatePaymentRequest) GetPaymentFrequency() PaymentFrequency {
	if m != nil {
		return m.PaymentFrequency
	}
	return PAYMENT_FREQUENCY_UNSPECIFIED
}

// MsgUpdatePaymentResponse represents the response from updating a ledger payment configuration.
type MsgUpdatePaymentResponse struct {
}

func (m *MsgUpdatePaymentResponse) Reset()         { *m = MsgUpdatePaymentResponse{} }
func (m *MsgUpdatePaymentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePaymentResponse) ProtoMessage()    {}
func (*MsgUpdatePaymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{7}
}
func (m *MsgUpdatePaymentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePaymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePaymentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePaymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePaymentResponse.Merge(m, src)
}
func (m *MsgUpdatePaymentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePaymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePaymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePaymentResponse proto.InternalMessageInfo

// MsgUpdateMaturityDateRequest represents a request to update the maturity date of a ledger.
type MsgUpdateMaturityDateRequest struct {
	// The ledger key identifying the ledger to update.
	Key *LedgerKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The authority address that can update ledgers.
	Authority string `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
	// The new maturity date (days since epoch).
	MaturityDate int32 `protobuf:"varint,3,opt,name=maturity_date,json=maturityDate,proto3" json:"maturity_date,omitempty"`
}

func (m *MsgUpdateMaturityDateRequest) Reset()         { *m = MsgUpdateMaturityDateRequest{} }
func (m *MsgUpdateMaturityDateRequest) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMaturityDateRequest) ProtoMessage()    {}
func (*MsgUpdateMaturityDateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{8}
}
func (m *MsgUpdateMaturityDateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMaturityDateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMaturityDateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMaturityDateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMaturityDateRequest.Merge(m, src)
}
func (m *MsgUpdateMaturityDateRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMaturityDateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMaturityDateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMaturityDateRequest proto.InternalMessageInfo

func (m *MsgUpdateMaturityDateRequest) GetKey() *LedgerKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *MsgUpdateMaturityDateRequest) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateMaturityDateRequest) GetMaturityDate() int32 {
	if m != nil {
		return m.MaturityDate
	}
	return 0
}

// MsgUpdateMaturityDateResponse represents the response from updating a ledger maturity date.
type MsgUpdateMaturityDateResponse struct {
}

func (m *MsgUpdateMaturityDateResponse) Reset()         { *m = MsgUpdateMaturityDateResponse{} }
func (m *MsgUpdateMaturityDateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMaturityDateResponse) ProtoMessage()    {}
func (*MsgUpdateMaturityDateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{9}
}
func (m *MsgUpdateMaturityDateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMaturityDateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMaturityDateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMaturityDateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMaturityDateResponse.Merge(m, src)
}
func (m *MsgUpdateMaturityDateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMaturityDateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMaturityDateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMaturityDateResponse proto.InternalMessageInfo

// MsgAppendRequest represents a request to append entries to a ledger.
type MsgAppendRequest struct {
	// The ledger key identifying the ledger to append to.
	Key *LedgerKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The ledger entries to append.
	Entries []*LedgerEntry `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	// The authority address that can append to ledgers.
	Authority string `protobuf:"bytes,3,opt,name=authority,proto3" json:"authority,omitempty"`
}

func (m *MsgAppendRequest) Reset()         { *m = MsgAppendRequest{} }
func (m *MsgAppendRequest) String() string { return proto.CompactTextString(m) }
func (*MsgAppendRequest) ProtoMessage()    {}
func (*MsgAppendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{10}
}
func (m *MsgAppendRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAppendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAppendRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAppendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAppendRequest.Merge(m, src)
}
func (m *MsgAppendRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgAppendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAppendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAppendRequest proto.InternalMessageInfo

func (m *MsgAppendRequest) GetKey() *LedgerKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *MsgAppendRequest) GetEntries() []*LedgerEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *MsgAppendRequest) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

// MsgAppendResponse represents the response from appending entries to a ledger.
type MsgAppendResponse struct {
}

func (m *MsgAppendResponse) Reset()         { *m = MsgAppendResponse{} }
func (m *MsgAppendResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAppendResponse) ProtoMessage()    {}
func (*MsgAppendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{11}
}
func (m *MsgAppendResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAppendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAppendResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAppendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAppendResponse.Merge(m, src)
}
func (m *MsgAppendResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAppendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAppendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAppendResponse proto.InternalMessageInfo

// MsgUpdateBalancesRequest represents a request to update balances for a ledger entry.
type MsgUpdateBalancesRequest struct {
	// The ledger key identifying the ledger to update.
	Key *LedgerKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The authority address that can update balances.
	Authority string `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
	// The correlation ID of the entry to update.
	CorrelationId string `protobuf:"bytes,3,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	// The applied amounts to be updated.
	AppliedAmounts []*LedgerBucketAmount `protobuf:"bytes,4,rep,name=applied_amounts,json=appliedAmounts,proto3" json:"applied_amounts,omitempty"`
	// The bucket balances to update.
	BalanceAmounts []*BucketBalance `protobuf:"bytes,5,rep,name=balance_amounts,json=balanceAmounts,proto3" json:"balance_amounts,omitempty"`
}

func (m *MsgUpdateBalancesRequest) Reset()         { *m = MsgUpdateBalancesRequest{} }
func (m *MsgUpdateBalancesRequest) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateBalancesRequest) ProtoMessage()    {}
func (*MsgUpdateBalancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{12}
}
func (m *MsgUpdateBalancesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateBalancesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateBalancesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateBalancesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateBalancesRequest.Merge(m, src)
}
func (m *MsgUpdateBalancesRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateBalancesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateBalancesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateBalancesRequest proto.InternalMessageInfo

func (m *MsgUpdateBalancesRequest) GetKey() *LedgerKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *MsgUpdateBalancesRequest) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateBalancesRequest) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *MsgUpdateBalancesRequest) GetAppliedAmounts() []*LedgerBucketAmount {
	if m != nil {
		return m.AppliedAmounts
	}
	return nil
}

func (m *MsgUpdateBalancesRequest) GetBalanceAmounts() []*BucketBalance {
	if m != nil {
		return m.BalanceAmounts
	}
	return nil
}

// MsgUpdateBalancesResponse represents the response from updating ledger balances.
type MsgUpdateBalancesResponse struct {
}

func (m *MsgUpdateBalancesResponse) Reset()         { *m = MsgUpdateBalancesResponse{} }
func (m *MsgUpdateBalancesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateBalancesResponse) ProtoMessage()    {}
func (*MsgUpdateBalancesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{13}
}
func (m *MsgUpdateBalancesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateBalancesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateBalancesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateBalancesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateBalancesResponse.Merge(m, src)
}
func (m *MsgUpdateBalancesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateBalancesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateBalancesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateBalancesResponse proto.InternalMessageInfo

// MsgTransferFundsWithSettlementRequest represents a request to transfer funds with settlement instructions.
type MsgTransferFundsWithSettlementRequest struct {
	// The authority address that can transfer funds.
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// The fund transfers with settlement instructions.
	Transfers []*FundTransferWithSettlement `protobuf:"bytes,2,rep,name=transfers,proto3" json:"transfers,omitempty"`
}

func (m *MsgTransferFundsWithSettlementRequest) Reset()         { *m = MsgTransferFundsWithSettlementRequest{} }
func (m *MsgTransferFundsWithSettlementRequest) String() string { return proto.CompactTextString(m) }
func (*MsgTransferFundsWithSettlementRequest) ProtoMessage()    {}
func (*MsgTransferFundsWithSettlementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{14}
}
func (m *MsgTransferFundsWithSettlementRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransferFundsWithSettlementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransferFundsWithSettlementRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransferFundsWithSettlementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransferFundsWithSettlementRequest.Merge(m, src)
}
func (m *MsgTransferFundsWithSettlementRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransferFundsWithSettlementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransferFundsWithSettlementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransferFundsWithSettlementRequest proto.InternalMessageInfo

func (m *MsgTransferFundsWithSettlementRequest) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgTransferFundsWithSettlementRequest) GetTransfers() []*FundTransferWithSettlement {
	if m != nil {
		return m.Transfers
	}
	return nil
}

// MsgTransferFundsWithSettlementResponse represents the response from transferring funds with settlement.
type MsgTransferFundsWithSettlementResponse struct {
}

func (m *MsgTransferFundsWithSettlementResponse) Reset() {
	*m = MsgTransferFundsWithSettlementResponse{}
}
func (m *MsgTransferFundsWithSettlementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgTransferFundsWithSettlementResponse) ProtoMessage()    {}
func (*MsgTransferFundsWithSettlementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{15}
}
func (m *MsgTransferFundsWithSettlementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransferFundsWithSettlementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransferFundsWithSettlementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransferFundsWithSettlementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransferFundsWithSettlementResponse.Merge(m, src)
}
func (m *MsgTransferFundsWithSettlementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransferFundsWithSettlementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransferFundsWithSettlementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransferFundsWithSettlementResponse proto.InternalMessageInfo

// MsgDestroyRequest represents a request to destroy a ledger.
type MsgDestroyRequest struct {
	// The ledger key identifying the ledger to destroy.
	Key *LedgerKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The authority address that can destroy ledgers.
	Authority string `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
}

func (m *MsgDestroyRequest) Reset()         { *m = MsgDestroyRequest{} }
func (m *MsgDestroyRequest) String() string { return proto.CompactTextString(m) }
func (*MsgDestroyRequest) ProtoMessage()    {}
func (*MsgDestroyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{16}
}
func (m *MsgDestroyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDestroyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDestroyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDestroyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDestroyRequest.Merge(m, src)
}
func (m *MsgDestroyRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgDestroyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDestroyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDestroyRequest proto.InternalMessageInfo

func (m *MsgDestroyRequest) GetKey() *LedgerKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *MsgDestroyRequest) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

// MsgDestroyResponse represents the response from destroying a ledger.
type MsgDestroyResponse struct {
}

func (m *MsgDestroyResponse) Reset()         { *m = MsgDestroyResponse{} }
func (m *MsgDestroyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDestroyResponse) ProtoMessage()    {}
func (*MsgDestroyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{17}
}
func (m *MsgDestroyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDestroyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDestroyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDestroyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDestroyResponse.Merge(m, src)
}
func (m *MsgDestroyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDestroyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDestroyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDestroyResponse proto.InternalMessageInfo

// MsgCreateClassRequest represents a request to create a new ledger class.
type MsgCreateClassRequest struct {
	// The ledger class to create.
	LedgerClass *LedgerClass `protobuf:"bytes,1,opt,name=ledger_class,json=ledgerClass,proto3" json:"ledger_class,omitempty"`
	// The authority address that can create ledger classes.
	Authority string `protobuf:"bytes,2,opt,name=authority,proto3" json:"authority,omitempty"`
}

func (m *MsgCreateClassRequest) Reset()         { *m = MsgCreateClassRequest{} }
func (m *MsgCreateClassRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateClassRequest) ProtoMessage()    {}
func (*MsgCreateClassRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{18}
}
func (m *MsgCreateClassRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateClassRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateClassRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateClassRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateClassRequest.Merge(m, src)
}
func (m *MsgCreateClassRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateClassRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateClassRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateClassRequest proto.InternalMessageInfo

func (m *MsgCreateClassRequest) GetLedgerClass() *LedgerClass {
	if m != nil {
		return m.LedgerClass
	}
	return nil
}

func (m *MsgCreateClassRequest) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

// MsgCreateClassResponse represents the response from creating a ledger class.
type MsgCreateClassResponse struct {
}

func (m *MsgCreateClassResponse) Reset()         { *m = MsgCreateClassResponse{} }
func (m *MsgCreateClassResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateClassResponse) ProtoMessage()    {}
func (*MsgCreateClassResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{19}
}
func (m *MsgCreateClassResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateClassResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateClassResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateClassResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateClassResponse.Merge(m, src)
}
func (m *MsgCreateClassResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateClassResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateClassResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateClassResponse proto.InternalMessageInfo

// MsgAddClassStatusTypeRequest represents a request to add a status type to a ledger class.
type MsgAddClassStatusTypeRequest struct {
	// The ledger class ID to add the status type to.
	LedgerClassId string `protobuf:"bytes,1,opt,name=ledger_class_id,json=ledgerClassId,proto3" json:"ledger_class_id,omitempty"`
	// The status type to add.
	StatusType *LedgerClassStatusType `protobuf:"bytes,2,opt,name=status_type,json=statusType,proto3" json:"status_type,omitempty"`
	// The authority address that can add status types.
	Authority string `protobuf:"bytes,3,opt,name=authority,proto3" json:"authority,omitempty"`
}

func (m *MsgAddClassStatusTypeRequest) Reset()         { *m = MsgAddClassStatusTypeRequest{} }
func (m *MsgAddClassStatusTypeRequest) String() string { return proto.CompactTextString(m) }
func (*MsgAddClassStatusTypeRequest) ProtoMessage()    {}
func (*MsgAddClassStatusTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{20}
}
func (m *MsgAddClassStatusTypeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddClassStatusTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddClassStatusTypeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddClassStatusTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddClassStatusTypeRequest.Merge(m, src)
}
func (m *MsgAddClassStatusTypeRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddClassStatusTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddClassStatusTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddClassStatusTypeRequest proto.InternalMessageInfo

func (m *MsgAddClassStatusTypeRequest) GetLedgerClassId() string {
	if m != nil {
		return m.LedgerClassId
	}
	return ""
}

func (m *MsgAddClassStatusTypeRequest) GetStatusType() *LedgerClassStatusType {
	if m != nil {
		return m.StatusType
	}
	return nil
}

func (m *MsgAddClassStatusTypeRequest) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

// MsgAddClassStatusTypeResponse represents the response from adding a status type.
type MsgAddClassStatusTypeResponse struct {
}

func (m *MsgAddClassStatusTypeResponse) Reset()         { *m = MsgAddClassStatusTypeResponse{} }
func (m *MsgAddClassStatusTypeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddClassStatusTypeResponse) ProtoMessage()    {}
func (*MsgAddClassStatusTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{21}
}
func (m *MsgAddClassStatusTypeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddClassStatusTypeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddClassStatusTypeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddClassStatusTypeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddClassStatusTypeResponse.Merge(m, src)
}
func (m *MsgAddClassStatusTypeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddClassStatusTypeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddClassStatusTypeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddClassStatusTypeResponse proto.InternalMessageInfo

// MsgAddClassEntryTypeRequest represents a request to add an entry type to a ledger class.
type MsgAddClassEntryTypeRequest struct {
	// The ledger class ID to add the entry type to.
	LedgerClassId string `protobuf:"bytes,1,opt,name=ledger_class_id,json=ledgerClassId,proto3" json:"ledger_class_id,omitempty"`
	// The entry type to add.
	EntryType *LedgerClassEntryType `protobuf:"bytes,2,opt,name=entry_type,json=entryType,proto3" json:"entry_type,omitempty"`
	// The authority address that can add entry types.
	Authority string `protobuf:"bytes,3,opt,name=authority,proto3" json:"authority,omitempty"`
}

func (m *MsgAddClassEntryTypeRequest) Reset()         { *m = MsgAddClassEntryTypeRequest{} }
func (m *MsgAddClassEntryTypeRequest) String() string { return proto.CompactTextString(m) }
func (*MsgAddClassEntryTypeRequest) ProtoMessage()    {}
func (*MsgAddClassEntryTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{22}
}
func (m *MsgAddClassEntryTypeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddClassEntryTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddClassEntryTypeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddClassEntryTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddClassEntryTypeRequest.Merge(m, src)
}
func (m *MsgAddClassEntryTypeRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddClassEntryTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddClassEntryTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddClassEntryTypeRequest proto.InternalMessageInfo

func (m *MsgAddClassEntryTypeRequest) GetLedgerClassId() string {
	if m != nil {
		return m.LedgerClassId
	}
	return ""
}

func (m *MsgAddClassEntryTypeRequest) GetEntryType() *LedgerClassEntryType {
	if m != nil {
		return m.EntryType
	}
	return nil
}

func (m *MsgAddClassEntryTypeRequest) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

// MsgAddClassEntryTypeResponse represents the response from adding an entry type.
type MsgAddClassEntryTypeResponse struct {
}

func (m *MsgAddClassEntryTypeResponse) Reset()         { *m = MsgAddClassEntryTypeResponse{} }
func (m *MsgAddClassEntryTypeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddClassEntryTypeResponse) ProtoMessage()    {}
func (*MsgAddClassEntryTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{23}
}
func (m *MsgAddClassEntryTypeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddClassEntryTypeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddClassEntryTypeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddClassEntryTypeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddClassEntryTypeResponse.Merge(m, src)
}
func (m *MsgAddClassEntryTypeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddClassEntryTypeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddClassEntryTypeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddClassEntryTypeResponse proto.InternalMessageInfo

// MsgAddClassBucketTypeRequest represents a request to add a bucket type to a ledger class.
type MsgAddClassBucketTypeRequest struct {
	// The ledger class ID to add the bucket type to.
	LedgerClassId string `protobuf:"bytes,1,opt,name=ledger_class_id,json=ledgerClassId,proto3" json:"ledger_class_id,omitempty"`
	// The bucket type to add.
	BucketType *LedgerClassBucketType `protobuf:"bytes,2,opt,name=bucket_type,json=bucketType,proto3" json:"bucket_type,omitempty"`
	// The authority address that can add bucket types.
	Authority string `protobuf:"bytes,3,opt,name=authority,proto3" json:"authority,omitempty"`
}

func (m *MsgAddClassBucketTypeRequest) Reset()         { *m = MsgAddClassBucketTypeRequest{} }
func (m *MsgAddClassBucketTypeRequest) String() string { return proto.CompactTextString(m) }
func (*MsgAddClassBucketTypeRequest) ProtoMessage()    {}
func (*MsgAddClassBucketTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{24}
}
func (m *MsgAddClassBucketTypeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddClassBucketTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddClassBucketTypeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddClassBucketTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddClassBucketTypeRequest.Merge(m, src)
}
func (m *MsgAddClassBucketTypeRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddClassBucketTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddClassBucketTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddClassBucketTypeRequest proto.InternalMessageInfo

func (m *MsgAddClassBucketTypeRequest) GetLedgerClassId() string {
	if m != nil {
		return m.LedgerClassId
	}
	return ""
}

func (m *MsgAddClassBucketTypeRequest) GetBucketType() *LedgerClassBucketType {
	if m != nil {
		return m.BucketType
	}
	return nil
}

func (m *MsgAddClassBucketTypeRequest) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

// MsgAddClassBucketTypeResponse represents the response from adding a bucket type.
type MsgAddClassBucketTypeResponse struct {
}

func (m *MsgAddClassBucketTypeResponse) Reset()         { *m = MsgAddClassBucketTypeResponse{} }
func (m *MsgAddClassBucketTypeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddClassBucketTypeResponse) ProtoMessage()    {}
func (*MsgAddClassBucketTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{25}
}
func (m *MsgAddClassBucketTypeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddClassBucketTypeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddClassBucketTypeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddClassBucketTypeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddClassBucketTypeResponse.Merge(m, src)
}
func (m *MsgAddClassBucketTypeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddClassBucketTypeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddClassBucketTypeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddClassBucketTypeResponse proto.InternalMessageInfo

// MsgBulkImportRequest represents a request to bulk import ledger data from genesis state.
type MsgBulkImportRequest struct {
	// The authority address that can perform bulk imports.
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// The genesis state containing the ledger data to import.
	GenesisState *GenesisState `protobuf:"bytes,2,opt,name=genesis_state,json=genesisState,proto3" json:"genesis_state,omitempty"`
}

func (m *MsgBulkImportRequest) Reset()         { *m = MsgBulkImportRequest{} }
func (m *MsgBulkImportRequest) String() string { return proto.CompactTextString(m) }
func (*MsgBulkImportRequest) ProtoMessage()    {}
func (*MsgBulkImportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{26}
}
func (m *MsgBulkImportRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBulkImportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBulkImportRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBulkImportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBulkImportRequest.Merge(m, src)
}
func (m *MsgBulkImportRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgBulkImportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBulkImportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBulkImportRequest proto.InternalMessageInfo

func (m *MsgBulkImportRequest) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgBulkImportRequest) GetGenesisState() *GenesisState {
	if m != nil {
		return m.GenesisState
	}
	return nil
}

// MsgBulkImportResponse represents the response from bulk importing ledger data from genesis state.
type MsgBulkImportResponse struct {
}

func (m *MsgBulkImportResponse) Reset()         { *m = MsgBulkImportResponse{} }
func (m *MsgBulkImportResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBulkImportResponse) ProtoMessage()    {}
func (*MsgBulkImportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c124d2e9569f84d, []int{27}
}
func (m *MsgBulkImportResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBulkImportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBulkImportResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBulkImportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBulkImportResponse.Merge(m, src)
}
func (m *MsgBulkImportResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBulkImportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBulkImportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBulkImportResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateRequest)(nil), "provenance.ledger.v1.MsgCreateRequest")
	proto.RegisterType((*MsgCreateResponse)(nil), "provenance.ledger.v1.MsgCreateResponse")
	proto.RegisterType((*MsgUpdateStatusRequest)(nil), "provenance.ledger.v1.MsgUpdateStatusRequest")
	proto.RegisterType((*MsgUpdateStatusResponse)(nil), "provenance.ledger.v1.MsgUpdateStatusResponse")
	proto.RegisterType((*MsgUpdateInterestRateRequest)(nil), "provenance.ledger.v1.MsgUpdateInterestRateRequest")
	proto.RegisterType((*MsgUpdateInterestRateResponse)(nil), "provenance.ledger.v1.MsgUpdateInterestRateResponse")
	proto.RegisterType((*MsgUpdatePaymentRequest)(nil), "provenance.ledger.v1.MsgUpdatePaymentRequest")
	proto.RegisterType((*MsgUpdatePaymentResponse)(nil), "provenance.ledger.v1.MsgUpdatePaymentResponse")
	proto.RegisterType((*MsgUpdateMaturityDateRequest)(nil), "provenance.ledger.v1.MsgUpdateMaturityDateRequest")
	proto.RegisterType((*MsgUpdateMaturityDateResponse)(nil), "provenance.ledger.v1.MsgUpdateMaturityDateResponse")
	proto.RegisterType((*MsgAppendRequest)(nil), "provenance.ledger.v1.MsgAppendRequest")
	proto.RegisterType((*MsgAppendResponse)(nil), "provenance.ledger.v1.MsgAppendResponse")
	proto.RegisterType((*MsgUpdateBalancesRequest)(nil), "provenance.ledger.v1.MsgUpdateBalancesRequest")
	proto.RegisterType((*MsgUpdateBalancesResponse)(nil), "provenance.ledger.v1.MsgUpdateBalancesResponse")
	proto.RegisterType((*MsgTransferFundsWithSettlementRequest)(nil), "provenance.ledger.v1.MsgTransferFundsWithSettlementRequest")
	proto.RegisterType((*MsgTransferFundsWithSettlementResponse)(nil), "provenance.ledger.v1.MsgTransferFundsWithSettlementResponse")
	proto.RegisterType((*MsgDestroyRequest)(nil), "provenance.ledger.v1.MsgDestroyRequest")
	proto.RegisterType((*MsgDestroyResponse)(nil), "provenance.ledger.v1.MsgDestroyResponse")
	proto.RegisterType((*MsgCreateClassRequest)(nil), "provenance.ledger.v1.MsgCreateClassRequest")
	proto.RegisterType((*MsgCreateClassResponse)(nil), "provenance.ledger.v1.MsgCreateClassResponse")
	proto.RegisterType((*MsgAddClassStatusTypeRequest)(nil), "provenance.ledger.v1.MsgAddClassStatusTypeRequest")
	proto.RegisterType((*MsgAddClassStatusTypeResponse)(nil), "provenance.ledger.v1.MsgAddClassStatusTypeResponse")
	proto.RegisterType((*MsgAddClassEntryTypeRequest)(nil), "provenance.ledger.v1.MsgAddClassEntryTypeRequest")
	proto.RegisterType((*MsgAddClassEntryTypeResponse)(nil), "provenance.ledger.v1.MsgAddClassEntryTypeResponse")
	proto.RegisterType((*MsgAddClassBucketTypeRequest)(nil), "provenance.ledger.v1.MsgAddClassBucketTypeRequest")
	proto.RegisterType((*MsgAddClassBucketTypeResponse)(nil), "provenance.ledger.v1.MsgAddClassBucketTypeResponse")
	proto.RegisterType((*MsgBulkImportRequest)(nil), "provenance.ledger.v1.MsgBulkImportRequest")
	proto.RegisterType((*MsgBulkImportResponse)(nil), "provenance.ledger.v1.MsgBulkImportResponse")
}

func init() { proto.RegisterFile("provenance/ledger/v1/tx.proto", fileDescriptor_3c124d2e9569f84d) }

var fileDescriptor_3c124d2e9569f84d = []byte{
	// 1271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xcd, 0x6f, 0xe3, 0x54,
	0x10, 0xaf, 0x9b, 0x6d, 0x57, 0x9d, 0x7c, 0xb4, 0x7d, 0x14, 0x9a, 0x75, 0xbb, 0xd9, 0x6c, 0x96,
	0x96, 0xa8, 0xed, 0x26, 0x34, 0xcb, 0x89, 0xe5, 0xd2, 0x0f, 0x76, 0x15, 0xd1, 0xa0, 0xe2, 0x2e,
	0x42, 0x20, 0xa4, 0xc8, 0x8d, 0xdf, 0xba, 0x56, 0xe3, 0x8f, 0xf5, 0x7b, 0xa9, 0x6a, 0x24, 0x24,
	0xc4, 0x15, 0x21, 0x71, 0x41, 0xe2, 0xc6, 0x05, 0xee, 0xfd, 0x0b, 0x38, 0x00, 0x07, 0x8e, 0x7b,
	0xe0, 0xc0, 0x11, 0xb5, 0x87, 0xfd, 0x37, 0x90, 0xed, 0xe7, 0xe4, 0x39, 0x76, 0xec, 0xa4, 0x4b,
	0x6f, 0xf1, 0xcb, 0x6f, 0x66, 0x7e, 0xbf, 0x79, 0xe3, 0x99, 0x49, 0xe0, 0xae, 0x65, 0x9b, 0x67,
	0xd8, 0x90, 0x8d, 0x0e, 0xae, 0x77, 0xb1, 0xa2, 0x62, 0xbb, 0x7e, 0xb6, 0x5d, 0xa7, 0xe7, 0x35,
	0xcb, 0x36, 0xa9, 0x89, 0x96, 0x06, 0x5f, 0xd7, 0xfc, 0xaf, 0x6b, 0x67, 0xdb, 0xe2, 0x72, 0xc7,
	0x24, 0xba, 0x49, 0xea, 0x3a, 0x51, 0x5d, 0xb4, 0x4e, 0x54, 0x1f, 0x2e, 0xde, 0x8f, 0xf5, 0xc6,
	0x0c, 0x7d, 0xc8, 0x56, 0x02, 0xa4, 0x4d, 0x30, 0xa5, 0x5d, 0xac, 0x63, 0x83, 0x32, 0x74, 0x25,
	0x16, 0xad, 0x62, 0x03, 0x13, 0x8d, 0xf8, 0x98, 0xca, 0x19, 0x2c, 0xb4, 0x88, 0xba, 0x67, 0x63,
	0x99, 0x62, 0x09, 0xbf, 0xe8, 0x61, 0x42, 0xd1, 0x7b, 0x30, 0xeb, 0xc3, 0x8b, 0x42, 0x59, 0xa8,
	0x66, 0x1b, 0xab, 0xb5, 0x38, 0x21, 0xb5, 0x03, 0xef, 0x93, 0xc4, 0xb0, 0x68, 0x15, 0xe6, 0xe4,
	0x1e, 0x3d, 0x31, 0x6d, 0x8d, 0x3a, 0xc5, 0xe9, 0xb2, 0x50, 0x9d, 0x93, 0x06, 0x07, 0xef, 0x17,
	0xbe, 0x7d, 0x75, 0xb1, 0x31, 0x78, 0xae, 0xbc, 0x01, 0x8b, 0x5c, 0x5c, 0x62, 0x99, 0x06, 0xc1,
	0x95, 0x9f, 0x05, 0x78, 0xab, 0x45, 0xd4, 0x4f, 0x2d, 0x45, 0xa6, 0xf8, 0x88, 0xca, 0xb4, 0x47,
	0x02, 0x4e, 0xdb, 0x90, 0x39, 0xc5, 0x0e, 0x23, 0x74, 0x2f, 0x89, 0xd0, 0x47, 0xd8, 0x91, 0x5c,
	0x6c, 0x32, 0x21, 0xf4, 0x36, 0x14, 0x88, 0x17, 0xa1, 0x4d, 0x1d, 0x0b, 0xb7, 0x35, 0xa5, 0x98,
	0x29, 0x0b, 0xd5, 0x19, 0x29, 0xe7, 0x9f, 0x3e, 0x73, 0x2c, 0xdc, 0x54, 0x22, 0xb4, 0xef, 0xc0,
	0x72, 0x84, 0x20, 0x23, 0xff, 0xe7, 0x34, 0xac, 0xf6, 0xbf, 0x6b, 0x1a, 0x14, 0xdb, 0x98, 0x50,
	0x89, 0x4b, 0xeb, 0xff, 0x2e, 0xe1, 0x01, 0xe4, 0x35, 0x16, 0xa7, 0x6d, 0xcb, 0x14, 0x07, 0x0a,
	0x34, 0x2e, 0x38, 0x3a, 0x00, 0xd4, 0x07, 0x29, 0xb2, 0xd3, 0xee, 0x98, 0x3d, 0x83, 0x16, 0x6f,
	0x95, 0x85, 0x6a, 0xa1, 0x51, 0x8a, 0x27, 0xb1, 0x2f, 0x3b, 0x7b, 0x2e, 0x4a, 0x5a, 0x08, 0x2c,
	0x83, 0x13, 0x74, 0x08, 0xfd, 0xb3, 0xb6, 0xdc, 0xe9, 0xd8, 0x3d, 0xb9, 0x5b, 0x9c, 0xf1, 0x7c,
	0xad, 0xc5, 0xfb, 0x0a, 0x12, 0xb1, 0xe3, 0x83, 0xa5, 0x79, 0x2d, 0x7c, 0x10, 0xc9, 0xf0, 0x3d,
	0xb8, 0x3b, 0x22, 0x8b, 0x2c, 0xcf, 0x3f, 0x4e, 0x73, 0x77, 0x70, 0x28, 0x3b, 0x6e, 0xc1, 0xdf,
	0x58, 0x8a, 0xcb, 0x90, 0x33, 0xf0, 0x39, 0x6d, 0x5b, 0x3a, 0x6d, 0xcb, 0x3a, 0xf5, 0x32, 0x9c,
	0x91, 0xc0, 0x3d, 0x3b, 0xd4, 0xe9, 0x8e, 0x4e, 0x51, 0x05, 0xf2, 0x7d, 0x84, 0xcb, 0xc8, 0x4b,
	0xed, 0x8c, 0x94, 0x65, 0x90, 0x7d, 0xf7, 0x0e, 0x8e, 0x60, 0xd1, 0xf2, 0x89, 0xb6, 0x9f, 0xdb,
	0x2e, 0x55, 0xa3, 0xe3, 0xb0, 0xb4, 0xad, 0xc7, 0x93, 0x64, 0xba, 0x9e, 0x04, 0x68, 0x69, 0xc1,
	0x1a, 0x3a, 0x89, 0x24, 0x4e, 0x84, 0x62, 0x34, 0x2d, 0x2c, 0x67, 0xbf, 0x08, 0x5c, 0x6d, 0xb6,
	0x64, 0xda, 0x73, 0x2d, 0xf6, 0x6f, 0xb8, 0x36, 0x75, 0x16, 0xc7, 0x4f, 0x0b, 0xab, 0x4d, 0x9d,
	0x0b, 0x9e, 0x78, 0xf7, 0x61, 0x96, 0x4c, 0xc7, 0x85, 0xe0, 0xb5, 0xab, 0x1d, 0xcb, 0xc2, 0x86,
	0xf2, 0x1a, 0xdc, 0x1f, 0xc3, 0x6d, 0x6c, 0x50, 0x5b, 0xc3, 0xa4, 0x38, 0x5d, 0xce, 0x54, 0xb3,
	0x8d, 0xfb, 0x49, 0x66, 0x1f, 0x1a, 0xd4, 0x76, 0xa4, 0xc0, 0x22, 0x2c, 0x3c, 0x33, 0x5e, 0xa3,
	0x0b, 0x18, 0x33, 0x1d, 0x7f, 0x4c, 0x73, 0x97, 0xb5, 0x2b, 0x77, 0xdd, 0xb0, 0x37, 0xd7, 0xea,
	0xd6, 0xa0, 0xd0, 0x31, 0x6d, 0x1b, 0x77, 0x65, 0xaa, 0x99, 0x46, 0xd0, 0xea, 0xe6, 0xa4, 0x3c,
	0x77, 0xda, 0x54, 0xd0, 0x27, 0x30, 0x2f, 0x5b, 0x56, 0x57, 0xc3, 0x4a, 0x5b, 0xd6, 0xdd, 0xb7,
	0x9d, 0x14, 0x6f, 0x79, 0xc9, 0xa9, 0x26, 0x71, 0xd8, 0xed, 0x75, 0x4e, 0x31, 0xdd, 0xf1, 0x0c,
	0xa4, 0x02, 0x73, 0xe0, 0x3f, 0x12, 0x74, 0x00, 0xf3, 0xc7, 0xbe, 0xba, 0xbe, 0xcb, 0x19, 0xcf,
	0xe5, 0x83, 0x78, 0x97, 0xbe, 0x33, 0x96, 0x10, 0xa9, 0xc0, 0x6c, 0x99, 0xb7, 0x48, 0x6a, 0x57,
	0xe0, 0x4e, 0x4c, 0x12, 0x59, 0x8a, 0x7f, 0x15, 0x60, 0xad, 0x45, 0xd4, 0x67, 0xb6, 0x6c, 0x90,
	0xe7, 0xd8, 0x7e, 0xd2, 0x33, 0x14, 0xf2, 0x99, 0x46, 0x4f, 0x8e, 0xfa, 0x53, 0x32, 0xc8, 0x77,
	0x28, 0x79, 0xc2, 0x70, 0xf2, 0x3e, 0x86, 0x39, 0xca, 0x7c, 0x04, 0xc5, 0xf2, 0x6e, 0x3c, 0x79,
	0x37, 0x44, 0x10, 0x6e, 0x28, 0xd2, 0xc0, 0x45, 0x44, 0x44, 0x15, 0xd6, 0xd3, 0x68, 0x32, 0x45,
	0xd4, 0xab, 0xa4, 0x7d, 0x4c, 0xa8, 0x6d, 0x3a, 0x37, 0x55, 0x2c, 0x11, 0x7e, 0x4b, 0x80, 0xf8,
	0xa8, 0x8c, 0xcb, 0x77, 0x02, 0xbc, 0xd9, 0x9f, 0xdf, 0x7b, 0x5d, 0x99, 0xf4, 0xab, 0x77, 0x1f,
	0x72, 0x6c, 0x1f, 0xe9, 0xb8, 0xc7, 0x8c, 0x59, 0xe2, 0xfb, 0xe5, 0xdb, 0x67, 0xbb, 0x83, 0x87,
	0x09, 0x39, 0x16, 0xbd, 0xb5, 0x21, 0x44, 0x86, 0xf1, 0xfc, 0xdd, 0x6f, 0x7c, 0x3b, 0x8a, 0xe2,
	0x9d, 0x1f, 0xf5, 0x67, 0x7b, 0x40, 0x77, 0x1d, 0xe6, 0x79, 0xba, 0xee, 0xcb, 0xe1, 0x97, 0x40,
	0x9e, 0xa3, 0xd3, 0x54, 0xd0, 0x01, 0x64, 0xb9, 0x75, 0xc1, 0xa3, 0x94, 0x6d, 0x6c, 0xa6, 0xaa,
	0xe2, 0x02, 0xc2, 0x60, 0xb1, 0x98, 0xb0, 0x85, 0xf8, 0x6d, 0x31, 0x4e, 0x03, 0x53, 0xf9, 0x9b,
	0x00, 0x2b, 0x1c, 0xc2, 0xeb, 0x57, 0xd7, 0x11, 0xd9, 0x04, 0x70, 0x9b, 0x9c, 0xc3, 0x6b, 0xdc,
	0x48, 0xd5, 0x38, 0x08, 0x37, 0x87, 0x83, 0x8f, 0x13, 0x2a, 0x2c, 0x85, 0x6e, 0x89, 0xe3, 0x1f,
	0x7f, 0x8d, 0x7e, 0x9b, 0xb8, 0xe6, 0x35, 0x1e, 0x7b, 0xc6, 0x93, 0x5d, 0x23, 0x17, 0x10, 0x8e,
	0xfb, 0x9f, 0x5f, 0xeb, 0x1a, 0x79, 0x0d, 0x4c, 0xe5, 0xf7, 0x02, 0x2c, 0xb5, 0x88, 0xba, 0xdb,
	0xeb, 0x9e, 0x36, 0x75, 0xcb, 0xb4, 0xc7, 0xec, 0x50, 0x4f, 0x21, 0xcf, 0x76, 0xfa, 0xb6, 0x5b,
	0x62, 0x81, 0xaa, 0x4a, 0xbc, 0xaa, 0xa7, 0x3e, 0xd4, 0xad, 0x22, 0x2c, 0xe5, 0x54, 0xee, 0x29,
	0x42, 0x78, 0xd9, 0x7b, 0xc7, 0x79, 0x3a, 0x3e, 0xd1, 0xc6, 0xdf, 0x39, 0xc8, 0xb4, 0x88, 0x8a,
	0x3e, 0x87, 0x59, 0xff, 0xa5, 0x43, 0x23, 0xd6, 0x98, 0xe1, 0x9f, 0x16, 0xe2, 0x3b, 0xa9, 0x38,
	0x3f, 0x04, 0x3a, 0x85, 0x1c, 0xbf, 0x65, 0xa3, 0xad, 0x91, 0x86, 0x31, 0xbf, 0x16, 0xc4, 0x87,
	0x63, 0xa2, 0x59, 0xb0, 0xaf, 0x01, 0x45, 0x17, 0x4e, 0xd4, 0x48, 0x71, 0x12, 0xb3, 0xe3, 0x8b,
	0x8f, 0x26, 0xb2, 0x61, 0xe1, 0x0d, 0xc8, 0x87, 0xd6, 0x36, 0x94, 0x46, 0x3f, 0xbc, 0xf5, 0x8a,
	0xb5, 0x71, 0xe1, 0xc3, 0x72, 0xf9, 0x1d, 0x2b, 0x55, 0x6e, 0xcc, 0xda, 0x98, 0x2a, 0x37, 0x6e,
	0x89, 0x73, 0xab, 0xc6, 0x5f, 0x87, 0x12, 0xaa, 0x26, 0xb4, 0xe1, 0x25, 0x54, 0x4d, 0x78, 0xaf,
	0x42, 0x2f, 0xa0, 0x10, 0x5e, 0x07, 0x50, 0x5a, 0x6e, 0x86, 0x96, 0x2f, 0xb1, 0x3e, 0x36, 0x9e,
	0x85, 0xfc, 0x49, 0x80, 0x95, 0x84, 0xe9, 0x8d, 0x1e, 0x8f, 0x74, 0x98, 0xbe, 0x9a, 0x88, 0x1f,
	0x5c, 0xcf, 0x98, 0x51, 0xfb, 0x12, 0x6e, 0xb3, 0xb9, 0x8d, 0x46, 0x67, 0x30, 0xbc, 0x4f, 0x88,
	0xd5, 0x74, 0x20, 0xf3, 0x7e, 0x02, 0x59, 0x6e, 0xe2, 0xa2, 0xcd, 0x94, 0x37, 0x9b, 0x5f, 0x12,
	0xc4, 0xad, 0xf1, 0xc0, 0x83, 0x7a, 0x8d, 0x0e, 0xbf, 0x84, 0x7a, 0x1d, 0x39, 0xed, 0x13, 0xea,
	0x75, 0xf4, 0x74, 0x45, 0x5f, 0xc1, 0x62, 0x64, 0x32, 0xa1, 0xed, 0x54, 0x4f, 0xc3, 0x53, 0x58,
	0x6c, 0x4c, 0x62, 0x12, 0x95, 0x3e, 0x18, 0x18, 0x63, 0x48, 0x8f, 0x4c, 0xc8, 0x31, 0xa4, 0x47,
	0x27, 0x12, 0xc2, 0x00, 0x83, 0xf6, 0x8f, 0x36, 0x46, 0xba, 0x88, 0x8c, 0x2c, 0x71, 0x73, 0x2c,
	0xac, 0x1f, 0x46, 0x9c, 0xf9, 0xe6, 0xd5, 0xc5, 0x86, 0xb0, 0xab, 0xfe, 0x75, 0x59, 0x12, 0x5e,
	0x5e, 0x96, 0x84, 0x7f, 0x2f, 0x4b, 0xc2, 0x0f, 0x57, 0xa5, 0xa9, 0x97, 0x57, 0xa5, 0xa9, 0x7f,
	0xae, 0x4a, 0x53, 0xb0, 0xac, 0x99, 0xb1, 0xfe, 0x0e, 0x85, 0x2f, 0x1a, 0xaa, 0x46, 0x4f, 0x7a,
	0xc7, 0xb5, 0x8e, 0xa9, 0xd7, 0x07, 0x90, 0x87, 0x9a, 0xc9, 0x3d, 0xd5, 0xcf, 0x83, 0xff, 0xbf,
	0xdc, 0xa9, 0x4f, 0x8e, 0x67, 0xbd, 0xff, 0xbe, 0x1e, 0xfd, 0x17, 0x00, 0x00, 0xff, 0xff, 0x95,
	0xfe, 0x44, 0xa5, 0xc0, 0x13, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// Create a new NFT ledger.
	Create(ctx context.Context, in *MsgCreateRequest, opts ...grpc.CallOption) (*MsgCreateResponse, error)
	// Update Status.
	UpdateStatus(ctx context.Context, in *MsgUpdateStatusRequest, opts ...grpc.CallOption) (*MsgUpdateStatusResponse, error)
	// Update Interest Rate.
	UpdateInterestRate(ctx context.Context, in *MsgUpdateInterestRateRequest, opts ...grpc.CallOption) (*MsgUpdateInterestRateResponse, error)
	// Update Payment Amount, Next Payment Date, and Payment Frequency.
	UpdatePayment(ctx context.Context, in *MsgUpdatePaymentRequest, opts ...grpc.CallOption) (*MsgUpdatePaymentResponse, error)
	// Update Maturity Date.
	UpdateMaturityDate(ctx context.Context, in *MsgUpdateMaturityDateRequest, opts ...grpc.CallOption) (*MsgUpdateMaturityDateResponse, error)
	// Append a ledger entry.
	Append(ctx context.Context, in *MsgAppendRequest, opts ...grpc.CallOption) (*MsgAppendResponse, error)
	// Balances can be updated for a ledger entry allowing for retroactive adjustments to be applied.
	UpdateBalances(ctx context.Context, in *MsgUpdateBalancesRequest, opts ...grpc.CallOption) (*MsgUpdateBalancesResponse, error)
	// Process multiple fund transfers with manual settlement instructions.
	TransferFundsWithSettlement(ctx context.Context, in *MsgTransferFundsWithSettlementRequest, opts ...grpc.CallOption) (*MsgTransferFundsWithSettlementResponse, error)
	// Destroy a ledger by NFT address.
	Destroy(ctx context.Context, in *MsgDestroyRequest, opts ...grpc.CallOption) (*MsgDestroyResponse, error)
	// Create a new ledger class.
	CreateClass(ctx context.Context, in *MsgCreateClassRequest, opts ...grpc.CallOption) (*MsgCreateClassResponse, error)
	// Add a status type to a ledger class.
	AddClassStatusType(ctx context.Context, in *MsgAddClassStatusTypeRequest, opts ...grpc.CallOption) (*MsgAddClassStatusTypeResponse, error)
	// Add an entry type to a ledger class.
	AddClassEntryType(ctx context.Context, in *MsgAddClassEntryTypeRequest, opts ...grpc.CallOption) (*MsgAddClassEntryTypeResponse, error)
	// Add a bucket type to a ledger class.
	AddClassBucketType(ctx context.Context, in *MsgAddClassBucketTypeRequest, opts ...grpc.CallOption) (*MsgAddClassBucketTypeResponse, error)
	// Bulk import ledger data from genesis state.
	BulkImport(ctx context.Context, in *MsgBulkImportRequest, opts ...grpc.CallOption) (*MsgBulkImportResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) Create(ctx context.Context, in *MsgCreateRequest, opts ...grpc.CallOption) (*MsgCreateResponse, error) {
	out := new(MsgCreateResponse)
	err := c.cc.Invoke(ctx, "/provenance.ledger.v1.Msg/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateStatus(ctx context.Context, in *MsgUpdateStatusRequest, opts ...grpc.CallOption) (*MsgUpdateStatusResponse, error) {
	out := new(MsgUpdateStatusResponse)
	err := c.cc.Invoke(ctx, "/provenance.ledger.v1.Msg/UpdateStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateInterestRate(ctx context.Context, in *MsgUpdateInterestRateRequest, opts ...grpc.CallOption) (*MsgUpdateInterestRateResponse, error) {
	out := new(MsgUpdateInterestRateResponse)
	err := c.cc.Invoke(ctx, "/provenance.ledger.v1.Msg/UpdateInterestRate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdatePayment(ctx context.Context, in *MsgUpdatePaymentRequest, opts ...grpc.CallOption) (*MsgUpdatePaymentResponse, error) {
	out := new(MsgUpdatePaymentResponse)
	err := c.cc.Invoke(ctx, "/provenance.ledger.v1.Msg/UpdatePayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateMaturityDate(ctx context.Context, in *MsgUpdateMaturityDateRequest, opts ...grpc.CallOption) (*MsgUpdateMaturityDateResponse, error) {
	out := new(MsgUpdateMaturityDateResponse)
	err := c.cc.Invoke(ctx, "/provenance.ledger.v1.Msg/UpdateMaturityDate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Append(ctx context.Context, in *MsgAppendRequest, opts ...grpc.CallOption) (*MsgAppendResponse, error) {
	out := new(MsgAppendResponse)
	err := c.cc.Invoke(ctx, "/provenance.ledger.v1.Msg/Append", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateBalances(ctx context.Context, in *MsgUpdateBalancesRequest, opts ...grpc.CallOption) (*MsgUpdateBalancesResponse, error) {
	out := new(MsgUpdateBalancesResponse)
	err := c.cc.Invoke(ctx, "/provenance.ledger.v1.Msg/UpdateBalances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) TransferFundsWithSettlement(ctx context.Context, in *MsgTransferFundsWithSettlementRequest, opts ...grpc.CallOption) (*MsgTransferFundsWithSettlementResponse, error) {
	out := new(MsgTransferFundsWithSettlementResponse)
	err := c.cc.Invoke(ctx, "/provenance.ledger.v1.Msg/TransferFundsWithSettlement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Destroy(ctx context.Context, in *MsgDestroyRequest, opts ...grpc.CallOption) (*MsgDestroyResponse, error) {
	out := new(MsgDestroyResponse)
	err := c.cc.Invoke(ctx, "/provenance.ledger.v1.Msg/Destroy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateClass(ctx context.Context, in *MsgCreateClassRequest, opts ...grpc.CallOption) (*MsgCreateClassResponse, error) {
	out := new(MsgCreateClassResponse)
	err := c.cc.Invoke(ctx, "/provenance.ledger.v1.Msg/CreateClass", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddClassStatusType(ctx context.Context, in *MsgAddClassStatusTypeRequest, opts ...grpc.CallOption) (*MsgAddClassStatusTypeResponse, error) {
	out := new(MsgAddClassStatusTypeResponse)
	err := c.cc.Invoke(ctx, "/provenance.ledger.v1.Msg/AddClassStatusType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddClassEntryType(ctx context.Context, in *MsgAddClassEntryTypeRequest, opts ...grpc.CallOption) (*MsgAddClassEntryTypeResponse, error) {
	out := new(MsgAddClassEntryTypeResponse)
	err := c.cc.Invoke(ctx, "/provenance.ledger.v1.Msg/AddClassEntryType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddClassBucketType(ctx context.Context, in *MsgAddClassBucketTypeRequest, opts ...grpc.CallOption) (*MsgAddClassBucketTypeResponse, error) {
	out := new(MsgAddClassBucketTypeResponse)
	err := c.cc.Invoke(ctx, "/provenance.ledger.v1.Msg/AddClassBucketType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BulkImport(ctx context.Context, in *MsgBulkImportRequest, opts ...grpc.CallOption) (*MsgBulkImportResponse, error) {
	out := new(MsgBulkImportResponse)
	err := c.cc.Invoke(ctx, "/provenance.ledger.v1.Msg/BulkImport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// Create a new NFT ledger.
	Create(context.Context, *MsgCreateRequest) (*MsgCreateResponse, error)
	// Update Status.
	UpdateStatus(context.Context, *MsgUpdateStatusRequest) (*MsgUpdateStatusResponse, error)
	// Update Interest Rate.
	UpdateInterestRate(context.Context, *MsgUpdateInterestRateRequest) (*MsgUpdateInterestRateResponse, error)
	// Update Payment Amount, Next Payment Date, and Payment Frequency.
	UpdatePayment(context.Context, *MsgUpdatePaymentRequest) (*MsgUpdatePaymentResponse, error)
	// Update Maturity Date.
	UpdateMaturityDate(context.Context, *MsgUpdateMaturityDateRequest) (*MsgUpdateMaturityDateResponse, error)
	// Append a ledger entry.
	Append(context.Context, *MsgAppendRequest) (*MsgAppendResponse, error)
	// Balances can be updated for a ledger entry allowing for retroactive adjustments to be applied.
	UpdateBalances(context.Context, *MsgUpdateBalancesRequest) (*MsgUpdateBalancesResponse, error)
	// Process multiple fund transfers with manual settlement instructions.
	TransferFundsWithSettlement(context.Context, *MsgTransferFundsWithSettlementRequest) (*MsgTransferFundsWithSettlementResponse, error)
	// Destroy a ledger by NFT address.
	Destroy(context.Context, *MsgDestroyRequest) (*MsgDestroyResponse, error)
	// Create a new ledger class.
	CreateClass(context.Context, *MsgCreateClassRequest) (*MsgCreateClassResponse, error)
	// Add a status type to a ledger class.
	AddClassStatusType(context.Context, *MsgAddClassStatusTypeRequest) (*MsgAddClassStatusTypeResponse, error)
	// Add an entry type to a ledger class.
	AddClassEntryType(context.Context, *MsgAddClassEntryTypeRequest) (*MsgAddClassEntryTypeResponse, error)
	// Add a bucket type to a ledger class.
	AddClassBucketType(context.Context, *MsgAddClassBucketTypeRequest) (*MsgAddClassBucketTypeResponse, error)
	// Bulk import ledger data from genesis state.
	BulkImport(context.Context, *MsgBulkImportRequest) (*MsgBulkImportResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) Create(ctx context.Context, req *MsgCreateRequest) (*MsgCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedMsgServer) UpdateStatus(ctx context.Context, req *MsgUpdateStatusRequest) (*MsgUpdateStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStatus not implemented")
}
func (*UnimplementedMsgServer) UpdateInterestRate(ctx context.Context, req *MsgUpdateInterestRateRequest) (*MsgUpdateInterestRateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInterestRate not implemented")
}
func (*UnimplementedMsgServer) UpdatePayment(ctx context.Context, req *MsgUpdatePaymentRequest) (*MsgUpdatePaymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePayment not implemented")
}
func (*UnimplementedMsgServer) UpdateMaturityDate(ctx context.Context, req *MsgUpdateMaturityDateRequest) (*MsgUpdateMaturityDateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMaturityDate not implemented")
}
func (*UnimplementedMsgServer) Append(ctx context.Context, req *MsgAppendRequest) (*MsgAppendResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Append not implemented")
}
func (*UnimplementedMsgServer) UpdateBalances(ctx context.Context, req *MsgUpdateBalancesRequest) (*MsgUpdateBalancesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBalances not implemented")
}
func (*UnimplementedMsgServer) TransferFundsWithSettlement(ctx context.Context, req *MsgTransferFundsWithSettlementRequest) (*MsgTransferFundsWithSettlementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferFundsWithSettlement not implemented")
}
func (*UnimplementedMsgServer) Destroy(ctx context.Context, req *MsgDestroyRequest) (*MsgDestroyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Destroy not implemented")
}
func (*UnimplementedMsgServer) CreateClass(ctx context.Context, req *MsgCreateClassRequest) (*MsgCreateClassResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateClass not implemented")
}
func (*UnimplementedMsgServer) AddClassStatusType(ctx context.Context, req *MsgAddClassStatusTypeRequest) (*MsgAddClassStatusTypeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddClassStatusType not implemented")
}
func (*UnimplementedMsgServer) AddClassEntryType(ctx context.Context, req *MsgAddClassEntryTypeRequest) (*MsgAddClassEntryTypeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddClassEntryType not implemented")
}
func (*UnimplementedMsgServer) AddClassBucketType(ctx context.Context, req *MsgAddClassBucketTypeRequest) (*MsgAddClassBucketTypeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddClassBucketType not implemented")
}
func (*UnimplementedMsgServer) BulkImport(ctx context.Context, req *MsgBulkImportRequest) (*MsgBulkImportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BulkImport not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.ledger.v1.Msg/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Create(ctx, req.(*MsgCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.ledger.v1.Msg/UpdateStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateStatus(ctx, req.(*MsgUpdateStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateInterestRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateInterestRateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateInterestRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.ledger.v1.Msg/UpdateInterestRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateInterestRate(ctx, req.(*MsgUpdateInterestRateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdatePayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdatePayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.ledger.v1.Msg/UpdatePayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdatePayment(ctx, req.(*MsgUpdatePaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateMaturityDate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateMaturityDateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateMaturityDate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.ledger.v1.Msg/UpdateMaturityDate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateMaturityDate(ctx, req.(*MsgUpdateMaturityDateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Append_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAppendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Append(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.ledger.v1.Msg/Append",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Append(ctx, req.(*MsgAppendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateBalances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateBalancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateBalances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.ledger.v1.Msg/UpdateBalances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateBalances(ctx, req.(*MsgUpdateBalancesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_TransferFundsWithSettlement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgTransferFundsWithSettlementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).TransferFundsWithSettlement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.ledger.v1.Msg/TransferFundsWithSettlement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).TransferFundsWithSettlement(ctx, req.(*MsgTransferFundsWithSettlementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Destroy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDestroyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Destroy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.ledger.v1.Msg/Destroy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Destroy(ctx, req.(*MsgDestroyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateClass_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateClassRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateClass(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.ledger.v1.Msg/CreateClass",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateClass(ctx, req.(*MsgCreateClassRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddClassStatusType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddClassStatusTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddClassStatusType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.ledger.v1.Msg/AddClassStatusType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddClassStatusType(ctx, req.(*MsgAddClassStatusTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddClassEntryType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddClassEntryTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddClassEntryType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.ledger.v1.Msg/AddClassEntryType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddClassEntryType(ctx, req.(*MsgAddClassEntryTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddClassBucketType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddClassBucketTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddClassBucketType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.ledger.v1.Msg/AddClassBucketType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddClassBucketType(ctx, req.(*MsgAddClassBucketTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BulkImport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBulkImportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BulkImport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.ledger.v1.Msg/BulkImport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BulkImport(ctx, req.(*MsgBulkImportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "provenance.ledger.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Msg_Create_Handler,
		},
		{
			MethodName: "UpdateStatus",
			Handler:    _Msg_UpdateStatus_Handler,
		},
		{
			MethodName: "UpdateInterestRate",
			Handler:    _Msg_UpdateInterestRate_Handler,
		},
		{
			MethodName: "UpdatePayment",
			Handler:    _Msg_UpdatePayment_Handler,
		},
		{
			MethodName: "UpdateMaturityDate",
			Handler:    _Msg_UpdateMaturityDate_Handler,
		},
		{
			MethodName: "Append",
			Handler:    _Msg_Append_Handler,
		},
		{
			MethodName: "UpdateBalances",
			Handler:    _Msg_UpdateBalances_Handler,
		},
		{
			MethodName: "TransferFundsWithSettlement",
			Handler:    _Msg_TransferFundsWithSettlement_Handler,
		},
		{
			MethodName: "Destroy",
			Handler:    _Msg_Destroy_Handler,
		},
		{
			MethodName: "CreateClass",
			Handler:    _Msg_CreateClass_Handler,
		},
		{
			MethodName: "AddClassStatusType",
			Handler:    _Msg_AddClassStatusType_Handler,
		},
		{
			MethodName: "AddClassEntryType",
			Handler:    _Msg_AddClassEntryType_Handler,
		},
		{
			MethodName: "AddClassBucketType",
			Handler:    _Msg_AddClassBucketType_Handler,
		},
		{
			MethodName: "BulkImport",
			Handler:    _Msg_BulkImport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "provenance/ledger/v1/tx.proto",
}

func (m *MsgCreateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0x12
	}
	if m.Ledger != nil {
		{
			size, err := m.Ledger.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateStatusRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateStatusRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateStatusRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.StatusTypeId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.StatusTypeId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0x12
	}
	if m.Key != nil {
		{
			size, err := m.Key.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateStatusResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateStatusResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateStatusResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateInterestRateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateInterestRateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateInterestRateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.InterestAccrual != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.InterestAccrual))
		i--
		dAtA[i] = 0x28
	}
	if m.InterestDayCount != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.InterestDayCount))
		i--
		dAtA[i] = 0x20
	}
	if m.InterestRate != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.InterestRate))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0x12
	}
	if m.Key != nil {
		{
			size, err := m.Key.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateInterestRateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateInterestRateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateInterestRateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePaymentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePaymentRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePaymentRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PaymentFrequency != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PaymentFrequency))
		i--
		dAtA[i] = 0x28
	}
	if m.NextPmtDate != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.NextPmtDate))
		i--
		dAtA[i] = 0x20
	}
	if m.NextPmtAmt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.NextPmtAmt))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0x12
	}
	if m.Key != nil {
		{
			size, err := m.Key.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePaymentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePaymentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePaymentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMaturityDateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMaturityDateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMaturityDateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MaturityDate != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MaturityDate))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0x12
	}
	if m.Key != nil {
		{
			size, err := m.Key.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMaturityDateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMaturityDateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMaturityDateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAppendRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAppendRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAppendRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Entries) > 0 {
		for iNdEx := len(m.Entries) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entries[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Key != nil {
		{
			size, err := m.Key.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAppendResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAppendResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAppendResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateBalancesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateBalancesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateBalancesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.BalanceAmounts) > 0 {
		for iNdEx := len(m.BalanceAmounts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.BalanceAmounts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.AppliedAmounts) > 0 {
		for iNdEx := len(m.AppliedAmounts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AppliedAmounts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.CorrelationId) > 0 {
		i -= len(m.CorrelationId)
		copy(dAtA[i:], m.CorrelationId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CorrelationId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0x12
	}
	if m.Key != nil {
		{
			size, err := m.Key.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateBalancesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateBalancesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateBalancesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgTransferFundsWithSettlementRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransferFundsWithSettlementRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransferFundsWithSettlementRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Transfers) > 0 {
		for iNdEx := len(m.Transfers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Transfers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTransferFundsWithSettlementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransferFundsWithSettlementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransferFundsWithSettlementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDestroyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDestroyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDestroyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0x12
	}
	if m.Key != nil {
		{
			size, err := m.Key.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDestroyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDestroyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDestroyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateClassRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateClassRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateClassRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0x12
	}
	if m.LedgerClass != nil {
		{
			size, err := m.LedgerClass.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateClassResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateClassResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateClassResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddClassStatusTypeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddClassStatusTypeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddClassStatusTypeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0x1a
	}
	if m.StatusType != nil {
		{
			size, err := m.StatusType.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.LedgerClassId) > 0 {
		i -= len(m.LedgerClassId)
		copy(dAtA[i:], m.LedgerClassId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LedgerClassId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddClassStatusTypeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddClassStatusTypeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddClassStatusTypeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddClassEntryTypeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddClassEntryTypeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddClassEntryTypeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0x1a
	}
	if m.EntryType != nil {
		{
			size, err := m.EntryType.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.LedgerClassId) > 0 {
		i -= len(m.LedgerClassId)
		copy(dAtA[i:], m.LedgerClassId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LedgerClassId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddClassEntryTypeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddClassEntryTypeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddClassEntryTypeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddClassBucketTypeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddClassBucketTypeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddClassBucketTypeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0x1a
	}
	if m.BucketType != nil {
		{
			size, err := m.BucketType.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.LedgerClassId) > 0 {
		i -= len(m.LedgerClassId)
		copy(dAtA[i:], m.LedgerClassId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LedgerClassId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddClassBucketTypeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddClassBucketTypeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddClassBucketTypeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgBulkImportRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBulkImportRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBulkImportRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.GenesisState != nil {
		{
			size, err := m.GenesisState.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgBulkImportResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBulkImportResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBulkImportResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Ledger != nil {
		l = m.Ledger.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateStatusRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StatusTypeId != 0 {
		n += 1 + sovTx(uint64(m.StatusTypeId))
	}
	return n
}

func (m *MsgUpdateStatusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateInterestRateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.InterestRate != 0 {
		n += 1 + sovTx(uint64(m.InterestRate))
	}
	if m.InterestDayCount != 0 {
		n += 1 + sovTx(uint64(m.InterestDayCount))
	}
	if m.InterestAccrual != 0 {
		n += 1 + sovTx(uint64(m.InterestAccrual))
	}
	return n
}

func (m *MsgUpdateInterestRateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdatePaymentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.NextPmtAmt != 0 {
		n += 1 + sovTx(uint64(m.NextPmtAmt))
	}
	if m.NextPmtDate != 0 {
		n += 1 + sovTx(uint64(m.NextPmtDate))
	}
	if m.PaymentFrequency != 0 {
		n += 1 + sovTx(uint64(m.PaymentFrequency))
	}
	return n
}

func (m *MsgUpdatePaymentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateMaturityDateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MaturityDate != 0 {
		n += 1 + sovTx(uint64(m.MaturityDate))
	}
	return n
}

func (m *MsgUpdateMaturityDateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAppendRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Entries) > 0 {
		for _, e := range m.Entries {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAppendResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateBalancesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CorrelationId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.AppliedAmounts) > 0 {
		for _, e := range m.AppliedAmounts {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.BalanceAmounts) > 0 {
		for _, e := range m.BalanceAmounts {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgUpdateBalancesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgTransferFundsWithSettlementRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Transfers) > 0 {
		for _, e := range m.Transfers {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgTransferFundsWithSettlementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDestroyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDestroyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateClassRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LedgerClass != nil {
		l = m.LedgerClass.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateClassResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddClassStatusTypeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.LedgerClassId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StatusType != nil {
		l = m.StatusType.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddClassStatusTypeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddClassEntryTypeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.LedgerClassId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EntryType != nil {
		l = m.EntryType.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddClassEntryTypeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddClassBucketTypeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.LedgerClassId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.BucketType != nil {
		l = m.BucketType.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddClassBucketTypeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgBulkImportRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.GenesisState != nil {
		l = m.GenesisState.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgBulkImportResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ledger", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ledger == nil {
				m.Ledger = &Ledger{}
			}
			if err := m.Ledger.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateStatusRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateStatusRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateStatusRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &LedgerKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusTypeId", wireType)
			}
			m.StatusTypeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StatusTypeId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateStatusResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateStatusResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateStatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateInterestRateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateInterestRateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateInterestRateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &LedgerKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterestRate", wireType)
			}
			m.InterestRate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InterestRate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterestDayCount", wireType)
			}
			m.InterestDayCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InterestDayCount |= DayCount(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InterestAccrual", wireType)
			}
			m.InterestAccrual = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InterestAccrual |= InterestAccrual(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateInterestRateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateInterestRateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateInterestRateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePaymentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePaymentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePaymentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &LedgerKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextPmtAmt", wireType)
			}
			m.NextPmtAmt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NextPmtAmt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextPmtDate", wireType)
			}
			m.NextPmtDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NextPmtDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentFrequency", wireType)
			}
			m.PaymentFrequency = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PaymentFrequency |= PaymentFrequency(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePaymentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePaymentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePaymentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMaturityDateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMaturityDateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMaturityDateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &LedgerKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaturityDate", wireType)
			}
			m.MaturityDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaturityDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMaturityDateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMaturityDateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMaturityDateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAppendRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAppendRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAppendRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &LedgerKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entries = append(m.Entries, &LedgerEntry{})
			if err := m.Entries[len(m.Entries)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAppendResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAppendResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAppendResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateBalancesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateBalancesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateBalancesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &LedgerKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CorrelationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CorrelationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppliedAmounts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppliedAmounts = append(m.AppliedAmounts, &LedgerBucketAmount{})
			if err := m.AppliedAmounts[len(m.AppliedAmounts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BalanceAmounts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BalanceAmounts = append(m.BalanceAmounts, &BucketBalance{})
			if err := m.BalanceAmounts[len(m.BalanceAmounts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateBalancesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateBalancesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateBalancesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransferFundsWithSettlementRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransferFundsWithSettlementRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransferFundsWithSettlementRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Transfers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Transfers = append(m.Transfers, &FundTransferWithSettlement{})
			if err := m.Transfers[len(m.Transfers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransferFundsWithSettlementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransferFundsWithSettlementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransferFundsWithSettlementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDestroyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDestroyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDestroyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &LedgerKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDestroyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDestroyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDestroyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateClassRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateClassRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateClassRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LedgerClass", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LedgerClass == nil {
				m.LedgerClass = &LedgerClass{}
			}
			if err := m.LedgerClass.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateClassResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateClassResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateClassResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddClassStatusTypeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddClassStatusTypeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddClassStatusTypeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LedgerClassId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LedgerClassId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusType", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.StatusType == nil {
				m.StatusType = &LedgerClassStatusType{}
			}
			if err := m.StatusType.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddClassStatusTypeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddClassStatusTypeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddClassStatusTypeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddClassEntryTypeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddClassEntryTypeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddClassEntryTypeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LedgerClassId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LedgerClassId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntryType", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EntryType == nil {
				m.EntryType = &LedgerClassEntryType{}
			}
			if err := m.EntryType.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddClassEntryTypeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddClassEntryTypeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddClassEntryTypeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddClassBucketTypeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddClassBucketTypeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddClassBucketTypeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LedgerClassId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LedgerClassId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BucketType", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BucketType == nil {
				m.BucketType = &LedgerClassBucketType{}
			}
			if err := m.BucketType.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddClassBucketTypeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddClassBucketTypeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddClassBucketTypeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBulkImportRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBulkImportRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBulkImportRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GenesisState", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GenesisState == nil {
				m.GenesisState = &GenesisState{}
			}
			if err := m.GenesisState.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBulkImportResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBulkImportResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBulkImportResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
