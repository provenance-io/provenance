// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: provenance/ledger/v1/ledger.proto

package types

import (
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Ledger struct {
	NftUuid string         `protobuf:"bytes,1,opt,name=nft_uuid,json=nftUuid,proto3" json:"nft_uuid,omitempty"`
	Ledger  []*LedgerEntry `protobuf:"bytes,2,rep,name=ledger,proto3" json:"ledger,omitempty"`
}

func (m *Ledger) Reset()         { *m = Ledger{} }
func (m *Ledger) String() string { return proto.CompactTextString(m) }
func (*Ledger) ProtoMessage()    {}
func (*Ledger) Descriptor() ([]byte, []int) {
	return fileDescriptor_dee508b012fc2213, []int{0}
}
func (m *Ledger) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Ledger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Ledger.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Ledger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ledger.Merge(m, src)
}
func (m *Ledger) XXX_Size() int {
	return m.Size()
}
func (m *Ledger) XXX_DiscardUnknown() {
	xxx_messageInfo_Ledger.DiscardUnknown(m)
}

var xxx_messageInfo_Ledger proto.InternalMessageInfo

func (m *Ledger) GetNftUuid() string {
	if m != nil {
		return m.NftUuid
	}
	return ""
}

func (m *Ledger) GetLedger() []*LedgerEntry {
	if m != nil {
		return m.Ledger
	}
	return nil
}

type LedgerEntry struct {
	Uuid            string                `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Type            string                `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Denom           string                `protobuf:"bytes,3,opt,name=denom,proto3" json:"denom,omitempty"`
	PostedDate      time.Time             `protobuf:"bytes,4,opt,name=posted_date,json=postedDate,proto3,stdtime" json:"posted_date"`
	EffectiveDate   time.Time             `protobuf:"bytes,5,opt,name=effective_date,json=effectiveDate,proto3,stdtime" json:"effective_date"`
	Amt             cosmossdk_io_math.Int `protobuf:"bytes,6,opt,name=amt,proto3,customtype=cosmossdk.io/math.Int" json:"amt"`
	PrinAppliedAmt  cosmossdk_io_math.Int `protobuf:"bytes,7,opt,name=prin_applied_amt,json=prinAppliedAmt,proto3,customtype=cosmossdk.io/math.Int" json:"prin_applied_amt"`
	PrinBalAmt      cosmossdk_io_math.Int `protobuf:"bytes,8,opt,name=prin_bal_amt,json=prinBalAmt,proto3,customtype=cosmossdk.io/math.Int" json:"prin_bal_amt"`
	IntAppliedAmt   cosmossdk_io_math.Int `protobuf:"bytes,9,opt,name=int_applied_amt,json=intAppliedAmt,proto3,customtype=cosmossdk.io/math.Int" json:"int_applied_amt"`
	IntBalAmt       cosmossdk_io_math.Int `protobuf:"bytes,10,opt,name=int_bal_amt,json=intBalAmt,proto3,customtype=cosmossdk.io/math.Int" json:"int_bal_amt"`
	OtherAppliedAmt cosmossdk_io_math.Int `protobuf:"bytes,11,opt,name=other_applied_amt,json=otherAppliedAmt,proto3,customtype=cosmossdk.io/math.Int" json:"other_applied_amt"`
	OtherBalAmt     cosmossdk_io_math.Int `protobuf:"bytes,12,opt,name=other_bal_amt,json=otherBalAmt,proto3,customtype=cosmossdk.io/math.Int" json:"other_bal_amt"`
}

func (m *LedgerEntry) Reset()         { *m = LedgerEntry{} }
func (m *LedgerEntry) String() string { return proto.CompactTextString(m) }
func (*LedgerEntry) ProtoMessage()    {}
func (*LedgerEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_dee508b012fc2213, []int{1}
}
func (m *LedgerEntry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LedgerEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LedgerEntry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LedgerEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LedgerEntry.Merge(m, src)
}
func (m *LedgerEntry) XXX_Size() int {
	return m.Size()
}
func (m *LedgerEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_LedgerEntry.DiscardUnknown(m)
}

var xxx_messageInfo_LedgerEntry proto.InternalMessageInfo

func (m *LedgerEntry) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *LedgerEntry) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *LedgerEntry) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *LedgerEntry) GetPostedDate() time.Time {
	if m != nil {
		return m.PostedDate
	}
	return time.Time{}
}

func (m *LedgerEntry) GetEffectiveDate() time.Time {
	if m != nil {
		return m.EffectiveDate
	}
	return time.Time{}
}

func init() {
	proto.RegisterType((*Ledger)(nil), "provenance.ledger.v1.Ledger")
	proto.RegisterType((*LedgerEntry)(nil), "provenance.ledger.v1.LedgerEntry")
}

func init() { proto.RegisterFile("provenance/ledger/v1/ledger.proto", fileDescriptor_dee508b012fc2213) }

var fileDescriptor_dee508b012fc2213 = []byte{
	// 526 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0x31, 0x6f, 0xd3, 0x40,
	0x14, 0x80, 0xe3, 0xa6, 0x4d, 0x93, 0xe7, 0xa6, 0xa5, 0x56, 0x10, 0x6e, 0x06, 0x27, 0xed, 0x14,
	0x21, 0xf5, 0x4c, 0xc3, 0xc4, 0xd8, 0x88, 0x0e, 0x15, 0x0c, 0x55, 0x54, 0x24, 0x54, 0x21, 0xa2,
	0x4b, 0x7c, 0x71, 0x4e, 0xc4, 0x77, 0x96, 0xfd, 0x12, 0xd1, 0x7f, 0xd1, 0x9f, 0xc1, 0x88, 0x04,
	0x3f, 0xa2, 0x63, 0xc5, 0x84, 0x18, 0x0a, 0x4a, 0x06, 0xfe, 0x06, 0xba, 0x3b, 0x87, 0xba, 0x52,
	0x97, 0x7a, 0xb1, 0xde, 0x7b, 0x7e, 0xef, 0xbb, 0xef, 0x74, 0x3e, 0xc3, 0x7e, 0x9c, 0xc8, 0x39,
	0x13, 0x54, 0x8c, 0x98, 0x3f, 0x65, 0x41, 0xc8, 0x12, 0x7f, 0x7e, 0x94, 0x45, 0x24, 0x4e, 0x24,
	0x4a, 0xa7, 0x71, 0xd7, 0x42, 0xb2, 0x17, 0xf3, 0xa3, 0xe6, 0xde, 0x48, 0xa6, 0x91, 0x4c, 0x07,
	0xba, 0xc7, 0x37, 0x89, 0x19, 0x68, 0xee, 0xd2, 0x88, 0x0b, 0xe9, 0xeb, 0x67, 0x56, 0x6a, 0x85,
	0x52, 0x86, 0x53, 0xe6, 0xeb, 0x6c, 0x38, 0x1b, 0xfb, 0xc8, 0x23, 0x96, 0x22, 0x8d, 0xe2, 0xac,
	0xa1, 0x11, 0xca, 0x50, 0x1a, 0x96, 0x8a, 0x4c, 0xf5, 0xe0, 0x23, 0x54, 0xde, 0xea, 0x15, 0x9d,
	0x3d, 0xa8, 0x8a, 0x31, 0x0e, 0x66, 0x33, 0x1e, 0xb8, 0x56, 0xdb, 0xea, 0xd4, 0xfa, 0x9b, 0x62,
	0x8c, 0xef, 0x66, 0x3c, 0x70, 0x5e, 0x41, 0xc5, 0x68, 0xb9, 0x6b, 0xed, 0x72, 0xc7, 0xee, 0xee,
	0x93, 0x87, 0x84, 0x89, 0x01, 0x9d, 0x08, 0x4c, 0x2e, 0xfb, 0xd9, 0xc0, 0xc1, 0xb7, 0x0a, 0xd8,
	0xb9, 0xba, 0xe3, 0xc0, 0x7a, 0x6e, 0x05, 0x1d, 0xab, 0x1a, 0x5e, 0xc6, 0xcc, 0x5d, 0x33, 0x35,
	0x15, 0x3b, 0x0d, 0xd8, 0x08, 0x98, 0x90, 0x91, 0x5b, 0xd6, 0x45, 0x93, 0x38, 0x27, 0x60, 0xc7,
	0x32, 0x45, 0x16, 0x0c, 0x02, 0x8a, 0xcc, 0x5d, 0x6f, 0x5b, 0x1d, 0xbb, 0xdb, 0x24, 0x66, 0xeb,
	0x64, 0xb5, 0x75, 0x72, 0xbe, 0xda, 0x7a, 0xaf, 0x7a, 0x7d, 0xdb, 0x2a, 0x5d, 0xfd, 0x6e, 0x59,
	0x7d, 0x30, 0x83, 0xaf, 0x29, 0x32, 0xe7, 0x0d, 0x6c, 0xb3, 0xf1, 0x98, 0x8d, 0x90, 0xcf, 0x99,
	0x21, 0x6d, 0x3c, 0x82, 0x54, 0xff, 0x3f, 0xab, 0x61, 0x3d, 0x28, 0xd3, 0x08, 0xdd, 0x8a, 0xf2,
	0xec, 0xbd, 0x50, 0x5d, 0xbf, 0x6e, 0x5b, 0x4f, 0xcd, 0x71, 0xa5, 0xc1, 0x27, 0xc2, 0xa5, 0x1f,
	0x51, 0x9c, 0x90, 0x53, 0x81, 0x3f, 0xbe, 0x1f, 0x42, 0x76, 0x8e, 0xa7, 0x02, 0xbf, 0xfc, 0xfd,
	0xfa, 0xdc, 0xea, 0xab, 0x61, 0xe7, 0x02, 0x9e, 0xc4, 0x09, 0x17, 0x03, 0x1a, 0xc7, 0x53, 0xce,
	0x82, 0x81, 0x02, 0x6e, 0x16, 0x04, 0x6e, 0x2b, 0xd2, 0xb1, 0x01, 0x1d, 0x47, 0xe8, 0xf4, 0x61,
	0x4b, 0xb3, 0x87, 0x74, 0xaa, 0xb9, 0xd5, 0x82, 0x5c, 0x50, 0x94, 0x1e, 0x9d, 0x2a, 0xe6, 0x7b,
	0xd8, 0xe1, 0x02, 0xef, 0xe9, 0xd6, 0x0a, 0x62, 0xeb, 0x5c, 0x60, 0xce, 0xf6, 0x0c, 0x6c, 0x45,
	0x5e, 0xc9, 0x42, 0x41, 0x6a, 0x8d, 0x0b, 0xcc, 0x5c, 0x3f, 0xc0, 0xae, 0xc4, 0x09, 0x4b, 0xee,
	0xd9, 0xda, 0x05, 0xb9, 0x3b, 0x1a, 0x95, 0xf3, 0x3d, 0x87, 0xba, 0xa1, 0xaf, 0x8c, 0xb7, 0x0a,
	0x92, 0x6d, 0x8d, 0x31, 0xce, 0xbd, 0xf0, 0x7a, 0xe1, 0x59, 0x37, 0x0b, 0xcf, 0xfa, 0xb3, 0xf0,
	0xac, 0xab, 0xa5, 0x57, 0xba, 0x59, 0x7a, 0xa5, 0x9f, 0x4b, 0xaf, 0x04, 0xcf, 0xb8, 0x7c, 0xf0,
	0xf2, 0x9d, 0x59, 0x17, 0xdd, 0x90, 0xe3, 0x64, 0x36, 0x24, 0x23, 0x19, 0xf9, 0x77, 0x2d, 0x87,
	0x5c, 0xe6, 0x32, 0xff, 0xf3, 0xea, 0x1f, 0xa4, 0x6e, 0x59, 0x3a, 0xac, 0xe8, 0x2f, 0xfd, 0xe5,
	0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x88, 0x6c, 0x78, 0x81, 0xa5, 0x04, 0x00, 0x00,
}

func (m *Ledger) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Ledger) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Ledger) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Ledger) > 0 {
		for iNdEx := len(m.Ledger) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Ledger[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintLedger(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.NftUuid) > 0 {
		i -= len(m.NftUuid)
		copy(dAtA[i:], m.NftUuid)
		i = encodeVarintLedger(dAtA, i, uint64(len(m.NftUuid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LedgerEntry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LedgerEntry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LedgerEntry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.OtherBalAmt.Size()
		i -= size
		if _, err := m.OtherBalAmt.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintLedger(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x62
	{
		size := m.OtherAppliedAmt.Size()
		i -= size
		if _, err := m.OtherAppliedAmt.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintLedger(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x5a
	{
		size := m.IntBalAmt.Size()
		i -= size
		if _, err := m.IntBalAmt.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintLedger(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x52
	{
		size := m.IntAppliedAmt.Size()
		i -= size
		if _, err := m.IntAppliedAmt.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintLedger(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x4a
	{
		size := m.PrinBalAmt.Size()
		i -= size
		if _, err := m.PrinBalAmt.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintLedger(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x42
	{
		size := m.PrinAppliedAmt.Size()
		i -= size
		if _, err := m.PrinAppliedAmt.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintLedger(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	{
		size := m.Amt.Size()
		i -= size
		if _, err := m.Amt.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintLedger(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	n1, err1 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.EffectiveDate, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.EffectiveDate):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintLedger(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x2a
	n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.PostedDate, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.PostedDate):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintLedger(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x22
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintLedger(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Type) > 0 {
		i -= len(m.Type)
		copy(dAtA[i:], m.Type)
		i = encodeVarintLedger(dAtA, i, uint64(len(m.Type)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Uuid) > 0 {
		i -= len(m.Uuid)
		copy(dAtA[i:], m.Uuid)
		i = encodeVarintLedger(dAtA, i, uint64(len(m.Uuid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintLedger(dAtA []byte, offset int, v uint64) int {
	offset -= sovLedger(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Ledger) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NftUuid)
	if l > 0 {
		n += 1 + l + sovLedger(uint64(l))
	}
	if len(m.Ledger) > 0 {
		for _, e := range m.Ledger {
			l = e.Size()
			n += 1 + l + sovLedger(uint64(l))
		}
	}
	return n
}

func (m *LedgerEntry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Uuid)
	if l > 0 {
		n += 1 + l + sovLedger(uint64(l))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovLedger(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovLedger(uint64(l))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.PostedDate)
	n += 1 + l + sovLedger(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.EffectiveDate)
	n += 1 + l + sovLedger(uint64(l))
	l = m.Amt.Size()
	n += 1 + l + sovLedger(uint64(l))
	l = m.PrinAppliedAmt.Size()
	n += 1 + l + sovLedger(uint64(l))
	l = m.PrinBalAmt.Size()
	n += 1 + l + sovLedger(uint64(l))
	l = m.IntAppliedAmt.Size()
	n += 1 + l + sovLedger(uint64(l))
	l = m.IntBalAmt.Size()
	n += 1 + l + sovLedger(uint64(l))
	l = m.OtherAppliedAmt.Size()
	n += 1 + l + sovLedger(uint64(l))
	l = m.OtherBalAmt.Size()
	n += 1 + l + sovLedger(uint64(l))
	return n
}

func sovLedger(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozLedger(x uint64) (n int) {
	return sovLedger(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Ledger) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLedger
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Ledger: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Ledger: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftUuid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLedger
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLedger
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLedger
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NftUuid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ledger", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLedger
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLedger
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLedger
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ledger = append(m.Ledger, &LedgerEntry{})
			if err := m.Ledger[len(m.Ledger)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLedger(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLedger
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LedgerEntry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLedger
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LedgerEntry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LedgerEntry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uuid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLedger
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLedger
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLedger
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uuid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLedger
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLedger
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLedger
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLedger
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLedger
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLedger
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostedDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLedger
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLedger
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLedger
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.PostedDate, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EffectiveDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLedger
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLedger
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLedger
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.EffectiveDate, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLedger
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLedger
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLedger
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrinAppliedAmt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLedger
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLedger
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLedger
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.PrinAppliedAmt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrinBalAmt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLedger
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLedger
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLedger
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.PrinBalAmt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IntAppliedAmt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLedger
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLedger
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLedger
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.IntAppliedAmt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IntBalAmt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLedger
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLedger
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLedger
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.IntBalAmt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtherAppliedAmt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLedger
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLedger
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLedger
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.OtherAppliedAmt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OtherBalAmt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLedger
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLedger
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLedger
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.OtherBalAmt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLedger(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLedger
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipLedger(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowLedger
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLedger
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLedger
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthLedger
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupLedger
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthLedger
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthLedger        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowLedger          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupLedger = fmt.Errorf("proto: unexpected end of group")
)
