// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: provenance/exchange/v1/tx.proto

package exchange

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgCreateAskRequest is a request message for the CreateAsk endpoint.
type MsgCreateAskRequest struct {
	// ask_order is the details of the order being created.
	AskOrder AskOrder `protobuf:"bytes,1,opt,name=ask_order,json=askOrder,proto3" json:"ask_order"`
	// order_creation_fee is the fee that is being paid to create this order.
	OrderCreationFee *types.Coin `protobuf:"bytes,2,opt,name=order_creation_fee,json=orderCreationFee,proto3" json:"order_creation_fee,omitempty"`
}

func (m *MsgCreateAskRequest) Reset()         { *m = MsgCreateAskRequest{} }
func (m *MsgCreateAskRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateAskRequest) ProtoMessage()    {}
func (*MsgCreateAskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{0}
}
func (m *MsgCreateAskRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAskRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAskRequest.Merge(m, src)
}
func (m *MsgCreateAskRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAskRequest proto.InternalMessageInfo

func (m *MsgCreateAskRequest) GetAskOrder() AskOrder {
	if m != nil {
		return m.AskOrder
	}
	return AskOrder{}
}

func (m *MsgCreateAskRequest) GetOrderCreationFee() *types.Coin {
	if m != nil {
		return m.OrderCreationFee
	}
	return nil
}

// MsgCreateAskResponse is a response message for the CreateAsk endpoint.
type MsgCreateAskResponse struct {
	// order_id is the id of the order created.
	OrderId uint64 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (m *MsgCreateAskResponse) Reset()         { *m = MsgCreateAskResponse{} }
func (m *MsgCreateAskResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateAskResponse) ProtoMessage()    {}
func (*MsgCreateAskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{1}
}
func (m *MsgCreateAskResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAskResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAskResponse.Merge(m, src)
}
func (m *MsgCreateAskResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAskResponse proto.InternalMessageInfo

func (m *MsgCreateAskResponse) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

// MsgCreateBidRequest is a request message for the CreateBid endpoint.
type MsgCreateBidRequest struct {
	// bid_order is the details of the order being created.
	BidOrder BidOrder `protobuf:"bytes,1,opt,name=bid_order,json=bidOrder,proto3" json:"bid_order"`
	// order_creation_fee is the fee that is being paid to create this order.
	OrderCreationFee *types.Coin `protobuf:"bytes,2,opt,name=order_creation_fee,json=orderCreationFee,proto3" json:"order_creation_fee,omitempty"`
}

func (m *MsgCreateBidRequest) Reset()         { *m = MsgCreateBidRequest{} }
func (m *MsgCreateBidRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateBidRequest) ProtoMessage()    {}
func (*MsgCreateBidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{2}
}
func (m *MsgCreateBidRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateBidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateBidRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateBidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateBidRequest.Merge(m, src)
}
func (m *MsgCreateBidRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateBidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateBidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateBidRequest proto.InternalMessageInfo

func (m *MsgCreateBidRequest) GetBidOrder() BidOrder {
	if m != nil {
		return m.BidOrder
	}
	return BidOrder{}
}

func (m *MsgCreateBidRequest) GetOrderCreationFee() *types.Coin {
	if m != nil {
		return m.OrderCreationFee
	}
	return nil
}

// MsgCreateBidResponse is a response message for the CreateBid endpoint.
type MsgCreateBidResponse struct {
	// order_id is the id of the order created.
	OrderId uint64 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (m *MsgCreateBidResponse) Reset()         { *m = MsgCreateBidResponse{} }
func (m *MsgCreateBidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateBidResponse) ProtoMessage()    {}
func (*MsgCreateBidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{3}
}
func (m *MsgCreateBidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateBidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateBidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateBidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateBidResponse.Merge(m, src)
}
func (m *MsgCreateBidResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateBidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateBidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateBidResponse proto.InternalMessageInfo

func (m *MsgCreateBidResponse) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

// MsgCancelOrderRequest is a request message for the CancelOrder endpoint.
type MsgCancelOrderRequest struct {
	// owner is the account that owns the order. E.g. the seller for ask orders or buyer for bid orders.
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// order_id is the id of the order to cancel.
	OrderId uint64 `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (m *MsgCancelOrderRequest) Reset()         { *m = MsgCancelOrderRequest{} }
func (m *MsgCancelOrderRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCancelOrderRequest) ProtoMessage()    {}
func (*MsgCancelOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{4}
}
func (m *MsgCancelOrderRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelOrderRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelOrderRequest.Merge(m, src)
}
func (m *MsgCancelOrderRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelOrderRequest proto.InternalMessageInfo

func (m *MsgCancelOrderRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgCancelOrderRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

// MsgCancelOrderResponse is a response message for the CancelOrder endpoint.
type MsgCancelOrderResponse struct {
}

func (m *MsgCancelOrderResponse) Reset()         { *m = MsgCancelOrderResponse{} }
func (m *MsgCancelOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCancelOrderResponse) ProtoMessage()    {}
func (*MsgCancelOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{5}
}
func (m *MsgCancelOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelOrderResponse.Merge(m, src)
}
func (m *MsgCancelOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelOrderResponse proto.InternalMessageInfo

// MsgFillBidsRequest is a request message for the FillBids endpoint.
type MsgFillBidsRequest struct {
}

func (m *MsgFillBidsRequest) Reset()         { *m = MsgFillBidsRequest{} }
func (m *MsgFillBidsRequest) String() string { return proto.CompactTextString(m) }
func (*MsgFillBidsRequest) ProtoMessage()    {}
func (*MsgFillBidsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{6}
}
func (m *MsgFillBidsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFillBidsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFillBidsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFillBidsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFillBidsRequest.Merge(m, src)
}
func (m *MsgFillBidsRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgFillBidsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFillBidsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFillBidsRequest proto.InternalMessageInfo

// MsgFillBidsResponse is a response message for the FillBids endpoint.
type MsgFillBidsResponse struct {
}

func (m *MsgFillBidsResponse) Reset()         { *m = MsgFillBidsResponse{} }
func (m *MsgFillBidsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFillBidsResponse) ProtoMessage()    {}
func (*MsgFillBidsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{7}
}
func (m *MsgFillBidsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFillBidsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFillBidsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFillBidsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFillBidsResponse.Merge(m, src)
}
func (m *MsgFillBidsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFillBidsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFillBidsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFillBidsResponse proto.InternalMessageInfo

// MsgFillAsksRequest is a request message for the FillAsks endpoint.
type MsgFillAsksRequest struct {
}

func (m *MsgFillAsksRequest) Reset()         { *m = MsgFillAsksRequest{} }
func (m *MsgFillAsksRequest) String() string { return proto.CompactTextString(m) }
func (*MsgFillAsksRequest) ProtoMessage()    {}
func (*MsgFillAsksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{8}
}
func (m *MsgFillAsksRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFillAsksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFillAsksRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFillAsksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFillAsksRequest.Merge(m, src)
}
func (m *MsgFillAsksRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgFillAsksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFillAsksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFillAsksRequest proto.InternalMessageInfo

// MsgFillAsksResponse is a response message for the FillAsks endpoint.
type MsgFillAsksResponse struct {
}

func (m *MsgFillAsksResponse) Reset()         { *m = MsgFillAsksResponse{} }
func (m *MsgFillAsksResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFillAsksResponse) ProtoMessage()    {}
func (*MsgFillAsksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{9}
}
func (m *MsgFillAsksResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFillAsksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFillAsksResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFillAsksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFillAsksResponse.Merge(m, src)
}
func (m *MsgFillAsksResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFillAsksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFillAsksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFillAsksResponse proto.InternalMessageInfo

// MsgMarketSettleRequest is a request message for the MarketSettle endpoint.
type MsgMarketSettleRequest struct {
}

func (m *MsgMarketSettleRequest) Reset()         { *m = MsgMarketSettleRequest{} }
func (m *MsgMarketSettleRequest) String() string { return proto.CompactTextString(m) }
func (*MsgMarketSettleRequest) ProtoMessage()    {}
func (*MsgMarketSettleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{10}
}
func (m *MsgMarketSettleRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMarketSettleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMarketSettleRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMarketSettleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMarketSettleRequest.Merge(m, src)
}
func (m *MsgMarketSettleRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgMarketSettleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMarketSettleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMarketSettleRequest proto.InternalMessageInfo

// MsgMarketSettleResponse is a response message for the MarketSettle endpoint.
type MsgMarketSettleResponse struct {
}

func (m *MsgMarketSettleResponse) Reset()         { *m = MsgMarketSettleResponse{} }
func (m *MsgMarketSettleResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMarketSettleResponse) ProtoMessage()    {}
func (*MsgMarketSettleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{11}
}
func (m *MsgMarketSettleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMarketSettleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMarketSettleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMarketSettleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMarketSettleResponse.Merge(m, src)
}
func (m *MsgMarketSettleResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMarketSettleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMarketSettleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMarketSettleResponse proto.InternalMessageInfo

// MsgMarketWithdrawRequest is a request message for the MarketWithdraw endpoint.
type MsgMarketWithdrawRequest struct {
}

func (m *MsgMarketWithdrawRequest) Reset()         { *m = MsgMarketWithdrawRequest{} }
func (m *MsgMarketWithdrawRequest) String() string { return proto.CompactTextString(m) }
func (*MsgMarketWithdrawRequest) ProtoMessage()    {}
func (*MsgMarketWithdrawRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{12}
}
func (m *MsgMarketWithdrawRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMarketWithdrawRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMarketWithdrawRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMarketWithdrawRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMarketWithdrawRequest.Merge(m, src)
}
func (m *MsgMarketWithdrawRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgMarketWithdrawRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMarketWithdrawRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMarketWithdrawRequest proto.InternalMessageInfo

// MsgMarketWithdrawResponse is a response message for the MarketWithdraw endpoint.
type MsgMarketWithdrawResponse struct {
}

func (m *MsgMarketWithdrawResponse) Reset()         { *m = MsgMarketWithdrawResponse{} }
func (m *MsgMarketWithdrawResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMarketWithdrawResponse) ProtoMessage()    {}
func (*MsgMarketWithdrawResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{13}
}
func (m *MsgMarketWithdrawResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMarketWithdrawResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMarketWithdrawResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMarketWithdrawResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMarketWithdrawResponse.Merge(m, src)
}
func (m *MsgMarketWithdrawResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMarketWithdrawResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMarketWithdrawResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMarketWithdrawResponse proto.InternalMessageInfo

// MsgMarketUpdateDetailsRequest is a request message for the MarketUpdateDetails endpoint.
type MsgMarketUpdateDetailsRequest struct {
}

func (m *MsgMarketUpdateDetailsRequest) Reset()         { *m = MsgMarketUpdateDetailsRequest{} }
func (m *MsgMarketUpdateDetailsRequest) String() string { return proto.CompactTextString(m) }
func (*MsgMarketUpdateDetailsRequest) ProtoMessage()    {}
func (*MsgMarketUpdateDetailsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{14}
}
func (m *MsgMarketUpdateDetailsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMarketUpdateDetailsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMarketUpdateDetailsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMarketUpdateDetailsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMarketUpdateDetailsRequest.Merge(m, src)
}
func (m *MsgMarketUpdateDetailsRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgMarketUpdateDetailsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMarketUpdateDetailsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMarketUpdateDetailsRequest proto.InternalMessageInfo

// MsgMarketUpdateDetailsResponse is a response message for the MarketUpdateDetails endpoint.
type MsgMarketUpdateDetailsResponse struct {
}

func (m *MsgMarketUpdateDetailsResponse) Reset()         { *m = MsgMarketUpdateDetailsResponse{} }
func (m *MsgMarketUpdateDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMarketUpdateDetailsResponse) ProtoMessage()    {}
func (*MsgMarketUpdateDetailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{15}
}
func (m *MsgMarketUpdateDetailsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMarketUpdateDetailsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMarketUpdateDetailsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMarketUpdateDetailsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMarketUpdateDetailsResponse.Merge(m, src)
}
func (m *MsgMarketUpdateDetailsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMarketUpdateDetailsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMarketUpdateDetailsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMarketUpdateDetailsResponse proto.InternalMessageInfo

// MsgMarketUpdateEnabledRequest is a request message for the MarketUpdateEnabled endpoint.
type MsgMarketUpdateEnabledRequest struct {
}

func (m *MsgMarketUpdateEnabledRequest) Reset()         { *m = MsgMarketUpdateEnabledRequest{} }
func (m *MsgMarketUpdateEnabledRequest) String() string { return proto.CompactTextString(m) }
func (*MsgMarketUpdateEnabledRequest) ProtoMessage()    {}
func (*MsgMarketUpdateEnabledRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{16}
}
func (m *MsgMarketUpdateEnabledRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMarketUpdateEnabledRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMarketUpdateEnabledRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMarketUpdateEnabledRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMarketUpdateEnabledRequest.Merge(m, src)
}
func (m *MsgMarketUpdateEnabledRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgMarketUpdateEnabledRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMarketUpdateEnabledRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMarketUpdateEnabledRequest proto.InternalMessageInfo

// MsgMarketUpdateEnabledResponse is a response message for the MarketUpdateEnabled endpoint.
type MsgMarketUpdateEnabledResponse struct {
}

func (m *MsgMarketUpdateEnabledResponse) Reset()         { *m = MsgMarketUpdateEnabledResponse{} }
func (m *MsgMarketUpdateEnabledResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMarketUpdateEnabledResponse) ProtoMessage()    {}
func (*MsgMarketUpdateEnabledResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{17}
}
func (m *MsgMarketUpdateEnabledResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMarketUpdateEnabledResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMarketUpdateEnabledResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMarketUpdateEnabledResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMarketUpdateEnabledResponse.Merge(m, src)
}
func (m *MsgMarketUpdateEnabledResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMarketUpdateEnabledResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMarketUpdateEnabledResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMarketUpdateEnabledResponse proto.InternalMessageInfo

// MsgMarketUpdateUserSettleRequest is a request message for the MarketUpdateUserSettle endpoint.
type MsgMarketUpdateUserSettleRequest struct {
}

func (m *MsgMarketUpdateUserSettleRequest) Reset()         { *m = MsgMarketUpdateUserSettleRequest{} }
func (m *MsgMarketUpdateUserSettleRequest) String() string { return proto.CompactTextString(m) }
func (*MsgMarketUpdateUserSettleRequest) ProtoMessage()    {}
func (*MsgMarketUpdateUserSettleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{18}
}
func (m *MsgMarketUpdateUserSettleRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMarketUpdateUserSettleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMarketUpdateUserSettleRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMarketUpdateUserSettleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMarketUpdateUserSettleRequest.Merge(m, src)
}
func (m *MsgMarketUpdateUserSettleRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgMarketUpdateUserSettleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMarketUpdateUserSettleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMarketUpdateUserSettleRequest proto.InternalMessageInfo

// MsgMarketUpdateUserSettleResponse is a response message for the MarketUpdateUserSettle endpoint.
type MsgMarketUpdateUserSettleResponse struct {
}

func (m *MsgMarketUpdateUserSettleResponse) Reset()         { *m = MsgMarketUpdateUserSettleResponse{} }
func (m *MsgMarketUpdateUserSettleResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMarketUpdateUserSettleResponse) ProtoMessage()    {}
func (*MsgMarketUpdateUserSettleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{19}
}
func (m *MsgMarketUpdateUserSettleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMarketUpdateUserSettleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMarketUpdateUserSettleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMarketUpdateUserSettleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMarketUpdateUserSettleResponse.Merge(m, src)
}
func (m *MsgMarketUpdateUserSettleResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMarketUpdateUserSettleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMarketUpdateUserSettleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMarketUpdateUserSettleResponse proto.InternalMessageInfo

// MsgMarketManagePermissionsRequest is a request message for the MarketManagePermissions endpoint.
type MsgMarketManagePermissionsRequest struct {
}

func (m *MsgMarketManagePermissionsRequest) Reset()         { *m = MsgMarketManagePermissionsRequest{} }
func (m *MsgMarketManagePermissionsRequest) String() string { return proto.CompactTextString(m) }
func (*MsgMarketManagePermissionsRequest) ProtoMessage()    {}
func (*MsgMarketManagePermissionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{20}
}
func (m *MsgMarketManagePermissionsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMarketManagePermissionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMarketManagePermissionsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMarketManagePermissionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMarketManagePermissionsRequest.Merge(m, src)
}
func (m *MsgMarketManagePermissionsRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgMarketManagePermissionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMarketManagePermissionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMarketManagePermissionsRequest proto.InternalMessageInfo

// MsgMarketManagePermissionsResponse is a response message for the MarketManagePermissions endpoint.
type MsgMarketManagePermissionsResponse struct {
}

func (m *MsgMarketManagePermissionsResponse) Reset()         { *m = MsgMarketManagePermissionsResponse{} }
func (m *MsgMarketManagePermissionsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMarketManagePermissionsResponse) ProtoMessage()    {}
func (*MsgMarketManagePermissionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{21}
}
func (m *MsgMarketManagePermissionsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMarketManagePermissionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMarketManagePermissionsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMarketManagePermissionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMarketManagePermissionsResponse.Merge(m, src)
}
func (m *MsgMarketManagePermissionsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMarketManagePermissionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMarketManagePermissionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMarketManagePermissionsResponse proto.InternalMessageInfo

// MsgMarketManageReqAttrsRequest is a request message for the MarketManageReqAttrs endpoint.
type MsgMarketManageReqAttrsRequest struct {
}

func (m *MsgMarketManageReqAttrsRequest) Reset()         { *m = MsgMarketManageReqAttrsRequest{} }
func (m *MsgMarketManageReqAttrsRequest) String() string { return proto.CompactTextString(m) }
func (*MsgMarketManageReqAttrsRequest) ProtoMessage()    {}
func (*MsgMarketManageReqAttrsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{22}
}
func (m *MsgMarketManageReqAttrsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMarketManageReqAttrsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMarketManageReqAttrsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMarketManageReqAttrsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMarketManageReqAttrsRequest.Merge(m, src)
}
func (m *MsgMarketManageReqAttrsRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgMarketManageReqAttrsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMarketManageReqAttrsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMarketManageReqAttrsRequest proto.InternalMessageInfo

// MsgMarketManageReqAttrsResponse is a response message for the MarketManageReqAttrs endpoint.
type MsgMarketManageReqAttrsResponse struct {
}

func (m *MsgMarketManageReqAttrsResponse) Reset()         { *m = MsgMarketManageReqAttrsResponse{} }
func (m *MsgMarketManageReqAttrsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMarketManageReqAttrsResponse) ProtoMessage()    {}
func (*MsgMarketManageReqAttrsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{23}
}
func (m *MsgMarketManageReqAttrsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMarketManageReqAttrsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMarketManageReqAttrsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMarketManageReqAttrsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMarketManageReqAttrsResponse.Merge(m, src)
}
func (m *MsgMarketManageReqAttrsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMarketManageReqAttrsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMarketManageReqAttrsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMarketManageReqAttrsResponse proto.InternalMessageInfo

// MsgGovCreateMarketRequest is a request message for the GovCreateMarket endpoint.
type MsgGovCreateMarketRequest struct {
	// authority should be the governance module account address.
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// market is the initial market configuration.
	// If the market_id is 0, the next available market_id will be used (once voting ends).
	// If it is not zero, it must not yet be in use when the voting period ends.
	Market Market `protobuf:"bytes,2,opt,name=market,proto3" json:"market"`
}

func (m *MsgGovCreateMarketRequest) Reset()         { *m = MsgGovCreateMarketRequest{} }
func (m *MsgGovCreateMarketRequest) String() string { return proto.CompactTextString(m) }
func (*MsgGovCreateMarketRequest) ProtoMessage()    {}
func (*MsgGovCreateMarketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{24}
}
func (m *MsgGovCreateMarketRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGovCreateMarketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGovCreateMarketRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGovCreateMarketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGovCreateMarketRequest.Merge(m, src)
}
func (m *MsgGovCreateMarketRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgGovCreateMarketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGovCreateMarketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGovCreateMarketRequest proto.InternalMessageInfo

func (m *MsgGovCreateMarketRequest) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgGovCreateMarketRequest) GetMarket() Market {
	if m != nil {
		return m.Market
	}
	return Market{}
}

// MsgGovCreateMarketResponse is a response message for the GovCreateMarket endpoint.
type MsgGovCreateMarketResponse struct {
}

func (m *MsgGovCreateMarketResponse) Reset()         { *m = MsgGovCreateMarketResponse{} }
func (m *MsgGovCreateMarketResponse) String() string { return proto.CompactTextString(m) }
func (*MsgGovCreateMarketResponse) ProtoMessage()    {}
func (*MsgGovCreateMarketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{25}
}
func (m *MsgGovCreateMarketResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGovCreateMarketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGovCreateMarketResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGovCreateMarketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGovCreateMarketResponse.Merge(m, src)
}
func (m *MsgGovCreateMarketResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgGovCreateMarketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGovCreateMarketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGovCreateMarketResponse proto.InternalMessageInfo

// MsgGovManageFeesRequest is a request message for the GovManageFees endpoint.
type MsgGovManageFeesRequest struct {
	// authority should be the governance module account address.
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// market_id is the market id that will get these fee updates.
	MarketId uint32 `protobuf:"varint,2,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	// add_fee_create_ask_flat are the create-ask flat fee options to add.
	AddFeeCreateAskFlat []types.Coin `protobuf:"bytes,3,rep,name=add_fee_create_ask_flat,json=addFeeCreateAskFlat,proto3" json:"add_fee_create_ask_flat"`
	// remove_fee_create_ask_flat are the create-ask flat fee options to remove.
	RemoveFeeCreateAskFlat []types.Coin `protobuf:"bytes,4,rep,name=remove_fee_create_ask_flat,json=removeFeeCreateAskFlat,proto3" json:"remove_fee_create_ask_flat"`
	// add_fee_create_bid_flat are the create-bid flat fee options to add.
	AddFeeCreateBidFlat []types.Coin `protobuf:"bytes,5,rep,name=add_fee_create_bid_flat,json=addFeeCreateBidFlat,proto3" json:"add_fee_create_bid_flat"`
	// remove_fee_create_bid_flat are the create-bid flat fee options to remove.
	RemoveFeeCreateBidFlat []types.Coin `protobuf:"bytes,6,rep,name=remove_fee_create_bid_flat,json=removeFeeCreateBidFlat,proto3" json:"remove_fee_create_bid_flat"`
	// add_fee_seller_settlement_flat are the seller settlement flat fee options to add.
	AddFeeSellerSettlementFlat []types.Coin `protobuf:"bytes,7,rep,name=add_fee_seller_settlement_flat,json=addFeeSellerSettlementFlat,proto3" json:"add_fee_seller_settlement_flat"`
	// remove_fee_seller_settlement_flat are the seller settlement flat fee options to remove.
	RemoveFeeSellerSettlementFlat []types.Coin `protobuf:"bytes,8,rep,name=remove_fee_seller_settlement_flat,json=removeFeeSellerSettlementFlat,proto3" json:"remove_fee_seller_settlement_flat"`
	// add_fee_seller_settlement_ratios are the seller settlement fee ratios to add.
	AddFeeSellerSettlementRatios []FeeRatio `protobuf:"bytes,9,rep,name=add_fee_seller_settlement_ratios,json=addFeeSellerSettlementRatios,proto3" json:"add_fee_seller_settlement_ratios"`
	// remove_fee_seller_settlement_ratios are the seller settlement fee ratios to remove.
	RemoveFeeSellerSettlementRatios []FeeRatio `protobuf:"bytes,10,rep,name=remove_fee_seller_settlement_ratios,json=removeFeeSellerSettlementRatios,proto3" json:"remove_fee_seller_settlement_ratios"`
	// add_fee_buyer_settlement_flat are the buyer settlement flat fee options to add.
	AddFeeBuyerSettlementFlat []types.Coin `protobuf:"bytes,11,rep,name=add_fee_buyer_settlement_flat,json=addFeeBuyerSettlementFlat,proto3" json:"add_fee_buyer_settlement_flat"`
	// remove_fee_buyer_settlement_flat are the buyer settlement flat fee options to remove.
	RemoveFeeBuyerSettlementFlat []types.Coin `protobuf:"bytes,12,rep,name=remove_fee_buyer_settlement_flat,json=removeFeeBuyerSettlementFlat,proto3" json:"remove_fee_buyer_settlement_flat"`
	// add_fee_buyer_settlement_ratios are the buyer settlement fee ratios to add.
	AddFeeBuyerSettlementRatios []FeeRatio `protobuf:"bytes,13,rep,name=add_fee_buyer_settlement_ratios,json=addFeeBuyerSettlementRatios,proto3" json:"add_fee_buyer_settlement_ratios"`
	// remove_fee_buyer_settlement_ratios are the buyer settlement fee ratios to remove.
	RemoveFeeBuyerSettlementRatios []FeeRatio `protobuf:"bytes,14,rep,name=remove_fee_buyer_settlement_ratios,json=removeFeeBuyerSettlementRatios,proto3" json:"remove_fee_buyer_settlement_ratios"`
}

func (m *MsgGovManageFeesRequest) Reset()         { *m = MsgGovManageFeesRequest{} }
func (m *MsgGovManageFeesRequest) String() string { return proto.CompactTextString(m) }
func (*MsgGovManageFeesRequest) ProtoMessage()    {}
func (*MsgGovManageFeesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{26}
}
func (m *MsgGovManageFeesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGovManageFeesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGovManageFeesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGovManageFeesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGovManageFeesRequest.Merge(m, src)
}
func (m *MsgGovManageFeesRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgGovManageFeesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGovManageFeesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGovManageFeesRequest proto.InternalMessageInfo

func (m *MsgGovManageFeesRequest) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgGovManageFeesRequest) GetMarketId() uint32 {
	if m != nil {
		return m.MarketId
	}
	return 0
}

func (m *MsgGovManageFeesRequest) GetAddFeeCreateAskFlat() []types.Coin {
	if m != nil {
		return m.AddFeeCreateAskFlat
	}
	return nil
}

func (m *MsgGovManageFeesRequest) GetRemoveFeeCreateAskFlat() []types.Coin {
	if m != nil {
		return m.RemoveFeeCreateAskFlat
	}
	return nil
}

func (m *MsgGovManageFeesRequest) GetAddFeeCreateBidFlat() []types.Coin {
	if m != nil {
		return m.AddFeeCreateBidFlat
	}
	return nil
}

func (m *MsgGovManageFeesRequest) GetRemoveFeeCreateBidFlat() []types.Coin {
	if m != nil {
		return m.RemoveFeeCreateBidFlat
	}
	return nil
}

func (m *MsgGovManageFeesRequest) GetAddFeeSellerSettlementFlat() []types.Coin {
	if m != nil {
		return m.AddFeeSellerSettlementFlat
	}
	return nil
}

func (m *MsgGovManageFeesRequest) GetRemoveFeeSellerSettlementFlat() []types.Coin {
	if m != nil {
		return m.RemoveFeeSellerSettlementFlat
	}
	return nil
}

func (m *MsgGovManageFeesRequest) GetAddFeeSellerSettlementRatios() []FeeRatio {
	if m != nil {
		return m.AddFeeSellerSettlementRatios
	}
	return nil
}

func (m *MsgGovManageFeesRequest) GetRemoveFeeSellerSettlementRatios() []FeeRatio {
	if m != nil {
		return m.RemoveFeeSellerSettlementRatios
	}
	return nil
}

func (m *MsgGovManageFeesRequest) GetAddFeeBuyerSettlementFlat() []types.Coin {
	if m != nil {
		return m.AddFeeBuyerSettlementFlat
	}
	return nil
}

func (m *MsgGovManageFeesRequest) GetRemoveFeeBuyerSettlementFlat() []types.Coin {
	if m != nil {
		return m.RemoveFeeBuyerSettlementFlat
	}
	return nil
}

func (m *MsgGovManageFeesRequest) GetAddFeeBuyerSettlementRatios() []FeeRatio {
	if m != nil {
		return m.AddFeeBuyerSettlementRatios
	}
	return nil
}

func (m *MsgGovManageFeesRequest) GetRemoveFeeBuyerSettlementRatios() []FeeRatio {
	if m != nil {
		return m.RemoveFeeBuyerSettlementRatios
	}
	return nil
}

// MsgGovManageFeesResponse is a response message for the GovManageFees endpoint.
type MsgGovManageFeesResponse struct {
}

func (m *MsgGovManageFeesResponse) Reset()         { *m = MsgGovManageFeesResponse{} }
func (m *MsgGovManageFeesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgGovManageFeesResponse) ProtoMessage()    {}
func (*MsgGovManageFeesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{27}
}
func (m *MsgGovManageFeesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGovManageFeesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGovManageFeesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGovManageFeesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGovManageFeesResponse.Merge(m, src)
}
func (m *MsgGovManageFeesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgGovManageFeesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGovManageFeesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGovManageFeesResponse proto.InternalMessageInfo

// MsgGovUpdateParamsRequest is a request message for the GovUpdateParams endpoint.
type MsgGovUpdateParamsRequest struct {
	// authority should be the governance module account address.
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// params are the new param values to set
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgGovUpdateParamsRequest) Reset()         { *m = MsgGovUpdateParamsRequest{} }
func (m *MsgGovUpdateParamsRequest) String() string { return proto.CompactTextString(m) }
func (*MsgGovUpdateParamsRequest) ProtoMessage()    {}
func (*MsgGovUpdateParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{28}
}
func (m *MsgGovUpdateParamsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGovUpdateParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGovUpdateParamsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGovUpdateParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGovUpdateParamsRequest.Merge(m, src)
}
func (m *MsgGovUpdateParamsRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgGovUpdateParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGovUpdateParamsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGovUpdateParamsRequest proto.InternalMessageInfo

func (m *MsgGovUpdateParamsRequest) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgGovUpdateParamsRequest) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgGovUpdateParamsResponse is a response message for the GovUpdateParams endpoint.
type MsgGovUpdateParamsResponse struct {
}

func (m *MsgGovUpdateParamsResponse) Reset()         { *m = MsgGovUpdateParamsResponse{} }
func (m *MsgGovUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgGovUpdateParamsResponse) ProtoMessage()    {}
func (*MsgGovUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e333fcffc093bd1b, []int{29}
}
func (m *MsgGovUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGovUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGovUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGovUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGovUpdateParamsResponse.Merge(m, src)
}
func (m *MsgGovUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgGovUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGovUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGovUpdateParamsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateAskRequest)(nil), "provenance.exchange.v1.MsgCreateAskRequest")
	proto.RegisterType((*MsgCreateAskResponse)(nil), "provenance.exchange.v1.MsgCreateAskResponse")
	proto.RegisterType((*MsgCreateBidRequest)(nil), "provenance.exchange.v1.MsgCreateBidRequest")
	proto.RegisterType((*MsgCreateBidResponse)(nil), "provenance.exchange.v1.MsgCreateBidResponse")
	proto.RegisterType((*MsgCancelOrderRequest)(nil), "provenance.exchange.v1.MsgCancelOrderRequest")
	proto.RegisterType((*MsgCancelOrderResponse)(nil), "provenance.exchange.v1.MsgCancelOrderResponse")
	proto.RegisterType((*MsgFillBidsRequest)(nil), "provenance.exchange.v1.MsgFillBidsRequest")
	proto.RegisterType((*MsgFillBidsResponse)(nil), "provenance.exchange.v1.MsgFillBidsResponse")
	proto.RegisterType((*MsgFillAsksRequest)(nil), "provenance.exchange.v1.MsgFillAsksRequest")
	proto.RegisterType((*MsgFillAsksResponse)(nil), "provenance.exchange.v1.MsgFillAsksResponse")
	proto.RegisterType((*MsgMarketSettleRequest)(nil), "provenance.exchange.v1.MsgMarketSettleRequest")
	proto.RegisterType((*MsgMarketSettleResponse)(nil), "provenance.exchange.v1.MsgMarketSettleResponse")
	proto.RegisterType((*MsgMarketWithdrawRequest)(nil), "provenance.exchange.v1.MsgMarketWithdrawRequest")
	proto.RegisterType((*MsgMarketWithdrawResponse)(nil), "provenance.exchange.v1.MsgMarketWithdrawResponse")
	proto.RegisterType((*MsgMarketUpdateDetailsRequest)(nil), "provenance.exchange.v1.MsgMarketUpdateDetailsRequest")
	proto.RegisterType((*MsgMarketUpdateDetailsResponse)(nil), "provenance.exchange.v1.MsgMarketUpdateDetailsResponse")
	proto.RegisterType((*MsgMarketUpdateEnabledRequest)(nil), "provenance.exchange.v1.MsgMarketUpdateEnabledRequest")
	proto.RegisterType((*MsgMarketUpdateEnabledResponse)(nil), "provenance.exchange.v1.MsgMarketUpdateEnabledResponse")
	proto.RegisterType((*MsgMarketUpdateUserSettleRequest)(nil), "provenance.exchange.v1.MsgMarketUpdateUserSettleRequest")
	proto.RegisterType((*MsgMarketUpdateUserSettleResponse)(nil), "provenance.exchange.v1.MsgMarketUpdateUserSettleResponse")
	proto.RegisterType((*MsgMarketManagePermissionsRequest)(nil), "provenance.exchange.v1.MsgMarketManagePermissionsRequest")
	proto.RegisterType((*MsgMarketManagePermissionsResponse)(nil), "provenance.exchange.v1.MsgMarketManagePermissionsResponse")
	proto.RegisterType((*MsgMarketManageReqAttrsRequest)(nil), "provenance.exchange.v1.MsgMarketManageReqAttrsRequest")
	proto.RegisterType((*MsgMarketManageReqAttrsResponse)(nil), "provenance.exchange.v1.MsgMarketManageReqAttrsResponse")
	proto.RegisterType((*MsgGovCreateMarketRequest)(nil), "provenance.exchange.v1.MsgGovCreateMarketRequest")
	proto.RegisterType((*MsgGovCreateMarketResponse)(nil), "provenance.exchange.v1.MsgGovCreateMarketResponse")
	proto.RegisterType((*MsgGovManageFeesRequest)(nil), "provenance.exchange.v1.MsgGovManageFeesRequest")
	proto.RegisterType((*MsgGovManageFeesResponse)(nil), "provenance.exchange.v1.MsgGovManageFeesResponse")
	proto.RegisterType((*MsgGovUpdateParamsRequest)(nil), "provenance.exchange.v1.MsgGovUpdateParamsRequest")
	proto.RegisterType((*MsgGovUpdateParamsResponse)(nil), "provenance.exchange.v1.MsgGovUpdateParamsResponse")
}

func init() { proto.RegisterFile("provenance/exchange/v1/tx.proto", fileDescriptor_e333fcffc093bd1b) }

var fileDescriptor_e333fcffc093bd1b = []byte{
	// 1253 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0x4f, 0x4f, 0xe3, 0x46,
	0x1b, 0x27, 0x0b, 0xcb, 0x92, 0x87, 0x85, 0x5d, 0xcd, 0x06, 0x48, 0x0c, 0x38, 0x21, 0xbc, 0x87,
	0x57, 0xbb, 0xc5, 0x59, 0xa8, 0x4a, 0x5b, 0xd4, 0x0b, 0xa1, 0x0d, 0xda, 0x03, 0x2a, 0x0a, 0x42,
	0x95, 0xda, 0x43, 0x34, 0x89, 0x07, 0x63, 0xe1, 0x78, 0x58, 0x8f, 0xc9, 0xb2, 0xd7, 0xaa, 0x52,
	0x4f, 0x95, 0xf6, 0xd8, 0x6b, 0xbf, 0x41, 0x0f, 0xbd, 0xb4, 0x9f, 0x60, 0xd5, 0xd3, 0xaa, 0xa7,
	0x9e, 0xaa, 0x0a, 0x0e, 0xfd, 0x1a, 0x95, 0x67, 0xc6, 0x8e, 0x1d, 0xdb, 0xb1, 0x43, 0xf7, 0x86,
	0x3d, 0xbf, 0xe7, 0xf7, 0x67, 0xb0, 0xe7, 0x79, 0x1c, 0xa8, 0x5e, 0x3a, 0x74, 0x40, 0x6c, 0x6c,
	0xf7, 0x48, 0x83, 0x5c, 0xf7, 0xce, 0xb1, 0x6d, 0x90, 0xc6, 0x60, 0xbb, 0xe1, 0x5e, 0x6b, 0x97,
	0x0e, 0x75, 0x29, 0x5a, 0x1e, 0x02, 0x34, 0x1f, 0xa0, 0x0d, 0xb6, 0x15, 0xb5, 0x47, 0x59, 0x9f,
	0xb2, 0x46, 0x17, 0x33, 0xaf, 0xa0, 0x4b, 0x5c, 0xbc, 0xdd, 0xe8, 0x51, 0xd3, 0x16, 0x75, 0xca,
	0x8a, 0x5c, 0xef, 0x33, 0xc3, 0xe3, 0xeb, 0x33, 0x43, 0x2e, 0x54, 0xc4, 0x42, 0x87, 0x5f, 0x35,
	0xc4, 0x85, 0x5c, 0x2a, 0x19, 0xd4, 0xa0, 0xe2, 0xbe, 0xf7, 0x97, 0xbc, 0xbb, 0x99, 0x62, 0xb1,
	0x8f, 0x9d, 0x0b, 0xe2, 0x66, 0x80, 0xa8, 0xa3, 0x13, 0x87, 0x65, 0x80, 0x2e, 0xb1, 0x83, 0xfb,
	0x12, 0x54, 0xff, 0xad, 0x00, 0x4f, 0x8e, 0x98, 0x71, 0xe0, 0x10, 0xec, 0x92, 0x7d, 0x76, 0xd1,
	0x26, 0x2f, 0xaf, 0x08, 0x73, 0xd1, 0x01, 0x14, 0x31, 0xbb, 0xe8, 0x70, 0xc2, 0x72, 0xa1, 0x56,
	0xf8, 0xff, 0xfc, 0x4e, 0x4d, 0x4b, 0xde, 0x1c, 0x6d, 0x9f, 0x5d, 0x7c, 0xe9, 0xe1, 0x9a, 0x33,
	0x6f, 0xff, 0xaa, 0x4e, 0xb5, 0xe7, 0xb0, 0xbc, 0x46, 0x87, 0x80, 0x38, 0x41, 0xa7, 0xe7, 0xd1,
	0x9b, 0xd4, 0xee, 0x9c, 0x11, 0x52, 0xbe, 0xc7, 0xd9, 0x2a, 0x9a, 0xdc, 0x0c, 0x6f, 0x4b, 0x35,
	0xb9, 0xa5, 0xda, 0x01, 0x35, 0xed, 0xf6, 0x63, 0x5e, 0x74, 0x20, 0x6b, 0x5a, 0x84, 0xec, 0x2d,
	0x7d, 0xfb, 0xcf, 0xcf, 0x4f, 0x1f, 0x07, 0x86, 0x34, 0x46, 0x2c, 0x8b, 0x38, 0xf5, 0x6d, 0x28,
	0x45, 0xbd, 0xb3, 0x4b, 0x6a, 0x33, 0x82, 0x2a, 0x30, 0x27, 0x74, 0x4d, 0x9d, 0x7b, 0x9f, 0x69,
	0x3f, 0xe0, 0xd7, 0x2f, 0xf4, 0xfa, 0xaf, 0xe1, 0xbc, 0x4d, 0x53, 0x0f, 0xe5, 0xed, 0x9a, 0x7a,
	0xbe, 0xbc, 0x4d, 0x53, 0x8f, 0xe4, 0xed, 0xca, 0xeb, 0xf7, 0x97, 0xb7, 0xe4, 0xe5, 0x7d, 0x14,
	0x18, 0xd2, 0xba, 0x57, 0xaf, 0x47, 0xe2, 0x72, 0xeb, 0xd9, 0x71, 0x6d, 0x58, 0xf2, 0x4a, 0xbc,
	0x08, 0x16, 0xf7, 0xe8, 0xe7, 0xd5, 0xe0, 0x3e, 0x7d, 0x65, 0xcb, 0xac, 0xc5, 0x66, 0xf9, 0x8f,
	0x5f, 0xb6, 0x4a, 0xd2, 0xe0, 0xbe, 0xae, 0x3b, 0x84, 0xb1, 0x13, 0xd7, 0x31, 0x6d, 0xa3, 0x2d,
	0x60, 0x11, 0x8d, 0x7b, 0x11, 0x8d, 0x3d, 0xf0, 0xcc, 0x0a, 0x58, 0xbd, 0x0c, 0xcb, 0xa3, 0x7a,
	0xc2, 0x64, 0xbd, 0x04, 0xe8, 0x88, 0x19, 0x2d, 0xd3, 0xb2, 0x9a, 0xa6, 0xce, 0xa4, 0x8d, 0xfa,
	0x12, 0xff, 0x6f, 0x0c, 0xef, 0xc6, 0xc0, 0xfb, 0xec, 0x22, 0x01, 0x2c, 0xee, 0x4a, 0xb0, 0xd0,
	0x3c, 0xe2, 0xef, 0xc7, 0x09, 0x71, 0x5d, 0x8b, 0xf8, 0x05, 0x15, 0x58, 0x89, 0xad, 0xc8, 0x22,
	0x05, 0xca, 0xc1, 0xd2, 0x57, 0xa6, 0x7b, 0xae, 0x3b, 0xf8, 0x95, 0x5f, 0xb6, 0x0a, 0x95, 0x84,
	0x35, 0x59, 0x58, 0x85, 0xf5, 0x60, 0xf1, 0xf4, 0x52, 0xc7, 0x2e, 0xf9, 0x9c, 0xb8, 0xd8, 0xb4,
	0x02, 0x97, 0x35, 0x50, 0xd3, 0x00, 0xa9, 0x14, 0x5f, 0xd8, 0xb8, 0x6b, 0x11, 0x3d, 0x9d, 0x22,
	0x00, 0x48, 0x8a, 0x3a, 0xd4, 0x46, 0x10, 0xa7, 0x8c, 0x38, 0xd1, 0xf4, 0x9b, 0xb0, 0x31, 0x06,
	0x23, 0x89, 0xc2, 0xa0, 0x23, 0x6c, 0x63, 0x83, 0x1c, 0x13, 0xa7, 0x6f, 0x32, 0x66, 0x52, 0x3b,
	0x88, 0xf4, 0x3f, 0xa8, 0x8f, 0x03, 0x49, 0xaa, 0xb0, 0x6b, 0x81, 0x6a, 0x93, 0x97, 0xfb, 0xae,
	0xeb, 0x04, 0x3c, 0x1b, 0x50, 0x4d, 0x45, 0x48, 0x92, 0x9f, 0x0a, 0x7c, 0xf3, 0x0f, 0xe9, 0x40,
	0x3c, 0xe7, 0x02, 0xec, 0x3f, 0xb5, 0xbb, 0x50, 0xc4, 0x57, 0xee, 0x39, 0x75, 0x4c, 0xf7, 0x75,
	0xe6, 0x93, 0x3b, 0x84, 0xa2, 0xcf, 0x60, 0x56, 0x9c, 0x9f, 0xf2, 0x65, 0x54, 0xd3, 0x5e, 0x6d,
	0x21, 0x27, 0x5f, 0x6c, 0x59, 0xb3, 0xb7, 0xe8, 0x3d, 0xe0, 0x43, 0xb6, 0xfa, 0x1a, 0x28, 0x49,
	0x16, 0x65, 0x82, 0xdf, 0x81, 0x3f, 0x75, 0x87, 0x74, 0x20, 0x22, 0xb6, 0x08, 0x61, 0xff, 0xd5,
	0xff, 0x2a, 0x14, 0x85, 0x17, 0xff, 0xf5, 0x5b, 0x68, 0xcf, 0x89, 0x1b, 0x2f, 0x74, 0x74, 0x0a,
	0x2b, 0x58, 0xd7, 0xbd, 0xa3, 0x46, 0x9c, 0x3b, 0xa4, 0xe3, 0x1d, 0x94, 0x67, 0x16, 0x76, 0xcb,
	0xd3, 0xb5, 0xe9, 0xb1, 0x47, 0x8f, 0x0c, 0xfa, 0x04, 0xeb, 0x7a, 0x8b, 0x90, 0xe0, 0x20, 0x6d,
	0x59, 0xd8, 0x45, 0xdf, 0x80, 0xe2, 0x90, 0x3e, 0x1d, 0x90, 0x44, 0xe6, 0x99, 0x7c, 0xcc, 0xcb,
	0x82, 0x22, 0x46, 0x1e, 0xf7, 0xec, 0x1d, 0x76, 0x9c, 0xf9, 0xfe, 0x1d, 0x3c, 0x37, 0x4d, 0x3d,
	0xdd, 0x73, 0xc0, 0x3c, 0x7b, 0x37, 0xcf, 0x3e, 0x79, 0x0f, 0x54, 0xdf, 0xb3, 0xe8, 0x3f, 0x1d,
	0xc6, 0xdf, 0xa5, 0x3e, 0xb1, 0x5d, 0x21, 0xf0, 0x20, 0x9f, 0x80, 0x22, 0xac, 0x9f, 0x70, 0x92,
	0x93, 0x80, 0x83, 0x8b, 0x98, 0xb0, 0x11, 0x4a, 0x90, 0xa2, 0x33, 0x97, 0x4f, 0x67, 0x3d, 0x08,
	0x92, 0x28, 0x65, 0x43, 0x2d, 0x3d, 0x8f, 0xe3, 0xf5, 0x22, 0x56, 0x2e, 0x72, 0xa5, 0xd4, 0x4e,
	0xd8, 0x22, 0xa4, 0xed, 0x01, 0xa5, 0xe0, 0x5a, 0x72, 0x30, 0x0e, 0x61, 0xc8, 0x85, 0xcd, 0xb1,
	0xd1, 0xa4, 0x24, 0x4c, 0x24, 0x59, 0x4d, 0xcd, 0x28, 0x55, 0x31, 0xac, 0xfb, 0x29, 0x79, 0x17,
	0x8d, 0x6d, 0xe6, 0x7c, 0xbe, 0xcd, 0xac, 0x88, 0x6c, 0x4d, 0x8f, 0x63, 0x64, 0x23, 0x0d, 0xa8,
	0x85, 0x82, 0x25, 0xab, 0x3c, 0xcc, 0xa7, 0xb2, 0x16, 0xc4, 0x49, 0x12, 0xb2, 0xa0, 0x9a, 0x9a,
	0x45, 0xee, 0xde, 0xc2, 0x44, 0xbb, 0xb7, 0x9a, 0x18, 0x4a, 0xee, 0x9c, 0x03, 0xf5, 0x71, 0xb1,
	0xa4, 0xe0, 0xe2, 0x44, 0x82, 0x6a, 0x5a, 0x3e, 0xa1, 0x19, 0x3b, 0x6a, 0x45, 0x9b, 0x1e, 0x39,
	0x4b, 0x63, 0xad, 0x42, 0x74, 0xb7, 0x63, 0x3e, 0xd7, 0xbe, 0x87, 0x56, 0x21, 0x06, 0xe4, 0xac,
	0x56, 0x21, 0xe4, 0xfc, 0x56, 0x21, 0x6a, 0xd2, 0x5b, 0x45, 0xd4, 0xa2, 0x48, 0xb0, 0xf3, 0xe3,
	0x22, 0x4c, 0x1f, 0x31, 0x03, 0x9d, 0x41, 0x31, 0x38, 0x1e, 0xd1, 0xb3, 0xd4, 0xde, 0x14, 0x1f,
	0xd3, 0x95, 0x0f, 0xf2, 0x81, 0xe5, 0xa0, 0x18, 0xe8, 0x34, 0x4d, 0x3d, 0x87, 0xce, 0x70, 0x3c,
	0xce, 0xa1, 0x13, 0x1e, 0x48, 0x2d, 0x98, 0x0f, 0x8d, 0x80, 0x68, 0x6b, 0x5c, 0x71, 0x6c, 0x34,
	0x55, 0xb4, 0xbc, 0x70, 0xa9, 0xd6, 0x83, 0x39, 0x7f, 0x80, 0x44, 0x4f, 0xc7, 0xd4, 0x8e, 0xcc,
	0x9e, 0xca, 0xb3, 0x5c, 0xd8, 0xa8, 0x88, 0x37, 0x78, 0x66, 0x8a, 0x84, 0x66, 0xd6, 0x4c, 0x91,
	0xf0, 0x24, 0x8b, 0x28, 0x3c, 0x0c, 0x0f, 0xab, 0x68, 0xdc, 0x4e, 0x24, 0xcc, 0xbb, 0x4a, 0x23,
	0x37, 0x5e, 0x0a, 0x5e, 0xc1, 0x62, 0x74, 0xcc, 0x45, 0xcf, 0x33, 0x29, 0x46, 0xa6, 0x65, 0x65,
	0x7b, 0x82, 0x0a, 0x29, 0xfb, 0x9d, 0xf7, 0x11, 0x16, 0x1f, 0x90, 0xd1, 0x47, 0x99, 0x54, 0x49,
	0x13, 0xb7, 0xb2, 0x3b, 0x69, 0x59, 0x8a, 0x0d, 0x39, 0x64, 0xe7, 0xb6, 0x11, 0x9d, 0xda, 0x73,
	0xdb, 0x18, 0x99, 0xe5, 0xd1, 0x0f, 0x05, 0x58, 0x4e, 0x9e, 0xd2, 0xd1, 0x27, 0x39, 0x29, 0x63,
	0xc3, 0xbf, 0xf2, 0xe9, 0x1d, 0x2a, 0xa5, 0x9f, 0x37, 0x05, 0x58, 0x49, 0x99, 0xf5, 0x51, 0x36,
	0x6d, 0xda, 0x47, 0x84, 0xb2, 0x77, 0x97, 0x52, 0x69, 0xe9, 0xfb, 0x02, 0x94, 0x92, 0x3e, 0x1b,
	0xd0, 0x6e, 0x4e, 0xd2, 0x91, 0x2f, 0x11, 0xe5, 0xe3, 0x89, 0xeb, 0xa4, 0x93, 0x6b, 0x78, 0x34,
	0x32, 0xf8, 0xa3, 0x71, 0x2f, 0x40, 0xf2, 0x77, 0x8c, 0xb2, 0x33, 0x49, 0x89, 0x54, 0x76, 0x60,
	0x21, 0xd2, 0x07, 0x51, 0x63, 0x3c, 0x49, 0xec, 0xeb, 0x43, 0x79, 0x9e, 0xbf, 0x20, 0x92, 0x36,
	0xdc, 0xbb, 0xb2, 0xd2, 0x26, 0xb4, 0xe2, 0xac, 0xb4, 0x49, 0xad, 0xb1, 0x49, 0xde, 0xde, 0xa8,
	0x85, 0x77, 0x37, 0x6a, 0xe1, 0xef, 0x1b, 0xb5, 0xf0, 0xe6, 0x56, 0x9d, 0x7a, 0x77, 0xab, 0x4e,
	0xfd, 0x79, 0xab, 0x4e, 0x41, 0xc5, 0xa4, 0x29, 0x7c, 0xc7, 0x85, 0xaf, 0x35, 0xc3, 0x74, 0xcf,
	0xaf, 0xba, 0x5a, 0x8f, 0xf6, 0x1b, 0x43, 0xd0, 0x96, 0x49, 0x43, 0x57, 0x8d, 0xeb, 0xe0, 0xe7,
	0xb0, 0xee, 0x2c, 0xff, 0x15, 0xec, 0xc3, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x99, 0x1f, 0x8f,
	0x47, 0x19, 0x14, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// CreateAsk creates an ask order (to sell something you own).
	CreateAsk(ctx context.Context, in *MsgCreateAskRequest, opts ...grpc.CallOption) (*MsgCreateAskResponse, error)
	// CreateBid creates an bid order (to buy something you want).
	CreateBid(ctx context.Context, in *MsgCreateBidRequest, opts ...grpc.CallOption) (*MsgCreateBidResponse, error)
	// CancelOrder cancels an order.
	CancelOrder(ctx context.Context, in *MsgCancelOrderRequest, opts ...grpc.CallOption) (*MsgCancelOrderResponse, error)
	// FillBids uses the assets in your account to fulfill one or more bids (similar to a fill-or-cancel ask).
	FillBids(ctx context.Context, in *MsgFillBidsRequest, opts ...grpc.CallOption) (*MsgFillBidsResponse, error)
	// FillAsks uses the funds in your account to fulfill one or more asks (similar to a fill-or-cancel bid).
	FillAsks(ctx context.Context, in *MsgFillAsksRequest, opts ...grpc.CallOption) (*MsgFillAsksResponse, error)
	// MarketSettle is a market endpoint to trigger the settlement of orders.
	MarketSettle(ctx context.Context, in *MsgMarketSettleRequest, opts ...grpc.CallOption) (*MsgMarketSettleResponse, error)
	// MarketWithdraw is a market endpoint to withdraw fees that have been collected.
	MarketWithdraw(ctx context.Context, in *MsgMarketWithdrawRequest, opts ...grpc.CallOption) (*MsgMarketWithdrawResponse, error)
	// MarketUpdateDetails is a market endpoint to update its details.
	MarketUpdateDetails(ctx context.Context, in *MsgMarketUpdateDetailsRequest, opts ...grpc.CallOption) (*MsgMarketUpdateDetailsResponse, error)
	// MarketUpdateEnabled is a market endpoint to update whether its accepting orders.
	MarketUpdateEnabled(ctx context.Context, in *MsgMarketUpdateEnabledRequest, opts ...grpc.CallOption) (*MsgMarketUpdateEnabledResponse, error)
	// MarketUpdateUserSettle is a market endpoint to update whether it allows user-initiated settlement.
	MarketUpdateUserSettle(ctx context.Context, in *MsgMarketUpdateUserSettleRequest, opts ...grpc.CallOption) (*MsgMarketUpdateUserSettleResponse, error)
	// MarketManagePermissions is a market endpoint to manage a market's user permissions.
	MarketManagePermissions(ctx context.Context, in *MsgMarketManagePermissionsRequest, opts ...grpc.CallOption) (*MsgMarketManagePermissionsResponse, error)
	// MarketManageReqAttrs is a market endpoint to manage the attributes required to interact with it.
	MarketManageReqAttrs(ctx context.Context, in *MsgMarketManageReqAttrsRequest, opts ...grpc.CallOption) (*MsgMarketManageReqAttrsResponse, error)
	// GovCreateMarket is a governance proposal endpoint for creating a market.
	GovCreateMarket(ctx context.Context, in *MsgGovCreateMarketRequest, opts ...grpc.CallOption) (*MsgGovCreateMarketResponse, error)
	// GovManageFees is a governance proposal endpoint for updating a market's fees.
	GovManageFees(ctx context.Context, in *MsgGovManageFeesRequest, opts ...grpc.CallOption) (*MsgGovManageFeesResponse, error)
	// GovUpdateParams is a governance proposal endpoint for updating the exchange module's params.
	GovUpdateParams(ctx context.Context, in *MsgGovUpdateParamsRequest, opts ...grpc.CallOption) (*MsgGovUpdateParamsResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateAsk(ctx context.Context, in *MsgCreateAskRequest, opts ...grpc.CallOption) (*MsgCreateAskResponse, error) {
	out := new(MsgCreateAskResponse)
	err := c.cc.Invoke(ctx, "/provenance.exchange.v1.Msg/CreateAsk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateBid(ctx context.Context, in *MsgCreateBidRequest, opts ...grpc.CallOption) (*MsgCreateBidResponse, error) {
	out := new(MsgCreateBidResponse)
	err := c.cc.Invoke(ctx, "/provenance.exchange.v1.Msg/CreateBid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CancelOrder(ctx context.Context, in *MsgCancelOrderRequest, opts ...grpc.CallOption) (*MsgCancelOrderResponse, error) {
	out := new(MsgCancelOrderResponse)
	err := c.cc.Invoke(ctx, "/provenance.exchange.v1.Msg/CancelOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) FillBids(ctx context.Context, in *MsgFillBidsRequest, opts ...grpc.CallOption) (*MsgFillBidsResponse, error) {
	out := new(MsgFillBidsResponse)
	err := c.cc.Invoke(ctx, "/provenance.exchange.v1.Msg/FillBids", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) FillAsks(ctx context.Context, in *MsgFillAsksRequest, opts ...grpc.CallOption) (*MsgFillAsksResponse, error) {
	out := new(MsgFillAsksResponse)
	err := c.cc.Invoke(ctx, "/provenance.exchange.v1.Msg/FillAsks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MarketSettle(ctx context.Context, in *MsgMarketSettleRequest, opts ...grpc.CallOption) (*MsgMarketSettleResponse, error) {
	out := new(MsgMarketSettleResponse)
	err := c.cc.Invoke(ctx, "/provenance.exchange.v1.Msg/MarketSettle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MarketWithdraw(ctx context.Context, in *MsgMarketWithdrawRequest, opts ...grpc.CallOption) (*MsgMarketWithdrawResponse, error) {
	out := new(MsgMarketWithdrawResponse)
	err := c.cc.Invoke(ctx, "/provenance.exchange.v1.Msg/MarketWithdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MarketUpdateDetails(ctx context.Context, in *MsgMarketUpdateDetailsRequest, opts ...grpc.CallOption) (*MsgMarketUpdateDetailsResponse, error) {
	out := new(MsgMarketUpdateDetailsResponse)
	err := c.cc.Invoke(ctx, "/provenance.exchange.v1.Msg/MarketUpdateDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MarketUpdateEnabled(ctx context.Context, in *MsgMarketUpdateEnabledRequest, opts ...grpc.CallOption) (*MsgMarketUpdateEnabledResponse, error) {
	out := new(MsgMarketUpdateEnabledResponse)
	err := c.cc.Invoke(ctx, "/provenance.exchange.v1.Msg/MarketUpdateEnabled", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MarketUpdateUserSettle(ctx context.Context, in *MsgMarketUpdateUserSettleRequest, opts ...grpc.CallOption) (*MsgMarketUpdateUserSettleResponse, error) {
	out := new(MsgMarketUpdateUserSettleResponse)
	err := c.cc.Invoke(ctx, "/provenance.exchange.v1.Msg/MarketUpdateUserSettle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MarketManagePermissions(ctx context.Context, in *MsgMarketManagePermissionsRequest, opts ...grpc.CallOption) (*MsgMarketManagePermissionsResponse, error) {
	out := new(MsgMarketManagePermissionsResponse)
	err := c.cc.Invoke(ctx, "/provenance.exchange.v1.Msg/MarketManagePermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MarketManageReqAttrs(ctx context.Context, in *MsgMarketManageReqAttrsRequest, opts ...grpc.CallOption) (*MsgMarketManageReqAttrsResponse, error) {
	out := new(MsgMarketManageReqAttrsResponse)
	err := c.cc.Invoke(ctx, "/provenance.exchange.v1.Msg/MarketManageReqAttrs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GovCreateMarket(ctx context.Context, in *MsgGovCreateMarketRequest, opts ...grpc.CallOption) (*MsgGovCreateMarketResponse, error) {
	out := new(MsgGovCreateMarketResponse)
	err := c.cc.Invoke(ctx, "/provenance.exchange.v1.Msg/GovCreateMarket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GovManageFees(ctx context.Context, in *MsgGovManageFeesRequest, opts ...grpc.CallOption) (*MsgGovManageFeesResponse, error) {
	out := new(MsgGovManageFeesResponse)
	err := c.cc.Invoke(ctx, "/provenance.exchange.v1.Msg/GovManageFees", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GovUpdateParams(ctx context.Context, in *MsgGovUpdateParamsRequest, opts ...grpc.CallOption) (*MsgGovUpdateParamsResponse, error) {
	out := new(MsgGovUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/provenance.exchange.v1.Msg/GovUpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// CreateAsk creates an ask order (to sell something you own).
	CreateAsk(context.Context, *MsgCreateAskRequest) (*MsgCreateAskResponse, error)
	// CreateBid creates an bid order (to buy something you want).
	CreateBid(context.Context, *MsgCreateBidRequest) (*MsgCreateBidResponse, error)
	// CancelOrder cancels an order.
	CancelOrder(context.Context, *MsgCancelOrderRequest) (*MsgCancelOrderResponse, error)
	// FillBids uses the assets in your account to fulfill one or more bids (similar to a fill-or-cancel ask).
	FillBids(context.Context, *MsgFillBidsRequest) (*MsgFillBidsResponse, error)
	// FillAsks uses the funds in your account to fulfill one or more asks (similar to a fill-or-cancel bid).
	FillAsks(context.Context, *MsgFillAsksRequest) (*MsgFillAsksResponse, error)
	// MarketSettle is a market endpoint to trigger the settlement of orders.
	MarketSettle(context.Context, *MsgMarketSettleRequest) (*MsgMarketSettleResponse, error)
	// MarketWithdraw is a market endpoint to withdraw fees that have been collected.
	MarketWithdraw(context.Context, *MsgMarketWithdrawRequest) (*MsgMarketWithdrawResponse, error)
	// MarketUpdateDetails is a market endpoint to update its details.
	MarketUpdateDetails(context.Context, *MsgMarketUpdateDetailsRequest) (*MsgMarketUpdateDetailsResponse, error)
	// MarketUpdateEnabled is a market endpoint to update whether its accepting orders.
	MarketUpdateEnabled(context.Context, *MsgMarketUpdateEnabledRequest) (*MsgMarketUpdateEnabledResponse, error)
	// MarketUpdateUserSettle is a market endpoint to update whether it allows user-initiated settlement.
	MarketUpdateUserSettle(context.Context, *MsgMarketUpdateUserSettleRequest) (*MsgMarketUpdateUserSettleResponse, error)
	// MarketManagePermissions is a market endpoint to manage a market's user permissions.
	MarketManagePermissions(context.Context, *MsgMarketManagePermissionsRequest) (*MsgMarketManagePermissionsResponse, error)
	// MarketManageReqAttrs is a market endpoint to manage the attributes required to interact with it.
	MarketManageReqAttrs(context.Context, *MsgMarketManageReqAttrsRequest) (*MsgMarketManageReqAttrsResponse, error)
	// GovCreateMarket is a governance proposal endpoint for creating a market.
	GovCreateMarket(context.Context, *MsgGovCreateMarketRequest) (*MsgGovCreateMarketResponse, error)
	// GovManageFees is a governance proposal endpoint for updating a market's fees.
	GovManageFees(context.Context, *MsgGovManageFeesRequest) (*MsgGovManageFeesResponse, error)
	// GovUpdateParams is a governance proposal endpoint for updating the exchange module's params.
	GovUpdateParams(context.Context, *MsgGovUpdateParamsRequest) (*MsgGovUpdateParamsResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateAsk(ctx context.Context, req *MsgCreateAskRequest) (*MsgCreateAskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAsk not implemented")
}
func (*UnimplementedMsgServer) CreateBid(ctx context.Context, req *MsgCreateBidRequest) (*MsgCreateBidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBid not implemented")
}
func (*UnimplementedMsgServer) CancelOrder(ctx context.Context, req *MsgCancelOrderRequest) (*MsgCancelOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelOrder not implemented")
}
func (*UnimplementedMsgServer) FillBids(ctx context.Context, req *MsgFillBidsRequest) (*MsgFillBidsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FillBids not implemented")
}
func (*UnimplementedMsgServer) FillAsks(ctx context.Context, req *MsgFillAsksRequest) (*MsgFillAsksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FillAsks not implemented")
}
func (*UnimplementedMsgServer) MarketSettle(ctx context.Context, req *MsgMarketSettleRequest) (*MsgMarketSettleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarketSettle not implemented")
}
func (*UnimplementedMsgServer) MarketWithdraw(ctx context.Context, req *MsgMarketWithdrawRequest) (*MsgMarketWithdrawResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarketWithdraw not implemented")
}
func (*UnimplementedMsgServer) MarketUpdateDetails(ctx context.Context, req *MsgMarketUpdateDetailsRequest) (*MsgMarketUpdateDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarketUpdateDetails not implemented")
}
func (*UnimplementedMsgServer) MarketUpdateEnabled(ctx context.Context, req *MsgMarketUpdateEnabledRequest) (*MsgMarketUpdateEnabledResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarketUpdateEnabled not implemented")
}
func (*UnimplementedMsgServer) MarketUpdateUserSettle(ctx context.Context, req *MsgMarketUpdateUserSettleRequest) (*MsgMarketUpdateUserSettleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarketUpdateUserSettle not implemented")
}
func (*UnimplementedMsgServer) MarketManagePermissions(ctx context.Context, req *MsgMarketManagePermissionsRequest) (*MsgMarketManagePermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarketManagePermissions not implemented")
}
func (*UnimplementedMsgServer) MarketManageReqAttrs(ctx context.Context, req *MsgMarketManageReqAttrsRequest) (*MsgMarketManageReqAttrsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarketManageReqAttrs not implemented")
}
func (*UnimplementedMsgServer) GovCreateMarket(ctx context.Context, req *MsgGovCreateMarketRequest) (*MsgGovCreateMarketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GovCreateMarket not implemented")
}
func (*UnimplementedMsgServer) GovManageFees(ctx context.Context, req *MsgGovManageFeesRequest) (*MsgGovManageFeesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GovManageFees not implemented")
}
func (*UnimplementedMsgServer) GovUpdateParams(ctx context.Context, req *MsgGovUpdateParamsRequest) (*MsgGovUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GovUpdateParams not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateAsk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateAskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateAsk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.exchange.v1.Msg/CreateAsk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateAsk(ctx, req.(*MsgCreateAskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateBid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateBidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateBid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.exchange.v1.Msg/CreateBid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateBid(ctx, req.(*MsgCreateBidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CancelOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCancelOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CancelOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.exchange.v1.Msg/CancelOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CancelOrder(ctx, req.(*MsgCancelOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_FillBids_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFillBidsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).FillBids(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.exchange.v1.Msg/FillBids",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).FillBids(ctx, req.(*MsgFillBidsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_FillAsks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFillAsksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).FillAsks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.exchange.v1.Msg/FillAsks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).FillAsks(ctx, req.(*MsgFillAsksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MarketSettle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMarketSettleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MarketSettle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.exchange.v1.Msg/MarketSettle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MarketSettle(ctx, req.(*MsgMarketSettleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MarketWithdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMarketWithdrawRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MarketWithdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.exchange.v1.Msg/MarketWithdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MarketWithdraw(ctx, req.(*MsgMarketWithdrawRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MarketUpdateDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMarketUpdateDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MarketUpdateDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.exchange.v1.Msg/MarketUpdateDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MarketUpdateDetails(ctx, req.(*MsgMarketUpdateDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MarketUpdateEnabled_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMarketUpdateEnabledRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MarketUpdateEnabled(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.exchange.v1.Msg/MarketUpdateEnabled",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MarketUpdateEnabled(ctx, req.(*MsgMarketUpdateEnabledRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MarketUpdateUserSettle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMarketUpdateUserSettleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MarketUpdateUserSettle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.exchange.v1.Msg/MarketUpdateUserSettle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MarketUpdateUserSettle(ctx, req.(*MsgMarketUpdateUserSettleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MarketManagePermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMarketManagePermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MarketManagePermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.exchange.v1.Msg/MarketManagePermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MarketManagePermissions(ctx, req.(*MsgMarketManagePermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MarketManageReqAttrs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMarketManageReqAttrsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MarketManageReqAttrs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.exchange.v1.Msg/MarketManageReqAttrs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MarketManageReqAttrs(ctx, req.(*MsgMarketManageReqAttrsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GovCreateMarket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGovCreateMarketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GovCreateMarket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.exchange.v1.Msg/GovCreateMarket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GovCreateMarket(ctx, req.(*MsgGovCreateMarketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GovManageFees_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGovManageFeesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GovManageFees(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.exchange.v1.Msg/GovManageFees",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GovManageFees(ctx, req.(*MsgGovManageFeesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GovUpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGovUpdateParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GovUpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provenance.exchange.v1.Msg/GovUpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GovUpdateParams(ctx, req.(*MsgGovUpdateParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "provenance.exchange.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAsk",
			Handler:    _Msg_CreateAsk_Handler,
		},
		{
			MethodName: "CreateBid",
			Handler:    _Msg_CreateBid_Handler,
		},
		{
			MethodName: "CancelOrder",
			Handler:    _Msg_CancelOrder_Handler,
		},
		{
			MethodName: "FillBids",
			Handler:    _Msg_FillBids_Handler,
		},
		{
			MethodName: "FillAsks",
			Handler:    _Msg_FillAsks_Handler,
		},
		{
			MethodName: "MarketSettle",
			Handler:    _Msg_MarketSettle_Handler,
		},
		{
			MethodName: "MarketWithdraw",
			Handler:    _Msg_MarketWithdraw_Handler,
		},
		{
			MethodName: "MarketUpdateDetails",
			Handler:    _Msg_MarketUpdateDetails_Handler,
		},
		{
			MethodName: "MarketUpdateEnabled",
			Handler:    _Msg_MarketUpdateEnabled_Handler,
		},
		{
			MethodName: "MarketUpdateUserSettle",
			Handler:    _Msg_MarketUpdateUserSettle_Handler,
		},
		{
			MethodName: "MarketManagePermissions",
			Handler:    _Msg_MarketManagePermissions_Handler,
		},
		{
			MethodName: "MarketManageReqAttrs",
			Handler:    _Msg_MarketManageReqAttrs_Handler,
		},
		{
			MethodName: "GovCreateMarket",
			Handler:    _Msg_GovCreateMarket_Handler,
		},
		{
			MethodName: "GovManageFees",
			Handler:    _Msg_GovManageFees_Handler,
		},
		{
			MethodName: "GovUpdateParams",
			Handler:    _Msg_GovUpdateParams_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "provenance/exchange/v1/tx.proto",
}

func (m *MsgCreateAskRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAskRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAskRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.OrderCreationFee != nil {
		{
			size, err := m.OrderCreationFee.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.AskOrder.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgCreateAskResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAskResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAskResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.OrderId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.OrderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateBidRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateBidRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateBidRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.OrderCreationFee != nil {
		{
			size, err := m.OrderCreationFee.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.BidOrder.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgCreateBidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateBidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateBidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.OrderId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.OrderId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCancelOrderRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelOrderRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelOrderRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.OrderId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.OrderId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCancelOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFillBidsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFillBidsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFillBidsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFillBidsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFillBidsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFillBidsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFillAsksRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFillAsksRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFillAsksRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFillAsksResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFillAsksResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFillAsksResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMarketSettleRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMarketSettleRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMarketSettleRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMarketSettleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMarketSettleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMarketSettleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMarketWithdrawRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMarketWithdrawRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMarketWithdrawRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMarketWithdrawResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMarketWithdrawResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMarketWithdrawResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMarketUpdateDetailsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMarketUpdateDetailsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMarketUpdateDetailsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMarketUpdateDetailsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMarketUpdateDetailsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMarketUpdateDetailsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMarketUpdateEnabledRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMarketUpdateEnabledRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMarketUpdateEnabledRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMarketUpdateEnabledResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMarketUpdateEnabledResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMarketUpdateEnabledResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMarketUpdateUserSettleRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMarketUpdateUserSettleRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMarketUpdateUserSettleRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMarketUpdateUserSettleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMarketUpdateUserSettleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMarketUpdateUserSettleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMarketManagePermissionsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMarketManagePermissionsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMarketManagePermissionsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMarketManagePermissionsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMarketManagePermissionsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMarketManagePermissionsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMarketManageReqAttrsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMarketManageReqAttrsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMarketManageReqAttrsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMarketManageReqAttrsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMarketManageReqAttrsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMarketManageReqAttrsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgGovCreateMarketRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGovCreateMarketRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGovCreateMarketRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Market.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGovCreateMarketResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGovCreateMarketResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGovCreateMarketResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgGovManageFeesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGovManageFeesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGovManageFeesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RemoveFeeBuyerSettlementRatios) > 0 {
		for iNdEx := len(m.RemoveFeeBuyerSettlementRatios) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RemoveFeeBuyerSettlementRatios[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x72
		}
	}
	if len(m.AddFeeBuyerSettlementRatios) > 0 {
		for iNdEx := len(m.AddFeeBuyerSettlementRatios) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AddFeeBuyerSettlementRatios[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6a
		}
	}
	if len(m.RemoveFeeBuyerSettlementFlat) > 0 {
		for iNdEx := len(m.RemoveFeeBuyerSettlementFlat) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RemoveFeeBuyerSettlementFlat[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x62
		}
	}
	if len(m.AddFeeBuyerSettlementFlat) > 0 {
		for iNdEx := len(m.AddFeeBuyerSettlementFlat) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AddFeeBuyerSettlementFlat[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x5a
		}
	}
	if len(m.RemoveFeeSellerSettlementRatios) > 0 {
		for iNdEx := len(m.RemoveFeeSellerSettlementRatios) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RemoveFeeSellerSettlementRatios[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x52
		}
	}
	if len(m.AddFeeSellerSettlementRatios) > 0 {
		for iNdEx := len(m.AddFeeSellerSettlementRatios) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AddFeeSellerSettlementRatios[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if len(m.RemoveFeeSellerSettlementFlat) > 0 {
		for iNdEx := len(m.RemoveFeeSellerSettlementFlat) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RemoveFeeSellerSettlementFlat[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if len(m.AddFeeSellerSettlementFlat) > 0 {
		for iNdEx := len(m.AddFeeSellerSettlementFlat) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AddFeeSellerSettlementFlat[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.RemoveFeeCreateBidFlat) > 0 {
		for iNdEx := len(m.RemoveFeeCreateBidFlat) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RemoveFeeCreateBidFlat[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.AddFeeCreateBidFlat) > 0 {
		for iNdEx := len(m.AddFeeCreateBidFlat) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AddFeeCreateBidFlat[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.RemoveFeeCreateAskFlat) > 0 {
		for iNdEx := len(m.RemoveFeeCreateAskFlat) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RemoveFeeCreateAskFlat[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.AddFeeCreateAskFlat) > 0 {
		for iNdEx := len(m.AddFeeCreateAskFlat) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AddFeeCreateAskFlat[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.MarketId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MarketId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGovManageFeesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGovManageFeesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGovManageFeesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgGovUpdateParamsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGovUpdateParamsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGovUpdateParamsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGovUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGovUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGovUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateAskRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.AskOrder.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.OrderCreationFee != nil {
		l = m.OrderCreationFee.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateAskResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OrderId != 0 {
		n += 1 + sovTx(uint64(m.OrderId))
	}
	return n
}

func (m *MsgCreateBidRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.BidOrder.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.OrderCreationFee != nil {
		l = m.OrderCreationFee.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateBidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OrderId != 0 {
		n += 1 + sovTx(uint64(m.OrderId))
	}
	return n
}

func (m *MsgCancelOrderRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.OrderId != 0 {
		n += 1 + sovTx(uint64(m.OrderId))
	}
	return n
}

func (m *MsgCancelOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFillBidsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFillBidsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFillAsksRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFillAsksResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMarketSettleRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMarketSettleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMarketWithdrawRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMarketWithdrawResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMarketUpdateDetailsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMarketUpdateDetailsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMarketUpdateEnabledRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMarketUpdateEnabledResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMarketUpdateUserSettleRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMarketUpdateUserSettleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMarketManagePermissionsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMarketManagePermissionsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMarketManageReqAttrsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMarketManageReqAttrsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgGovCreateMarketRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Market.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgGovCreateMarketResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgGovManageFeesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.MarketId != 0 {
		n += 1 + sovTx(uint64(m.MarketId))
	}
	if len(m.AddFeeCreateAskFlat) > 0 {
		for _, e := range m.AddFeeCreateAskFlat {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.RemoveFeeCreateAskFlat) > 0 {
		for _, e := range m.RemoveFeeCreateAskFlat {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.AddFeeCreateBidFlat) > 0 {
		for _, e := range m.AddFeeCreateBidFlat {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.RemoveFeeCreateBidFlat) > 0 {
		for _, e := range m.RemoveFeeCreateBidFlat {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.AddFeeSellerSettlementFlat) > 0 {
		for _, e := range m.AddFeeSellerSettlementFlat {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.RemoveFeeSellerSettlementFlat) > 0 {
		for _, e := range m.RemoveFeeSellerSettlementFlat {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.AddFeeSellerSettlementRatios) > 0 {
		for _, e := range m.AddFeeSellerSettlementRatios {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.RemoveFeeSellerSettlementRatios) > 0 {
		for _, e := range m.RemoveFeeSellerSettlementRatios {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.AddFeeBuyerSettlementFlat) > 0 {
		for _, e := range m.AddFeeBuyerSettlementFlat {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.RemoveFeeBuyerSettlementFlat) > 0 {
		for _, e := range m.RemoveFeeBuyerSettlementFlat {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.AddFeeBuyerSettlementRatios) > 0 {
		for _, e := range m.AddFeeBuyerSettlementRatios {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.RemoveFeeBuyerSettlementRatios) > 0 {
		for _, e := range m.RemoveFeeBuyerSettlementRatios {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgGovManageFeesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgGovUpdateParamsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgGovUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateAskRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAskRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAskRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AskOrder", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AskOrder.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderCreationFee", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OrderCreationFee == nil {
				m.OrderCreationFee = &types.Coin{}
			}
			if err := m.OrderCreationFee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateAskResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAskResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAskResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			m.OrderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OrderId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateBidRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateBidRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateBidRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BidOrder", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.BidOrder.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderCreationFee", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OrderCreationFee == nil {
				m.OrderCreationFee = &types.Coin{}
			}
			if err := m.OrderCreationFee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateBidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateBidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateBidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			m.OrderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OrderId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelOrderRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelOrderRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelOrderRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderId", wireType)
			}
			m.OrderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OrderId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFillBidsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFillBidsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFillBidsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFillBidsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFillBidsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFillBidsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFillAsksRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFillAsksRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFillAsksRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFillAsksResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFillAsksResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFillAsksResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMarketSettleRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMarketSettleRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMarketSettleRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMarketSettleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMarketSettleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMarketSettleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMarketWithdrawRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMarketWithdrawRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMarketWithdrawRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMarketWithdrawResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMarketWithdrawResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMarketWithdrawResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMarketUpdateDetailsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMarketUpdateDetailsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMarketUpdateDetailsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMarketUpdateDetailsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMarketUpdateDetailsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMarketUpdateDetailsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMarketUpdateEnabledRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMarketUpdateEnabledRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMarketUpdateEnabledRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMarketUpdateEnabledResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMarketUpdateEnabledResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMarketUpdateEnabledResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMarketUpdateUserSettleRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMarketUpdateUserSettleRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMarketUpdateUserSettleRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMarketUpdateUserSettleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMarketUpdateUserSettleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMarketUpdateUserSettleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMarketManagePermissionsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMarketManagePermissionsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMarketManagePermissionsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMarketManagePermissionsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMarketManagePermissionsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMarketManagePermissionsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMarketManageReqAttrsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMarketManageReqAttrsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMarketManageReqAttrsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMarketManageReqAttrsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMarketManageReqAttrsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMarketManageReqAttrsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGovCreateMarketRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGovCreateMarketRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGovCreateMarketRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Market", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Market.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGovCreateMarketResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGovCreateMarketResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGovCreateMarketResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGovManageFeesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGovManageFeesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGovManageFeesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketId", wireType)
			}
			m.MarketId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MarketId |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddFeeCreateAskFlat", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddFeeCreateAskFlat = append(m.AddFeeCreateAskFlat, types.Coin{})
			if err := m.AddFeeCreateAskFlat[len(m.AddFeeCreateAskFlat)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoveFeeCreateAskFlat", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemoveFeeCreateAskFlat = append(m.RemoveFeeCreateAskFlat, types.Coin{})
			if err := m.RemoveFeeCreateAskFlat[len(m.RemoveFeeCreateAskFlat)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddFeeCreateBidFlat", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddFeeCreateBidFlat = append(m.AddFeeCreateBidFlat, types.Coin{})
			if err := m.AddFeeCreateBidFlat[len(m.AddFeeCreateBidFlat)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoveFeeCreateBidFlat", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemoveFeeCreateBidFlat = append(m.RemoveFeeCreateBidFlat, types.Coin{})
			if err := m.RemoveFeeCreateBidFlat[len(m.RemoveFeeCreateBidFlat)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddFeeSellerSettlementFlat", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddFeeSellerSettlementFlat = append(m.AddFeeSellerSettlementFlat, types.Coin{})
			if err := m.AddFeeSellerSettlementFlat[len(m.AddFeeSellerSettlementFlat)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoveFeeSellerSettlementFlat", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemoveFeeSellerSettlementFlat = append(m.RemoveFeeSellerSettlementFlat, types.Coin{})
			if err := m.RemoveFeeSellerSettlementFlat[len(m.RemoveFeeSellerSettlementFlat)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddFeeSellerSettlementRatios", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddFeeSellerSettlementRatios = append(m.AddFeeSellerSettlementRatios, FeeRatio{})
			if err := m.AddFeeSellerSettlementRatios[len(m.AddFeeSellerSettlementRatios)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoveFeeSellerSettlementRatios", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemoveFeeSellerSettlementRatios = append(m.RemoveFeeSellerSettlementRatios, FeeRatio{})
			if err := m.RemoveFeeSellerSettlementRatios[len(m.RemoveFeeSellerSettlementRatios)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddFeeBuyerSettlementFlat", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddFeeBuyerSettlementFlat = append(m.AddFeeBuyerSettlementFlat, types.Coin{})
			if err := m.AddFeeBuyerSettlementFlat[len(m.AddFeeBuyerSettlementFlat)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoveFeeBuyerSettlementFlat", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemoveFeeBuyerSettlementFlat = append(m.RemoveFeeBuyerSettlementFlat, types.Coin{})
			if err := m.RemoveFeeBuyerSettlementFlat[len(m.RemoveFeeBuyerSettlementFlat)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddFeeBuyerSettlementRatios", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddFeeBuyerSettlementRatios = append(m.AddFeeBuyerSettlementRatios, FeeRatio{})
			if err := m.AddFeeBuyerSettlementRatios[len(m.AddFeeBuyerSettlementRatios)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoveFeeBuyerSettlementRatios", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemoveFeeBuyerSettlementRatios = append(m.RemoveFeeBuyerSettlementRatios, FeeRatio{})
			if err := m.RemoveFeeBuyerSettlementRatios[len(m.RemoveFeeBuyerSettlementRatios)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGovManageFeesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGovManageFeesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGovManageFeesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGovUpdateParamsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGovUpdateParamsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGovUpdateParamsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGovUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGovUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGovUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
