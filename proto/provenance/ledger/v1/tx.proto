syntax = "proto3";
package provenance.ledger.v1;

option go_package = "github.com/provenance-io/provenance/x/ledger";

option java_package        = "io.provenance.ledger.v1";
option java_multiple_files = true;

import "cosmos/msg/v1/msg.proto";
import "provenance/ledger/v1/ledger.proto";
import "provenance/ledger/v1/ledger_settlement.proto";

// Msg defines the attribute module Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // Create a new NFT ledger
  rpc Create(MsgCreateRequest) returns (MsgCreateResponse);

  // Append a ledger entry
  rpc Append(MsgAppendRequest) returns (MsgAppendResponse);

  // Process multiple fund transfers (payments and disbursements)
  rpc ProcessFundTransfers(MsgProcessFundTransfersRequest) returns (MsgProcessFundTransfersResponse);

  // Process multiple fund transfers with manual settlement instructions
  rpc ProcessFundTransfersWithSettlement(MsgProcessFundTransfersWithSettlementRequest)
      returns (MsgProcessFundTransfersResponse);

  // Destroy a ledger by NFT address
  rpc Destroy(MsgDestroyRequest) returns (MsgDestroyResponse);
}

// MsgCreateRequest
message MsgCreateRequest {
  option (cosmos.msg.v1.signer) = "authority";

  Ledger ledger    = 1;
  string authority = 2;
}

// MsgCreateResponse
message MsgCreateResponse {}

// MsgAppendRequest
message MsgAppendRequest {
  option (cosmos.msg.v1.signer) = "authority";

  LedgerKey            key       = 1;
  repeated LedgerEntry entries   = 2;
  string               authority = 3;
}

// MsgAppendResponse
message MsgAppendResponse {}

// MsgProcessFundTransfersRequest represents a request to process multiple fund transfers
message MsgProcessFundTransfersRequest {
  option (cosmos.msg.v1.signer) = "authority";

  string                authority = 1;
  repeated FundTransfer transfers = 2;
}

// MsgProcessFundTransfersResponse represents the response from processing fund transfers
message MsgProcessFundTransfersResponse {}

// MsgProcessFundTransfersWithSettlementRequest represents a request to process fund transfers with settlement
// instructions
message MsgProcessFundTransfersWithSettlementRequest {
  option (cosmos.msg.v1.signer) = "authority";

  string                              authority = 1;
  repeated FundTransferWithSettlement transfers = 2;
}

// MsgDestroyRequest represents a request to destroy a ledger
message MsgDestroyRequest {
  option (cosmos.msg.v1.signer) = "authority";

  LedgerKey key       = 1;
  string    authority = 2;
}

// MsgDestroyResponse represents the response from destroying a ledger
message MsgDestroyResponse {}
