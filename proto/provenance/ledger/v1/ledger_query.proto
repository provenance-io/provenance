syntax = "proto3";
package provenance.ledger.v1;

option go_package          = "github.com/provenance-io/provenance/x/ledger/types";
option java_package        = "io.provenance.ledger.v1";
option java_multiple_files = true;

import "provenance/ledger/v1/ledger.proto";

// LedgerPlainText represents a ledger in plain text format for human-readable display.
message LedgerPlainText {
  // The ledger key identifying the ledger.
  LedgerKey key = 1;

  // The status of the ledger as a human-readable string.
  string status = 2;

  // The next payment date as a human-readable string.
  string next_pmt_date = 3;

  // The next payment amount as a human-readable string.
  string next_pmt_amt = 4;

  // The interest rate as a human-readable string.
  string interest_rate = 5;

  // The maturity date as a human-readable string.
  string maturity_date = 6;

  // The day count convention for interest calculations.
  DayCount interest_day_count = 7;

  // The interest accrual method for interest calculations.
  InterestAccrual interest_accrual = 8;

  // The payment frequency.
  PaymentFrequency payment_frequency = 9;
}

// LedgerEntryPlainText represents a ledger entry in plain text format for human-readable display.
message LedgerEntryPlainText {
  // The correlation ID for tracking ledger entries with external systems (max 50 characters).
  string correlation_id = 1;

  // The sequence number of the ledger entry (less than 100).
  // This field is used to maintain the correct order of entries when multiple entries
  // share the same effective date. Entries are sorted first by effective date, then by sequence.
  uint32 sequence = 2;

  // The type of ledger entry.
  LedgerClassEntryType type = 3;

  // The posted date as a human-readable string.
  string posted_date = 5;

  // The effective date as a human-readable string.
  string effective_date = 6;

  // The total amount of the ledger entry as a human-readable string.
  string total_amt = 7;

  // The amounts applied to each bucket in plain text format.
  repeated LedgerBucketAmountPlainText applied_amounts = 8;
}

// LedgerBucketAmountPlainText represents a bucket amount in plain text format for human-readable display.
message LedgerBucketAmountPlainText {
  // The bucket type for this amount.
  LedgerClassBucketType bucket = 1;
  
  // The amount applied to this bucket as a human-readable string.
  string applied_amt = 2;
  
  // The balance amount for this bucket as a human-readable string.
  string balance_amt = 3;
}

// QueryLedgerEntryResponsePlainText represents a response containing ledger entries in plain text format.
message QueryLedgerEntryResponsePlainText {
  // The ledger entries in plain text format.
  repeated LedgerEntryPlainText entries = 1;
}
