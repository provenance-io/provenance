syntax = "proto3";
package provenance.nav.v1;

option go_package = "github.com/provenance-io/provenance/x/nav";

option java_package        = "io.provenance.nav.v1";
option java_multiple_files = true;

import "cosmos/base/query/v1beta1/pagination.proto";
import "google/api/annotations.proto";
import "provenance/nav/v1/types.proto";

// Query is the service for nav module's query endpoints.
service Query {
  // GetNAV returns the single Net Asset Value entry requested.
  rpc GetNAV(QueryGetNAVRequest) returns (QueryGetNAVResponse) {
    option (google.api.http) = {
      get: "/provenance/nav/v1/navs/{asset_denom}/{price_denom}"
      additional_bindings: {get: "/provenance/nav/v1/nav"}
    };
  }

  // GetAllNAVs returns a page of all Net Asset Value entries, possibly limited
  // to a single asset denom.
  rpc GetAllNAVs(QueryGetAllNAVsRequest) returns (QueryGetAllNAVsResponse) {
    option (google.api.http) = {
      get: "/provenance/nav/v1/navs/{asset_denom}"
      additional_bindings: {get: "/provenance/nav/v1/navs"}
    };
  }
}

// QueryGetNAVRequest is the request type for the GetNAV query.
message QueryGetNAVRequest {
  // asset_denom is the denomination of the assets that you want the NAV for.
  string asset_denom = 1;
  // price_denom is the denomination of the price that you want the NAV for.
  string price_denom = 2;
}

// QueryGetNAVResponse is the response type of the GetNAV query.
message QueryGetNAVResponse {
  // nav is the requested net asset value.
  NetAssetValueRecord nav = 1;
}

// QueryGetAllNAVsRequest is the request type for the GetAllNAVs query.
message QueryGetAllNAVsRequest {
  // asset_denom is an optional denom. If provided, the query will only return
  // NAVs that have this asset_denom. Otherwise, all NAVs will be returned.
  string asset_denom = 1;
  // pagination defines optional pagination parameters for the query.
  cosmos.base.query.v1beta1.PageRequest pagination = 99;
}

// QueryGetAllNAVsResponse is the response type of the GetAllNAVs query.
message QueryGetAllNAVsResponse {
  // navs is a page of the requested net asset value entries.
  repeated NetAssetValueRecord navs = 1;
  // pagination is the resulting pagination parameters.
  cosmos.base.query.v1beta1.PageResponse pagination = 99;
}
