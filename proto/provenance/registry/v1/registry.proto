syntax = "proto3";
package provenance.registry.v1;

option go_package          = "github.com/provenance-io/provenance/x/registry";
option java_package        = "io.provenance.registry.v1";
option java_multiple_files = true;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

// Role defines the different types of roles that can be assigned to addresses
enum RegistryRole {
  // REGISTRY_ROLE_UNSPECIFIED indicates no role is assigned
  REGISTRY_ROLE_UNSPECIFIED = 0;
  // REGISTRY_ROLE_SERVICER indicates the address has servicer privileges
  REGISTRY_ROLE_SERVICER = 1;
  // REGISTRY_ROLE_SUBSERVICER indicates the address has subservicer privileges
  REGISTRY_ROLE_SUBSERVICER = 2;
  // REGISTRY_ROLE_CONTROLLER indicates the address has controller privileges
  REGISTRY_ROLE_CONTROLLER = 3;
  // REGISTRY_ROLE_CUSTODIAN indicates the address has custodian privileges
  REGISTRY_ROLE_CUSTODIAN = 4;
  // REGISTRY_ROLE_BORROWER indicates the address has borrower privileges
  REGISTRY_ROLE_BORROWER = 5;
  // REGISTRY_ROLE_ORIGINATOR indicates the address has originator privileges
  REGISTRY_ROLE_ORIGINATOR = 6;
}

message RegistryKey {
  // Identifier for the nft that this ledger is linked to.
  // This could be a `x/metadata` scope id or an `x/nft` nft id.
  // In order to create a ledger for an nft, the nft class must be registered in the ledger module as a LedgerClass.
  string nft_id = 1;

  // Scope Specification ID or NFT Class ID
  string asset_class_id = 2;
}

// RegistryEntry represents a single entry in the registry, mapping a blockchain address to its roles
message RegistryEntry {
  // Key ties the registry entry to an asset class and nft id
  RegistryKey key = 1;

  // roles is a list of roles and addresses that can perform that role
  repeated RolesEntry roles = 2 [(gogoproto.nullable) = false];
}

message RolesEntry {
  RegistryRole role = 1;

  // addresses is the list of blockchain addresses that can perform this role
  repeated string addresses = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// GenesisState defines the registry module's genesis state
message GenesisState {
  // entries is the list of registry entries
  repeated RegistryEntry entries = 1 [(gogoproto.nullable) = false];
}