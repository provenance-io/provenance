syntax = "proto3";
package provenance.asset.v1;

option go_package = "github.com/provenance-io/provenance/x/asset/types";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "provenance/asset/v1/asset.proto";

// Msg defines the asset module's message service
service Msg {
  option (cosmos.msg.v1.service) = true;

  // CreateAsset creates a new asset
  rpc CreateAsset(MsgCreateAsset) returns (MsgCreateAssetResponse);

  // CreateAssetClass creates a new asset class
  rpc CreateAssetClass(MsgCreateAssetClass) returns (MsgCreateAssetClassResponse);

  // CreatePool creates a new pool
  rpc CreatePool(MsgCreatePool) returns (MsgCreatePoolResponse);

  // CreateTokenization creates a new tokenization
  rpc CreateTokenization(MsgCreateTokenization) returns (MsgCreateTokenizationResponse);

  // CreateSecuritization creates a new securitization
  rpc CreateSecuritization(MsgCreateSecuritization) returns (MsgCreateSecuritizationResponse);
}

// MsgCreateAsset
message MsgCreateAsset {
  option (cosmos.msg.v1.signer) = "from_address";

  Asset  asset        = 1;
  string from_address = 2;
}

// MsgCreateAssetResponse
message MsgCreateAssetResponse {}

// MsgCreateAssetClass
message MsgCreateAssetClass {
  option (cosmos.msg.v1.signer) = "from_address";

  AssetClass asset_class  = 1;
  string     from_address = 2;
}

// MsgCreateAssetClassResponse
message MsgCreateAssetClassResponse {}

// MsgCreatePool
message MsgCreatePool {
  option (cosmos.msg.v1.signer) = "from_address";

  cosmos.base.v1beta1.Coin pool         = 1;
  repeated Nft             nfts         = 2;
  string                   from_address = 3;
}

// MsgCreatePoolResponse
message MsgCreatePoolResponse {}

// MsgCreateTokenization
message MsgCreateTokenization {
  option (cosmos.msg.v1.signer) = "from_address";

  cosmos.base.v1beta1.Coin denom        = 1 [(gogoproto.nullable) = false];
  Nft                      nft          = 2;
  string                   from_address = 3;
}

// MsgCreateTokenizationResponse
message MsgCreateTokenizationResponse {}

// MsgCreateSecuritization
message MsgCreateSecuritization {
  option (cosmos.msg.v1.signer) = "from_address";

  string          id                             = 1;
  repeated string pools                          = 2;
  repeated cosmos.base.v1beta1.Coin tranches     = 3;
  string                            from_address = 4;
}

// MsgCreateSecuritizationResponse
message MsgCreateSecuritizationResponse {}