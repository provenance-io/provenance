syntax = "proto3";
package provenance.asset.v1;

option go_package = "github.com/provenance-io/provenance/x/asset/types";

import "provenance/asset/v1/asset.proto";
import "cosmos/msg/v1/msg.proto";
import "provenance/ledger/v1/ledger.proto";

service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc AddAsset(MsgAddAsset) returns (MsgAddAssetResponse);

  rpc AddAssetClass(MsgAddAssetClass) returns (MsgAddAssetClassResponse);

  rpc CreatePool(MsgCreatePool) returns (MsgCreatePoolResponse);

  rpc CreateParticipation(MsgCreateParticipation) returns (MsgCreateParticipationResponse);
}

message MsgAddAsset {
  option (cosmos.msg.v1.signer) = "from_address";

  Asset  asset        = 1;
  repeated provenance.ledger.v1.LedgerClassEntryType entry_types = 2;
  repeated provenance.ledger.v1.LedgerClassStatusType status_types = 3;
  string from_address = 4;
}

message MsgAddAssetResponse {}

message MsgAddAssetClass {
  option (cosmos.msg.v1.signer) = "from_address";

  AssetClass asset_class  = 1;
  string     from_address = 2;
}

message MsgAddAssetClassResponse {}

message MsgCreatePool {
  option (cosmos.msg.v1.signer) = "from_address";

  string    pool_id = 1;
  string    from_address = 2;
}

message MsgCreatePoolResponse {}

message MsgCreateParticipation {
  option (cosmos.msg.v1.signer) = "from_address";

  string    pool_id = 1;
  uint64    amount = 2;
  string    from_address = 3;
}

message MsgCreateParticipationResponse {}
