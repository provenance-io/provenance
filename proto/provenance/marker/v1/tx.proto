syntax = "proto3";
package provenance.marker.v1;

import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/bank/v1beta1/bank.proto";
import "provenance/marker/v1/marker.proto";
import "provenance/marker/v1/accessgrant.proto";

option go_package = "github.com/provenance-io/provenance/x/marker/types";

option java_package        = "io.provenance.marker.v1";
option java_multiple_files = true;

// Msg defines the Marker Msg service.
service Msg {
  // Finalize
  rpc Finalize(MsgFinalizeRequest) returns (MsgFinalizeResponse);
  // Activate
  rpc Activate(MsgActivateRequest) returns (MsgActivateResponse);
  // Cancel
  rpc Cancel(MsgCancelRequest) returns (MsgCancelResponse);
  // Delete
  rpc Delete(MsgDeleteRequest) returns (MsgDeleteResponse);
  // Mint
  rpc Mint(MsgMintRequest) returns (MsgMintResponse);
  // Burn
  rpc Burn(MsgBurnRequest) returns (MsgBurnResponse);
  // AddAccess
  rpc AddAccess(MsgAddAccessRequest) returns (MsgAddAccessResponse);
  // DeleteAccess
  rpc DeleteAccess(MsgDeleteAccessRequest) returns (MsgDeleteAccessResponse);
  // Withdraw
  rpc Withdraw(MsgWithdrawRequest) returns (MsgWithdrawResponse);
  // AddMarker
  rpc AddMarker(MsgAddMarkerRequest) returns (MsgAddMarkerResponse);
  // Transfer marker denominated coin between accounts
  rpc Transfer(MsgTransferRequest) returns (MsgTransferResponse);
  // Allows Denom Metadata (see bank module) to be set for the Marker's Denom
  rpc SetDenomMetadata(MsgSetDenomMetadataRequest) returns (MsgSetDenomMetadataResponse);
  // GrantAllowance grants fee allowance to the grantee on the granter's
  // account with the provided expiration time.
  rpc GrantAllowance(MsgGrantAllowanceRequest) returns (MsgGrantAllowanceResponse);
}

// MsgGrantAllowanceRequest validates permission to create a fee grant based on marker admin access. If
// successful a feegrant is recorded where the marker account itself is the grantor
message MsgGrantAllowanceRequest {
  string denom         = 1;
  string administrator = 2;

  // grantee is the address of the user being granted an allowance of another user's funds.
  string grantee = 3;

  // allowance can be any of basic and filtered fee allowance (fee FeeGrant module).
  google.protobuf.Any allowance = 4 [(cosmos_proto.accepts_interface) = "FeeAllowanceI"];
}

// MsgGrantAllowanceResponse defines the Msg/GrantAllowanceResponse response type.
message MsgGrantAllowanceResponse {}

// MsgAddMarkerRequest defines the Msg/AddMarker request type
message MsgAddMarkerRequest {
  cosmos.base.v1beta1.Coin amount = 1
      [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin"];
  string               manager                  = 3;
  string               from_address             = 4;
  MarkerStatus         status                   = 5;
  MarkerType           marker_type              = 6;
  repeated AccessGrant access_list              = 7 [(gogoproto.nullable) = false];
  bool                 supply_fixed             = 8;
  bool                 allow_governance_control = 9;
}

// MsgAddMarkerResponse defines the Msg/AddMarker response type
message MsgAddMarkerResponse {}

// MsgAddAccessRequest defines the Msg/AddAccess request type
message MsgAddAccessRequest {
  string               denom         = 1;
  string               administrator = 2;
  repeated AccessGrant access        = 3 [(gogoproto.nullable) = false];
}

// MsgAddAccessResponse defines the Msg/AddAccess response type
message MsgAddAccessResponse {}

// MsgDeleteAccessRequest defines the Msg/DeleteAccess request type
message MsgDeleteAccessRequest {
  string denom           = 1;
  string administrator   = 2;
  string removed_address = 3;
}
// MsgDeleteAccessResponse defines the Msg/DeleteAccess response type
message MsgDeleteAccessResponse {}

// MsgFinalizeRequest defines the Msg/Finalize request type
message MsgFinalizeRequest {
  string denom         = 1;
  string administrator = 2;
}
// MsgFinalizeResponse defines the Msg/Finalize response type
message MsgFinalizeResponse {}

// MsgActivateRequest defines the Msg/Activate request type
message MsgActivateRequest {
  string denom         = 1;
  string administrator = 2;
}
// MsgActivateResponse defines the Msg/Activate response type
message MsgActivateResponse {}

// MsgCancelRequest defines the Msg/Cancel request type
message MsgCancelRequest {
  string denom         = 1;
  string administrator = 2;
}
// MsgCancelResponse defines the Msg/Cancel response type
message MsgCancelResponse {}

// MsgDeleteRequest defines the Msg/Delete request type
message MsgDeleteRequest {
  string denom         = 1;
  string administrator = 2;
}
// MsgDeleteResponse defines the Msg/Delete response type
message MsgDeleteResponse {}

// MsgMintRequest defines the Msg/Mint request type
message MsgMintRequest {
  cosmos.base.v1beta1.Coin amount = 1
      [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin"];
  string administrator = 2;
}
// MsgMintResponse defines the Msg/Mint response type
message MsgMintResponse {}

// MsgBurnRequest defines the Msg/Burn request type
message MsgBurnRequest {
  cosmos.base.v1beta1.Coin amount = 1
      [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin"];
  string administrator = 2;
}
// MsgBurnResponse defines the Msg/Burn response type
message MsgBurnResponse {}

// MsgWithdrawRequest defines the Msg/Withdraw request type
message MsgWithdrawRequest {
  string   denom                           = 1;
  string   administrator                   = 2;
  string   to_address                      = 3;
  repeated cosmos.base.v1beta1.Coin amount = 4
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}
// MsgWithdrawResponse defines the Msg/Withdraw response type
message MsgWithdrawResponse {}

// MsgTransferRequest defines the Msg/Transfer request type
message MsgTransferRequest {
  cosmos.base.v1beta1.Coin amount = 1
      [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin"];
  string administrator = 3;
  string from_address  = 4;
  string to_address    = 5;
}

// MsgTransferResponse defines the Msg/Transfer response type
message MsgTransferResponse {}

// MsgSetDenomMetadataRequest defines the Msg/SetDenomMetadata request type
message MsgSetDenomMetadataRequest {
  cosmos.bank.v1beta1.Metadata metadata = 1
      [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/x/bank/types.Metadata"];
  string administrator = 2;
}

// MsgSetDenomMetadataResponse defines the Msg/SetDenomMetadata response type
message MsgSetDenomMetadataResponse {}