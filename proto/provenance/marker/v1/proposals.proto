syntax = "proto3";
package provenance.marker.v1;

import "gogoproto/gogo.proto";
import "cosmos/bank/v1beta1/bank.proto";
import "cosmos/base/v1beta1/coin.proto";
import "provenance/marker/v1/marker.proto";
import "provenance/marker/v1/accessgrant.proto";

option go_package = "github.com/provenance-io/provenance/x/marker/types";

option java_package        = "io.provenance.marker.v1";
option java_multiple_files = true;

// AddMarkerProposal defines defines a governance proposal to create a new marker
message AddMarkerProposal {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_stringer) = false;

  string title       = 1;
  string description = 2;

  cosmos.base.v1beta1.Coin amount = 3
      [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin"];
  string               manager                  = 4;
  MarkerStatus         status                   = 5;
  MarkerType           marker_type              = 6;
  repeated AccessGrant access_list              = 7 [(gogoproto.nullable) = false];
  bool                 supply_fixed             = 8;
  bool                 allow_governance_control = 9;
}

// SupplyIncreaseProposal defines a governance proposal to administer a marker and increase total supply of the marker
// through minting coin and placing it within the marker or assigning it directly to an account
message SupplyIncreaseProposal {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_stringer) = false;

  string                   title       = 1;
  string                   description = 2;
  cosmos.base.v1beta1.Coin amount      = 3
      [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin"];
  string target_address = 4; // an optional target address for the minted coin from this request
}

// SupplyDecreaseProposal defines a governance proposal to administer a marker and decrease the total supply through
// burning coin held within the marker
message SupplyDecreaseProposal {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_stringer) = false;

  string                   title       = 1;
  string                   description = 2;
  cosmos.base.v1beta1.Coin amount      = 3
      [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin"];
}

// SetAdministratorProposal defines a governance proposal to administer a marker and set administrators with specific
// access on the marker
message SetAdministratorProposal {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_stringer) = false;

  string               title       = 1;
  string               description = 2;
  string               denom       = 3;
  repeated AccessGrant access      = 4 [(gogoproto.nullable) = false];
}

// RemoveAdministratorProposal defines a governance proposal to administer a marker and remove all permissions for a
// given address
message RemoveAdministratorProposal {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_stringer) = false;

  string          title           = 1;
  string          description     = 2;
  string          denom           = 3;
  repeated string removed_address = 4;
}

// ChangeStatusProposal defines a governance proposal to administer a marker to change its status
message ChangeStatusProposal {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_stringer) = false;

  string       title       = 1;
  string       description = 2;
  string       denom       = 3;
  MarkerStatus new_status  = 4;
}

// WithdrawEscrowProposal defines a governance proposal to withdraw escrow coins from a marker
message WithdrawEscrowProposal {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_stringer) = false;

  string   title                           = 1;
  string   description                     = 2;
  string   denom                           = 3;
  repeated cosmos.base.v1beta1.Coin amount = 4
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  string target_address = 5;
}

// SetDenomMetadataProposal defines a governance proposal to set the metadata for a denom
message SetDenomMetadataProposal {
  option (gogoproto.goproto_stringer) = false;

  string                       title       = 1;
  string                       description = 2;
  cosmos.bank.v1beta1.Metadata metadata    = 3
      [(gogoproto.nullable) = false, (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/x/bank/types.Metadata"];
}