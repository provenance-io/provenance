syntax = "proto3";
package provenance.trigger.v1;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "provenance/trigger/v1/trigger.proto";

option go_package          = "github.com/provenance-io/provenance/x/trigger/types";
option java_package        = "io.provenance.trigger.v1";
option java_multiple_files = true;

// Msg
service Msg {
  // CreateTrigger is the RPC endpoint for creating a trigger
  rpc CreateTrigger(MsgCreateTriggerRequest) returns (MsgCreateTriggerResponse);
}

// MsgCreateTriggerRequest is the request type for creating a trigger RPC
message MsgCreateTriggerRequest {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_stringer) = true;

  // The signing authority for the request
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // The event that must be detected for the trigger to fire.
  Event event = 2 [(gogoproto.nullable) = false];
  // The message to run when the trigger fires.
  google.protobuf.Any action = 3;
}

// MsgCreateTriggerResponse is the response type for creating a trigger RPC
message MsgCreateTriggerResponse {
  // reward program id that is generated on creation.
  uint64 id = 1;
}