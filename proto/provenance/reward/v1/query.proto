syntax = "proto3";
package provenance.reward.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "provenance/reward/v1/reward.proto";

option go_package          = "github.com/provenance-io/provenance/x/reward/types";
option java_package        = "io.provenance.reward.v1";
option java_multiple_files = true;

// Query defines the gRPC querier service for reward module.
service Query {

  // returns RewardProgram by id
  rpc RewardProgramByID(RewardProgramByIDRequest) returns (RewardProgramByIDResponse) {
    option (google.api.http).get = "/provenance/rewards/v1/reward_program_by_id/{id}";
  }
  // returns RewardPrograms both upcoming and active
  rpc RewardPrograms(RewardProgramsRequest) returns (RewardProgramsResponse) {
    option (google.api.http).get = "/provenance/rewards/v1/reward_programs";
  }

  // returns all ClaimPeriodRewardDistributionResponse
  rpc ClaimPeriodRewardDistributions(ClaimPeriodRewardDistributionRequest)
      returns (ClaimPeriodRewardDistributionResponse) {
    option (google.api.http).get = "/provenance/rewards/v1/claim_period_reward_distributions";
  }

  // returns a ClaimPeriodRewardDistribution by rewardId and claimPeriodId
  rpc ClaimPeriodRewardDistributionsByID(ClaimPeriodRewardDistributionByIDRequest)
      returns (ClaimPeriodRewardDistributionByIDResponse) {
    option (google.api.http).get =
        "/provenance/rewards/v1/claim_period_reward_distributions/{rewardId}/claimPeriods/{claimPeriodId}";
  }

  // returns a ClaimPeriodRewardDistribution by address
  rpc ClaimPeriodRewardDistributionsByAddress(ClaimPeriodRewardDistributionByAddressRequest)
      returns (ClaimPeriodRewardDistributionByIDResponse) {
    option (google.api.http).get = "/provenance/rewards/v1/claim_period_reward_distributions/{address}";
  }
}

message RewardProgramByIDRequest {
  uint64 id = 1;
}

message RewardProgramByIDResponse {
  RewardProgram reward_program = 1;
}

message RewardProgramsRequest {
  enum QueryType {
    ALL         = 0;
    PENDING     = 1;
    ACTIVE      = 2;
    OUTSTANDING = 3;
    FINISHED    = 4;
  }
  QueryType query_type = 1;
}

message RewardProgramsResponse {
  repeated RewardProgram reward_programs = 1 [(gogoproto.nullable) = false];
}

message ClaimPeriodRewardDistributionRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 99;
}
message ClaimPeriodRewardDistributionResponse {
  repeated ClaimPeriodRewardDistribution claim_period_reward_distribution = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination                       = 99;
}

message ClaimPeriodRewardDistributionByIDRequest {
  uint64 rewardId      = 1;
  uint64 claimPeriodId = 2;
}

message ClaimPeriodRewardDistributionByAddressRequest {
  string address = 1;
}

message ClaimPeriodRewardDistributionByIDResponse {
  ClaimPeriodRewardDistribution claim_period_reward_distribution = 1;
}