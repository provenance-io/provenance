syntax = "proto3";
package provenance.reward.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "cosmos/base/v1beta1/coin.proto";
import "provenance/reward/v1/reward.proto";

option go_package          = "github.com/provenance-io/provenance/x/reward/types";
option java_package        = "io.provenance.reward.v1";
option java_multiple_files = true;

// Msg
service Msg {

  rpc CreateRewardProgram(MsgCreateRewardProgramRequest) returns (MsgCreateRewardProgramResponse);

  rpc ClaimRewards(MsgClaimRewardRequest) returns (MsgClaimRewardResponse);
}

message MsgCreateRewardProgramRequest {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_stringer) = false;

  string title                               = 1; // title for the reward program
  string description                         = 2; // description for the reward program
  string distribute_from_address             = 3; // provider address for the reward program funds and signer of message
  cosmos.base.v1beta1.Coin total_reward_pool = 4
      [(gogoproto.nullable) = false]; // total reward pool for the reward program
  cosmos.base.v1beta1.Coin max_reward_per_claim_address = 5
      [(gogoproto.nullable) = false]; // maximum amount of funds an address can be rewarded per claim period
  google.protobuf.Timestamp program_start_time = 6 [
    (gogoproto.stdtime)  = true,
    (gogoproto.nullable) = false,
    (gogoproto.jsontag)  = "program_start_time,omitempty",
    (gogoproto.moretags) = "yaml:\"program_start_time,omitempty\""
  ];                                                // start time of the reward program
  uint64                    reward_period_days = 7; // number of days the reward program will exist
  uint64                    claim_period_days  = 8; // number of days a claim period will exist
  uint64                    expire_days = 9; // number of days before a reward program will expire after it has ended
  repeated QualifyingAction qualifying_actions = 16 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"qualifying_actions"
  ]; // The actions that count towards the reward
}

message MsgCreateRewardProgramResponse {
  uint64 id = 1;
}

message MsgClaimRewardRequest {
  uint64 reward_program_id     = 1;
  string distribute_to_address = 2;
}

message MsgClaimRewardResponse {
  option (gogoproto.equal)                                         = true;
  uint64                             reward_program_id             = 1;
  cosmos.base.v1beta1.Coin           total_reward_claim            = 2 [(gogoproto.nullable) = false];
  repeated ClaimedRewardPeriodDetail claimed_reward_period_details = 3;
}

message ClaimedRewardPeriodDetail {
  option (gogoproto.equal)                     = true;
  uint64                   claim_period_id     = 1;
  uint64                   total_shares        = 2;
  cosmos.base.v1beta1.Coin claim_period_reward = 3 [(gogoproto.nullable) = false];
}