syntax = "proto3";
package provenance.msgfees.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package          = "github.com/provenance-io/provenance/x/msgfees/types";
option java_package        = "io.provenance.msgfees.v1";
option java_multiple_files = true;

// Params defines the set of params for the msgfees module.
message Params {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_stringer) = false;
  // constant used to calculate fees when gas fees shares denom with msg fee
  cosmos.base.v1beta1.Coin floor_gas_price = 2
      [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"floor_gas_price\""];
  // total nhash per usd mil for converting usd to nhash
  uint64 nhash_per_usd_mil = 3;
}

// MsgFee is the core of what gets stored on the blockchain
// it consists of two parts
// 1. the msg type url, i.e. /cosmos.bank.v1beta1.MsgSend
// 2. minimum additional fees(can be of any denom)
message MsgFee {
  string msg_type_url = 1;
  // additional_fee can pay in any Coin( basically a Denom and Amount, Amount can be zero)
  cosmos.base.v1beta1.Coin additional_fee = 2
      [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"additional_fee\""];
}

// EventMsgFee final event property for msg fee on type
message EventMsgFee {
  string msg_type  = 1;
  string count     = 2;
  string total     = 3;
  string recipient = 4;
}

// EventMsgFees event emitted with summary of msg fees
message EventMsgFees {
  repeated EventMsgFee msg_fees = 1 [(gogoproto.nullable) = false];
}
